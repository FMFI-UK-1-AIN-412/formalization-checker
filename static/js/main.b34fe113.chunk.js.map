{"version":3,"sources":["config.js","redux/fetchData.js","redux/formula_classes.js","redux/helpers.js","redux/addExerciseSlice.js","redux/exercisesSlice.js","redux/progressPropositionsSlice.js","redux/solveExerciseSlice.js","redux/userSlice.js","redux/adminsSlice.js","components/login/ProtectedRoute.js","components/login/LoginForm.js","components/solveExercise/ExerciseList.js","components/addExercise/SyntaxError.js","components/solveExercise/Evaluation.js","components/solveExercise/Solution.js","components/solveExercise/SolveExercise.js","components/addExercise/SymbolsInput.js","components/addExercise/Constants.js","components/addExercise/Predicates.js","components/addExercise/Functions.js","components/addExercise/Clashes.js","components/addExercise/Constraint.js","components/addExercise/LanguageSection.js","components/addExercise/Formalization.js","components/addExercise/Proposition.js","components/addExercise/PropositionsSection.js","components/addExercise/ExerciseTitle.js","components/addExercise/Description.js","components/addExercise/SaveButtonGroup.js","components/addExercise/AddExercise.js","components/login/AdminRoute.js","components/studentProgress/Exercises.js","components/studentProgress/UserSolutionsList.js","components/studentProgress/UsersToExercise.js","components/addAdmins/UserList.js","components/editExercise/EditExercise.js","components/editExercise/EditExerciseList.js","App.js","serviceWorker.js","index.js","redux/store.js","redux/backendSlice.js"],"names":["require","config","module","exports","BACKEND_URL","process","CLIENT_ID","REDIRECT","BASE_NAME","fetchData","route","method","body","undefined","_","getState","a","headers","localStorage","getItem","JSON","stringify","backendUrl","backend","url","fetch","response","ok","json","Error","status","statusText","BinaryFormula","lhs","rhs","this","addAll","getFreeVariables","QuantifiedFormula","originalSymbol","subf","res","delete","Variable","Set","Constant","FunctionApplication","args","reduce","fvs","arg","PredicateAtom","EqualityAtom","Negation","Conjunction","Disjunction","Implication","Equivalence","ExistentialQuant","UniversalQuant","b","forEach","elem","add","arrayToArityMap","symbols","arityMap","Map","x","has","name","set","arity","parseLanguageSubset","input","parser","array","error","checkArity","symbol","expected","get","length","parseFormalization","constants","predicates","functions","nonLogicalSymbols","keys","language","isConstant","isPredicate","isFunction","isVariable","factories","functionApplication","ee","predicateAtom","variable","v","constant","c","equalityAtom","negation","f","conjunction","disjunction","implication","equivalence","existentialQuant","universalQuant","fvars","size","location","start","column","line","offset","end","message","Array","from","join","makeStructure","iCWithUnnamed","iPF","C_L","D","Object","values","sort","iC","fromEntries","entries","filter","iP","iF","addNewExercise","createAsyncThunk","dispatch","rejectWithValue","exercise","selectExercise","saveExercise","removeExercise","fetchSavedExercise","exercise_id","fetchExercise","addExerciseSlice","createSlice","initialState","title","description","constraint","id","propositions","proposition","proposition_id","formalizations","constraints","added","reducers","updateExerciseTitle","state","action","payload","updateDescription","updateConstants","updatePredicates","updateFunctions","updateConstraint","updateInformalValue","reducer","value","i","prepare","updateFormalization","j","addNewProposition","push","addNewFormalization","removeProposition","splice","removeFormalization","updateConstraints","changeStatus","extraReducers","pending","fulfilled","rejected","formalization","actions","checkForDuplicates","found","selectExerciseTitle","addExercise","selectConstantsParsed","createSelector","result","parseConstants","selectPredicatesParsed","parsePredicates","selectFunctionsParsed","parseFunctions","selectLanguage","constantsParsed","predicatesParsed","functionsParsed","containsErrors","containsDuplicates","map","errorMessage","checkForClashes","selectPropositions","selectFormalizations","selectInformalValue","selectFormalization","parseFormulaWithPrecedence","selectConstraints","selectConstraint","checkExercise","fetchAllExercises","exercisesSlice","exercises","changeExerciseStatus","selectExercises","selectStatus","selectError","fetchAllUsersToExercise","fetchUsersSolutions","user_name","progressPropositionsSlice","users","solutions","user","meta","selectUsers","selectUsersSolution","selectUserName","username","evaluate","solution","solveExerciseSlice","update","p","evaluation","solveExercise","selectEvaluation","selectEvalStatus","selectEvalError","logIn","password","data","console","logInByGithub","code","token","userSlice","isLoggedIn","isAdmin","usernameValue","passwordValue","updateUsername","updatePassword","logOut","removeItem","setUser","parse","Buffer","split","toString","setItem","selectUser","fetchAllUsers","saveAdmins","admins","adminsSlice","changed","addChanged","is_admin","key","selectAllUsers","allUsers","selectChangedAdmins","connect","Component","component","rest","render","to","pathname","mapDispatchToProps","useEffect","Spinner","animation","variant","window","href","match","Form","Group","Label","Control","type","placeholder","onChange","e","target","Text","className","Button","onClick","preventDefault","replace","onSelect","content","exercises_list","ListGroup","Item","as","Link","Alert","SyntaxError","str_1","substring","str_2","str_3","str","Feedback","ownProps","getMessage","children","CorrectFeedback","ErrorFeedback","msgDiscuss","FailedFeedback","IncorrectFeedback","summary","open","Interpretation","interpFunc","viewValue","subscript","viewSetValue","tuples","tuple","Structure","Counterexample","structure","index","msgNotFound","solutionToFormalization","formalizationToSolution","languageContants","correctImpliesInput","m1","counterexample","domainFormalizationToSolution","symbolsFormalizationToSolution","inputImpliesCorrect","m2","domainSolutionToFormalization","symbolsSolutionToFormalization","selectSolution","handleChange","controlId","rows","isInvalid","disabled","SolveExercise","exerciseId","propositions_list","acceptedSymbolsView","Table","striped","preferredToken","acceptedTokens","Fragment","props","useParams","SymbolsInput","symbolsKind","symbolsSet","InputGroup","hasValidation","Prepend","Append","mapStateToProps","LanguageSection","remove","data2","value2","error2","cannotBeRemoved","tag","formalizationRemovable","formalizations_list","_x","propositionFeedback","feedback","SaveButtonGroup","attempted","bordered","hover","s","table","first","is_correct","date","user_list","log","lastattemptcorrec","solved","successful_attempts","last_attempt_date","attempts","colSpan","changedAdmins","defaultChecked","Row","Col","xs","md","order","span","loginInfo","basename","Navbar","bg","sticky","Nav","Container","exact","path","ExerciseList","UserList","Exercises","UsersToExercise","UserSolutionsList","LoginForm","AddExercise","EditExerciseList","EditExercise","Boolean","hostname","store","configureStore","addExerciseReducer","exercisesReducer","progressPropositionsReducer","adminsReducer","solveExerciseReducer","userReducer","initStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b34fe113.chunk.js","sourcesContent":["const dotenv = require('dotenv');\n\ndotenv.config();\n\nmodule.exports = {\n     BACKEND_URL: process.env.REACT_APP_BACKEND_URL,\n     CLIENT_ID: process.env.REACT_APP_CLIENT_ID,\n     REDIRECT: process.env.REACT_APP_REDIRECT,\n     BASE_NAME: process.env.REACT_APP_BASE_NAME\n}\n\n","export const fetchData = (route, method, body = undefined) => {\n  return async (_, getState) => {\n    const config = {\n      method: method,\n      headers: { \"Content-Type\": \"application/json\"}\n    }\n    if(localStorage.getItem(\"formalization_checker_token\") !== undefined){\n      config.headers[\"Authorization\"] = \"Bearer \" + localStorage.getItem(\"formalization_checker_token\");\n    }\n    if (body) {\n      config.body = JSON.stringify(body)\n    }\n  \n    const backendUrl = getState().backend.url;\n    let response = await fetch(backendUrl + route, config);\n  \n    if (response.ok) {\n      return response.json();\n    }\n    \n    throw new Error(response.status + \" \" + response.statusText);\n  }\n}\n","export class BinaryFormula {\n  constructor(lhs, rhs) {\n    this.lhs = lhs;\n    this.rhs = rhs;\n  }\n\n  getFreeVariables() {\n    return addAll(this.lhs.getFreeVariables(), this.rhs.getFreeVariables());\n  }\n}\n\nexport class QuantifiedFormula {\n  constructor(originalSymbol, subf) {\n    this.originalSymbol = originalSymbol;\n    this.subf = subf;\n  }\n  getFreeVariables() {\n    const res = this.subf.getFreeVariables()\n    res.delete(this.originalSymbol);\n    return res;\n  }\n}\n\nexport class Variable {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set([this.originalSymbol]);\n\n  }\n}\n\nexport class Constant {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set();\n  }\n}\n\nexport class FunctionApplication {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables(){\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class PredicateAtom {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables() {\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class EqualityAtom extends BinaryFormula{\n}\n\nexport class Negation {\n  constructor(subf) {\n    this.subf = subf;\n  }\n\n  getFreeVariables(){\n    return this.subf.getFreeVariables();\n  }\n}\n\nexport class Conjunction extends BinaryFormula{\n}\n\nexport class Disjunction extends BinaryFormula{\n}\n\nexport class Implication extends BinaryFormula{\n}\n\nexport class Equivalence extends BinaryFormula{\n}\n\nexport class ExistentialQuant extends QuantifiedFormula{\n}\n\nexport class UniversalQuant extends QuantifiedFormula{\n}\n\nfunction addAll(a, b) {\n  b.forEach((elem) => a.add(elem));\n  return a;\n}\n","import {\n  Conjunction, Constant,\n  Disjunction, EqualityAtom,\n  Equivalence,\n  ExistentialQuant,\n  FunctionApplication,\n  Implication, Negation, PredicateAtom, UniversalQuant,\n  Variable\n} from \"./formula_classes\";\n\nexport const arrayToArityMap = (symbols) => {\n  let arityMap = new Map();\n  for (let x of symbols) {\n    if (!arityMap.has(x.name)) {\n      arityMap.set(x.name, x.arity);\n    }\n  }\n  return arityMap;\n}\n\nexport const parseLanguageSubset = (input, parser) => {\n  try {\n    let result = parser(input);\n    return {\n      array: result,\n      error: null\n    };\n  } catch (error) {\n    return {\n      array: [],\n      error: error\n    };\n  }\n}\n\nconst checkArity = (symbol, args, arityMap, {expected}) => {\n  const a = arityMap.get(symbol);\n  if (args.length !== a) {\n    expected(`${a} argument${(a === 1 ? '' : 's')} to ${symbol}`);\n  }\n}\n\nexport const parseFormalization = (input, constants, predicates, functions, parser) => {\n  const nonLogicalSymbols = new Set([\n    ...constants,\n    ...predicates.keys(),\n    ...functions.keys()\n  ]);\n\n  const language = {\n    isConstant: (x) => constants.has(x),\n    isPredicate: (x) => predicates.has(x),\n    isFunction: (x) => functions.has(x),\n    isVariable: (x) => !nonLogicalSymbols.has(x)\n  };\n\n  const factories = {\n    functionApplication: (symbol, args, ee) => {\n      checkArity(symbol, args, functions, ee);\n      return new FunctionApplication(symbol, args);\n    },\n    predicateAtom: (symbol, args, ee) => {\n      checkArity(symbol, args, predicates, ee);\n      return new PredicateAtom(symbol, args);\n    },\n    variable: (v, _) =>  new Variable(v , v),\n    constant: (c, _) => new Constant(c, c),\n    equalityAtom: (lhs, rhs, _) => new EqualityAtom(lhs, rhs),\n    negation: (f, _) => new Negation(f),\n    conjunction: (lhs, rhs, _) => new Conjunction(lhs, rhs),\n    disjunction: (lhs, rhs, _) => new Disjunction(lhs, rhs),\n    implication: (lhs, rhs, _) => new Implication(lhs, rhs),\n    equivalence: (lhs, rhs, _) => new Equivalence(lhs, rhs),\n    existentialQuant: (v, f, _) => new ExistentialQuant(v, f),\n    universalQuant: (v, f, _) => new UniversalQuant(v, f),\n  };\n\n  try {\n    const fvars = parser(input, language, factories).getFreeVariables();\n    if (fvars.size > 0) {\n      throw ({\n        location: {\n          start: {\n            column: 0, line: 0, offset: 0\n          },\n          end: {\n            column: 0, line: 0, offset: input.length\n          }\n        },\n        message:\n          `The formula should be closed, but the following\n          variable${fvars.size === 1 ? \" is\" :  \"s are\"} free:\n          ${Array.from(fvars).join(\", \")}.`\n      });\n    }\n    return null;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport const makeStructure = (iCWithUnnamed, iPF, C_L) => (\n  !!iCWithUnnamed\n  ? {\n    D: Array.from(new Set(Object.values(iCWithUnnamed))).sort(),\n    iC: Object.fromEntries(\n      Object.entries(iCWithUnnamed).filter(([name, _]) => C_L.has(name))\n    ),\n    iP: iPF,\n    iF: null,\n  }\n  : undefined\n);\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseLanguageSubset,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const addNewExercise = createAsyncThunk(\n  'addExercise/addNewExercise',\n  async (_, { dispatch, getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await dispatch(fetchData(\n        '/api/exercises', 'POST', exercise\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const saveExercise = createAsyncThunk(\n  'saveExercise',\n  async (_, { dispatch, getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await dispatch(fetchData(\n        '/api/exercises/edit', 'POST', exercise\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const removeExercise = createAsyncThunk(\n  'saveExercise',\n  async (_, { dispatch, getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await dispatch(fetchData(\n        '/api/exercises/edit/remove', 'POST', exercise\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const fetchSavedExercise = createAsyncThunk(\n  'fetchSavedExercise',\n  async (exercise_id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n          `/api/exercises/edit/${exercise_id}`, 'GET'\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const fetchExercise = createAsyncThunk(\n    'fetchExercise',\n    async (exercise_id, { dispatch, rejectWithValue }) => {\n      try {\n        let response = await dispatch(fetchData(\n            `/api/exercises/${exercise_id}`, 'GET'\n        ));\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\n/* slice */\nexport const addExerciseSlice = createSlice({\n  name: 'addExercise',\n  initialState: {\n    title: '',\n    description: '',\n    constants: '',\n    predicates: '',\n    functions: '',\n    constraint: '',\n    id: '',\n    propositions: [{\n      proposition: '',\n      proposition_id: '',\n      formalizations: [''],\n      constraints: ['']\n    }],\n\n    status: 'idle',\n    error: null,\n    added: null,\n  },\n  reducers: {\n    updateExerciseTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    updateDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    updateConstants: (state, action) => {\n      state.constants = action.payload;\n    },\n    updatePredicates: (state, action) => {\n      state.predicates = action.payload;\n    },\n    updateFunctions: (state, action) => {\n      state.functions = action.payload;\n    },\n    updateConstraint: (state, action) => {\n      state.constraint = action.payload;\n    },\n    updateInformalValue: {\n      reducer: (state, action) => {\n        const { value, i } = action.payload;\n        state.propositions[i].proposition = value;\n      },\n      prepare: (value, i) => {\n        return { payload: { value, i } };\n      }\n    },\n    updateFormalization: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].formalizations[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j } };\n      }\n    },\n    addNewProposition: (state) => {\n      state.propositions.push({\n        proposition: '',\n        formalizations: [''],\n        constraints: ['']\n      });\n    },\n    addNewFormalization: (state, action) => {\n      const i = action.payload;\n      state.propositions[i].formalizations.push('');\n      state.propositions[i].constraints.push('');\n    },\n    removeProposition: (state, action) => {\n      const i = action.payload;\n      state.propositions.splice(i, 1);\n    },\n    removeFormalization: {\n      reducer: (state, action) => {\n        const { i, j } = action.payload;\n        state.propositions[i].formalizations.splice(j, 1);\n        state.propositions[i].constraints.splice(j, 1);\n      },\n      prepare: (i, j) => {\n        return { payload: { i, j } };\n      }\n    },\n    updateConstraints: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].constraints[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j} };\n      }\n    },\n    changeStatus: {\n      reducer: (state, action) => {\n        state.added = null;\n        state.status = 'idle';\n        state.title = '';\n        state.description = '';\n        state.constants = '';\n        state.predicates = '';\n        state.functions = '';\n        state.constraint = '';\n        state.id = '';\n        state.propositions = [{\n          proposition: '',\n          proposition_id: '',\n          formalizations: [''],\n          constraints: ['']\n        }];\n\n      }\n    },\n  },\n  extraReducers: {\n    [addNewExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [addNewExercise.fulfilled]: (state, action) => {\n      state.added = true;\n      state.title =  ''\n      state.description =  ''\n      state.constants =  ''\n      state.predicates = ''\n      state.functions =  ''\n      state.constraint = ''\n      state.propositions= [{\n        \"proposition\": '',\n        \"formalizations\": [''],\n        \"constraints\": ['']\n      }]\n\n      state.status = 'idle'\n    },\n    [addNewExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [saveExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [saveExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.title = '';\n      state.description = '';\n      state.constants = '';\n      state.predicates = '';\n      state.functions = '';\n      state.constraint = '';\n      state.id = '';\n      state.propositions = [{\n        proposition: '',\n        proposition_id: '',\n        formalizations: [''],\n        constraints: ['']\n      }];\n    },\n    [saveExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [removeExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [removeExercise.fulfilled]: (state, action) => {\n      state.status = 'removed';\n      state.title = '';\n      state.description = '';\n      state.constants = '';\n      state.predicates = '';\n      state.functions = '';\n      state.constraint = '';\n      state.id = '';\n      state.propositions = [{\n        proposition: '',\n        proposition_id: '',\n        formalizations: [''],\n        constraints: ['']\n      }];\n    },\n    [removeExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n    },\n    [fetchExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchSavedExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchSavedExercise.fulfilled]: (state, action) => {\n      state.status = 'idle';\n      const exercise = action.payload;\n      state.title = exercise.title;\n      state.description = exercise.description;\n      state.constants = exercise.constants;\n      state.predicates = exercise.predicates;\n      state.functions = exercise.functions;\n      state.constraint = exercise.constraints === undefined? \"\": exercise.constraints;\n      state.id = exercise.exercise_id;\n      state.propositions = [];\n      for (let i = 0; i < exercise.propositions.length; i++) {\n        let formalization = [];\n        let constraint = [];\n        for (let j = 0; j < exercise.propositions[i].formalization.length; j++) {\n          formalization.push(exercise.propositions[i].formalization[j].formalization);\n          constraint.push(exercise.propositions[i].formalization[j].constraints);\n        }\n        state.propositions.push({\n          proposition: exercise.propositions[i].proposition,\n          proposition_id: exercise.propositions[i].proposition_id,\n          formalizations: formalization,\n          constraints: constraint\n        })\n      }\n    },\n    [fetchSavedExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n  }\n});\n\n\n/* export actions */\nexport const {\n  updateExerciseTitle,\n  updateDescription,\n  updateConstants,\n  updatePredicates,\n  updateFunctions,\n  updateInformalValue,\n  updateFormalization,\n  addNewProposition,\n  addNewFormalization,\n  removeProposition,\n  removeFormalization,\n  updateConstraints,\n  updateConstraint,\n    changeStatus\n} = addExerciseSlice.actions;\n\n\n/* definition of helper functions used in selectors */\n\nfunction checkForDuplicates(values, name) {\n  let found = new Set();\n  for (let x of values) {\n    if (found.has(x)) {\n      return `Found duplicate symbol: '${x}' in ${name}`;\n    } else {\n      found.add(x);\n    }\n  }\n\n  return null;\n}\n\nfunction checkForClashes(constants, predicates, functions) {\n  for (let x of constants) {\n    if (predicates.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and predicates`;\n    }\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and functions`;\n    }\n  }\n\n  for (let x of predicates.keys()) {\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in predicates and functions`;\n    }\n  }\n\n  return null;\n}\n\n\n/* selectors */\n\nexport const selectExerciseTitle = (state) => {\n  return {\n    value: state.addExercise.title\n  };\n};\n\nexport const selectDescription = (state) => {\n  return {\n    value: state.addExercise.description\n  };\n};\n\nexport const selectConstantsParsed = createSelector(\n  [ state => state.addExercise.constants ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseConstants);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectPredicatesParsed = createSelector(\n  [ state => state.addExercise.predicates ],\n  (value) => {\n    let result = parseLanguageSubset(value, parsePredicates);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectFunctionsParsed = createSelector(\n  [ state => state.addExercise.functions ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseFunctions);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectLanguage = createSelector(\n  [\n    selectConstantsParsed,\n    selectPredicatesParsed,\n    selectFunctionsParsed\n  ],\n  (constantsParsed, predicatesParsed, functionsParsed) => {\n    let constants = new Set(constantsParsed.array);\n    let predicates = arrayToArityMap(predicatesParsed.array);\n    let functions = arrayToArityMap(functionsParsed.array);\n\n    let containsErrors = constantsParsed.error\n      || predicatesParsed.error\n      || functionsParsed.error;\n    let containsDuplicates = checkForDuplicates(constantsParsed.array, \"constants\")\n      || checkForDuplicates(predicatesParsed.array.map(x => x.name), \"predicates\")\n      || checkForDuplicates(functionsParsed.array.map(x => x.name), \"functions\");\n    \n    let errorMessage = null;\n    if (containsErrors) {\n      errorMessage = \"Language definition contains errors\";\n    } else if (containsDuplicates) {\n      errorMessage = containsDuplicates;\n    } else {\n      errorMessage = checkForClashes(constants, predicates, functions);\n    }\n\n    return { constants, predicates, functions, errorMessage };\n  }\n);\n\nexport const selectPropositions = (state) => {\n  return state.addExercise.propositions;\n};\n\nexport const selectFormalizations = (state, i) => {\n  return state.addExercise.propositions[i].formalizations;\n};\n\nexport const selectInformalValue = (state, i) => {\n  return state.addExercise.propositions[i].proposition;\n};\n\nexport const selectFormalization = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].formalizations[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\nexport const selectConstraints = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].constraints[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\nexport const selectConstraint = createSelector(\n  [\n    (state) => state.addExercise.constraint,\n    (state) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\n\nconst selectExercise = (state) => {\n  let language = selectLanguage(state);\n  if (language.errorMessage || selectExerciseTitle(state).value === \"\") {\n    return null;\n  }\n\n  let propositions = selectPropositions(state);\n  for (let i = 0; i < propositions.length; i++) {\n    if (propositions[i].proposition === \"\") {\n      return null;\n    }\n    let formalizations = propositions[i].formalizations;\n    for (let j = 0; j < formalizations.length; j++) {\n      let formalization = selectFormalization(state, i, j);\n      if (formalization.error) {\n        return null;\n      }\n      let constraint = selectConstraints(state, i, j);\n      if (constraint.error) {\n        return null;\n      }\n    }\n  }\n  \n  return {\n    title: state.addExercise.title,\n    description: state.addExercise.description,\n    constants: state.addExercise.constants,\n    predicates: state.addExercise.predicates,\n    functions: state.addExercise.functions,\n    constraint: state.addExercise.constraint,\n    id: state.addExercise.id,\n    propositions: state.addExercise.propositions,\n  };\n};\n\nexport const checkExercise = (state) => {\n  let exercise = selectExercise(state);\n  return !exercise;\n};\n\n\nexport default addExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport { fetchData } from './fetchData';\n\n\n/* async actions */\n\nexport const fetchAllExercises = createAsyncThunk(\n  'exercises/fetchAllExercises',\n  async (_, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData('/api/exercises', 'GET'));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const exercisesSlice = createSlice({\n  name: 'exercises',\n  initialState: {\n    exercises: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {changeExerciseStatus: {\n      reducer: (state, action) => {\n        state.added = null;\n        state.status = 'idle';\n      }\n    },},\n  extraReducers: {\n    [fetchAllExercises.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllExercises.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercises = action.payload;\n    },\n    [fetchAllExercises.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n/* export actions */\nexport const {\n  changeExerciseStatus\n} = exercisesSlice.actions;\n\n/* selectors */\n\nexport const selectExercises = (state) => {\n  return state.exercises.exercises;\n};\n\nexport const selectPropositions = (state) => {\n  return state.exercises;\n};\n\nexport const selectStatus = (state) => {\n  return state.exercises.status;\n};\n\nexport const selectError = (state) => {\n  return state.exercises.error;\n};\n\n\nexport default exercisesSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport { fetchData } from './fetchData';\n\n\n/* async actions */\n\nexport const fetchAllUsersToExercise = createAsyncThunk(\n    'exercises/fetchAllUsersToExercise',\n    async (exercise_id, { dispatch, rejectWithValue }) => {\n      try {\n        let response = await dispatch(fetchData(`/api/exercises/progress/${exercise_id}`, 'GET'));\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\nexport const fetchUsersSolutions = createAsyncThunk(\n    'exercises/fetchUsersSolutions',\n    async ({exercise_id, user_name}, { dispatch, rejectWithValue }) => {\n      try {\n        let response = await dispatch(fetchData(`/api/exercises/progress/user/${user_name}/${exercise_id}`, 'GET'));\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\n\n/* slice */\nexport const progressPropositionsSlice = createSlice({\n  name: 'users',\n  initialState: {\n    users: [],\n    status: 'idle',\n    error: null,\n    solutions: [],\n    exercise_id: null,\n    user: '',\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllUsersToExercise.pending]: (state, action) => {\n      state.status = 'loading';\n      state.exercise_id = action.meta.arg\n    },\n    [fetchAllUsersToExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = action.payload;\n    },\n    [fetchAllUsersToExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchUsersSolutions.pending]: (state, action) => {\n      state.status = 'loading';\n      state.user = action.meta.arg.user_name;\n    },\n    [fetchUsersSolutions.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.solutions = action.payload;\n    },\n    [fetchUsersSolutions.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n\n/* selectors */\n\nexport const selectUsers = (state) => {\n  return state.propositions.users;\n};\n\nexport const selectProposition = (state) => {\n  if(state.propositions.users[0] !== undefined){\n    return state.propositions.users[0].proposition_id;\n  }\n  return null;\n};\n\nexport const selectExerciseId = (state) => {\n  return state.propositions.exercise_id;\n};\n\nexport const selectExerciseTitle = (state) => {\n  for(let i = 0; i < state.exercises.exercises.length; i++){\n    if(state.exercises.exercises[i].exercise_id === state.propositions.exercise_id){\n      return state.exercises.exercises[i].title\n    }\n  }\n  return null;\n};\n\n\nexport const selectUsersSolution = (state) => {\n  return state.propositions.solutions;\n};\nexport const selectUserName = (state) => {\n  return state.propositions.user;\n};\n\nexport const selectStatus = (state) => {\n  return state.propositions.status;\n};\n\nexport const selectError = (state) => {\n  return state.propositions.status;\n};\n\n\nexport default progressPropositionsSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const fetchExercise = createAsyncThunk(\n  'solveExercise/fetchExercise',\n  async ({exercise_id, user_name}, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n        `/api/exercises/${exercise_id}`, 'POST', { username: user_name}\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const evaluate = createAsyncThunk(\n  'solveExercise/evaluate',\n  async ({ exercise_id, proposition_id, solution, user }, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n        `/api/exercises/${exercise_id}/${proposition_id}`, 'POST',\n        { solution, user}\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const solveExerciseSlice = createSlice({\n  name: 'solveExercise',\n  initialState: {\n    exercise: null,\n    status: 'idle',\n    error: null,\n\n    constants: [],\n    predicates: [],\n    functions: [],\n\n    solutions: {}\n  },\n  reducers: {\n    update: {\n      reducer: (state, action) => {\n        const { value, id } = action.payload;\n        state.solutions[id].solution = value;\n      },\n      prepare: (value, id) => {\n        return { payload: { value, id } };\n      }\n    }\n  },\n  extraReducers: {\n    [fetchExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercise = action.payload;\n      state.constants = parseConstants(state.exercise.constants);\n      state.predicates = parsePredicates(state.exercise.predicates);\n      state.functions = parseFunctions(state.exercise.functions);\n      for (let p of state.exercise.propositions) {\n        state.solutions[p.proposition_id] = {\n\n\n          evaluation: null,\n\n          status: 'idle',\n          error: null,\n        };\n        if(p.solution === null || p.solution === undefined){\n          state.solutions[p.proposition_id][\"solution\"] = '';\n        }\n        else{\n          state.solutions[p.proposition_id][\"solution\"] = p.solution\n        }\n      }\n    },\n    [fetchExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n\n    [evaluate.pending]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'loading';\n    },\n    [evaluate.fulfilled]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let evaluation = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'succeeded';\n      solution.evaluation = evaluation;\n    },\n    [evaluate.rejected]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let { error } = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'failed';\n      solution.error = error;\n    }\n  }\n});\n\n\n/* export actions */\nexport const {\n  update\n} = solveExerciseSlice.actions;\n\n\n/* selectors */\n\nexport const selectExercise = (state) => {\n  return state.solveExercise.exercise;\n};\n\nexport const selectSolution = (state, id) => {\n  const value = state.solveExercise.solutions[id].solution;\n  let error = parseFormalization(\n    value, new Set(state.solveExercise.constants),\n    arrayToArityMap(state.solveExercise.predicates),\n    arrayToArityMap(state.solveExercise.functions),\n    parseFormulaWithPrecedence\n  );\n  return { value, error};\n};\n\nexport const selectStatus = (state) => {\n  return state.solveExercise.status;\n};\n\nexport const selectError = (state) => {\n  return state.solveExercise.error;\n};\n\nexport const selectEvaluation = (state, id) => {\n  return state.solveExercise.solutions[id].evaluation;\n};\n\nexport const selectEvalStatus = (state, id) => {\n  return state.solveExercise.solutions[id].status;\n};\n\nexport const selectEvalError = (state, id) => {\n  return state.solveExercise.solutions[id].error;\n};\n\n\nexport default solveExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\nimport { Buffer } from 'buffer';\n\n\n\n/* async actions */\n\nexport const logIn = createAsyncThunk(\n  'user/logIn',\n  async ({ username, password }, { dispatch, rejectWithValue }) => {\n    try {\n      let data = {};\n      data[\"username\"] = username;\n      data[\"password\"] = password;\n      let response = await dispatch(fetchData(\n          `/api/exercises/logIn`, 'POST', data\n      ));\n\n    return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\nexport const logInByGithub = createAsyncThunk(\n  'user/logInGithub',\n  async ( {code, token},  { dispatch, rejectWithValue }) => {\n    try {\n      let data = {};\n      if (code !== undefined) {\n        data[\"code\"] = code;\n      } else if (token !== undefined) {\n        data[\"token\"] = token;\n      }\n      let response = await dispatch(fetchData(\n          `/api/exercises/logIn/github/auth`, 'POST', data\n      ));\n      return response;\n    } catch (err) {\n      console.error(err.message)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    isAdmin: false,\n    user: null,\n    \n    status: 'idle',\n    error: null,\n\n    usernameValue: '',\n    passwordValue: ''\n  },\n  reducers: {\n    updateUsername: (state, action) => {\n      state.usernameValue = action.payload;\n    },\n    updatePassword: (state, action) => {\n      state.passwordValue = action.payload;\n    },\n    logOut: (state) => {\n      localStorage.removeItem(\"token\");\n      state.isLoggedIn = false;\n      state.user = null;\n      state.status = 'idle';\n      state.error = '';\n    },\n    setUser: (state) => {\n      let data = JSON.parse(Buffer.from(localStorage.getItem(\"formalization_checker_token\").split(\".\")[1], \"base64\").toString());\n      state.user = {\"username\": data.username};\n      state.isLoggedIn = true;\n      state.isAdmin = data.isAdmin;\n    },\n  },\n  extraReducers: {\n    [logIn.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logIn.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.usernameValue = '';\n      state.passwordValue = '';\n      if (action.payload) {\n        let data = JSON.parse(Buffer.from(action.payload.token.split(\".\")[1], \"base64\").toString());\n        state.user = {\"username\": data.username};\n        state.isLoggedIn = true;\n        state.isAdmin = data.isAdmin;\n        localStorage[\"formalization_checker_token\"] = action.payload.token\n      } else {\n        state.error = '';\n      }\n    },\n    [logIn.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n    [logInByGithub.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logInByGithub.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.usernameValue = '';\n      state.passwordValue = '';\n      if (action.payload) {\n        let data = JSON.parse(Buffer.from(action.payload.token.split(\".\")[1], \"base64\").toString());\n        state.user = {\"username\": data.username};\n        state.isLoggedIn = true;\n        state.isAdmin = data.isAdmin;\n        localStorage.setItem(\"formalization_checker_token\", action.payload.token);\n      } else {\n        state.error = '';\n      }\n    },\n    [logInByGithub.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n  }\n});\n\nexport const selectUser = (state) => {\n  return state.user.user?.username;\n}\n\n\n/* export actions */\nexport const {\n  updateUsername,\n  updatePassword,\n  logOut,\n  setUser\n} = userSlice.actions;\n\n\nexport default userSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\n\n/* async actions */\n\nexport const fetchAllUsers = createAsyncThunk(\n  'users',\n  async (user, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n          `/api/exercises/allUsers/${user}`, 'GET'\n      ));\n    return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const saveAdmins = createAsyncThunk(\n  'admins',\n  async (admins, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n          `/api/exercises/allUsers`, 'POST', admins\n      ));\n\n     return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n/* slice */\nexport const adminsSlice = createSlice({\n  name: 'admins',\n  initialState: {\n    users: [''],\n    \n    status: 'idle',\n    error: null,\n\n    changed: {}\n  },\n  reducers: {\n    addChanged: (state, action) => {\n      state.changed[action.payload] = !state.changed[action.payload] ;\n    },\n    },\n  extraReducers: {\n    [fetchAllUsers.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllUsers.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = action.payload\n      for(let i = 0; i < state.users.length; i++){\n        state.changed[state.users[i].user_name] = state.users[i].is_admin;\n      }\n    },\n    [fetchAllUsers.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'There are no users';\n    } ,\n    [saveAdmins.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [saveAdmins.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = [];\n      for(let [key, value] of Object.entries(action.payload)){\n        state.users.push({\"user_name\": key, \"is_admin\": value});\n      }\n    },\n    [saveAdmins.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'Unsuccessful saving admins';\n    } ,\n  }\n});\n\nexport const selectAllUsers = (state) => {\n  return state.allUsers.users;\n};\n\nexport const selectStatus = (state) => {\n  return state.allUsers.status;\n};\n\nexport const selectError = (state) => {\n  return state.allUsers.error;\n};\n\nexport const selectChangedAdmins = (state) => {\n  return state.allUsers.changed;\n};\n\n/* export actions */\nexport const {\n  addChanged\n} = adminsSlice.actions;\n\nexport default adminsSlice.reducer;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction ProtectedRoute({ isLoggedIn, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isLoggedIn) {\n          return <Component />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React, {useEffect} from 'react';\nimport { Form, Button, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n    updateUsername, updatePassword, logIn, logInByGithub, setUser\n} from '../../redux/userSlice';\nimport {CLIENT_ID, REDIRECT} from \"../../config\";\n\n\nfunction LoginForm({\n  usernameValue, passwordValue, updateUsername, updatePassword, setUser,\n  location, isLoggedIn, status, error, logIn, logInByGithub\n}) {\n    useEffect(() => {\n        if (localStorage.getItem(\"formalization_checker_token\") !== null) {\n            setUser();\n        }\n    }, [status, setUser]);\n\n  if (status === 'loading') {\n    return <Spinner animation=\"border\" variant=\"primary\" />;\n  }\n  if(window.location.href.match(\"code\")){\n      let code = window.location.href.split(\"code=\")[1];\n      logInByGithub({code: code});\n      return <Redirect to=\"/\" />\n  }\n\n  if (isLoggedIn) {\n    if (location.state && location.state.from && location.state.from.pathname) {\n      return <Redirect to={location.state.from.pathname} />\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  } else {\n\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label>\n            Username\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            value={usernameValue}\n            onChange={(e) => updateUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Password\n          </Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={passwordValue}\n            onChange={(e) => updatePassword(e.target.value)}\n          />\n          <Form.Text className=\"text-danger\">\n            { error }\n          </Form.Text>\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            logIn({ username: usernameValue, password: passwordValue });\n          }}\n        >\n          Log in\n        </Button>\n        <Button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n              let url = \"https://github.com/login/oauth/authorize?client_id=\" + CLIENT_ID + \"&redirect_uri=\" + REDIRECT +\"&scope=read:user\"\n              window.location.replace(url);\n          }}\n        >\n          Log in with Github\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    usernameValue: state.user.usernameValue,\n    passwordValue: state.user.passwordValue,\n    isLoggedIn: state.user.isLoggedIn,\n    status: state.user.status,\n    error: state.user.error\n  };\n};\n\nconst mapDispatchToProps = { updateUsername, updatePassword, logIn, logInByGithub, setUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React, { useEffect } from 'react';\nimport { ListGroup, Spinner, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {\n  fetchExercise\n} from '../../redux/solveExerciseSlice';\nimport {selectUser} from \"../../redux/userSlice\";\n\n\nfunction ExerciseList({ exercises, status, error, fetchAllExercises, fetchExercise, username, onSelect }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => onSelect === undefined ? (\n      <ListGroup.Item\n        as={Link} to={`/solve/${x.exercise_id}`} key={x.exercise_id}\n        action\n        onClick={() => fetchExercise({exercise_id:x.exercise_id, user_name: username })}\n      >\n        { x.title }\n      </ListGroup.Item>\n    ) : (\n      <ListGroup.Item key={x.exercise_id} action onClick={() => onSelect(x.exercise_id)}>\n        {x.title}\n      </ListGroup.Item>\n    ));\n    content = <ListGroup>{ exercises_list }</ListGroup>;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Exercises</h1>\n      { content }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    username: selectUser(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n\nfunction SyntaxError({ value, error }) {\n  if (!error) {\n    return null;\n  }\n\n  const start = error.location.start.offset;\n  const end = error.location.end.offset;\n\n  const str_1 = value.substring(0, start);\n  const str_2 = value.substring(start, end);\n  const str_3 = value.substring(end);\n\n  const str = value === \"\" ?\n    null : (\n      <div className=\"text-body\">\n        {str_1}\n        <mark className=\"bg-warning\">\n          {str_2}\n        </mark>\n        {str_3}\n      </div>\n    );\n\n  return (\n    <Form.Control.Feedback type=\"invalid\">\n      {str}\n      <div>\n        {error.message}\n      </div>\n    </Form.Control.Feedback>\n  );\n}\n\nexport default SyntaxError;\n","import React from 'react';\nimport { Form, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectEvaluation,\n  selectEvalStatus,\n  selectEvalError\n} from '../../redux/solveExerciseSlice';\nimport {\n    makeStructure\n} from '../../redux/helpers';\n\n\nfunction Evaluation({ evaluation, status, error }) {\n  if (status === 'loading') {\n    return <Spinner animation=\"border\" variant=\"primary\" />;\n  }\n  if (status === 'succeeded') {\n    return getMessage(evaluation);\n  }\n  if (status === 'failed') {\n    return (\n      <ErrorFeedback>\n        { error }\n      </ErrorFeedback>\n    );\n  }\n  return null;\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    evaluation: selectEvaluation(state, ownProps.proposition_id),\n    status: selectEvalStatus(state, ownProps.proposition_id),\n    error: selectEvalError(state, ownProps.proposition_id)\n  };\n};\n\nexport default connect(mapStateToProps)(Evaluation);\n\nconst Feedback = ({ type, children }) =>\n    <Form.Text className={`text-${type}`} children={children} />\n\nconst CorrectFeedback = () =>\n    <Feedback type=\"success\">\n        <strong>Your formalization is correct</strong>\n    </Feedback>\n\nconst ErrorFeedback = ({children}) =>\n    <Feedback type=\"danger\" className=\"text-warning\">\n        <strong>\n            An error occured while validating your formalization:\n        </strong>\n        {children}\n    </Feedback>\n\nconst msgDiscuss = ' Discuss your formalization with your peers or teachers.'\n\nconst FailedFeedback = () =>\n    <Feedback type=\"warning\">\n        <strong>\n            We were unable to automatically validate your formalization.\n        </strong>\n        {msgDiscuss}\n    </Feedback>\n\nconst IncorrectFeedback = ({ summary, children }) =>\n    <Feedback type=\"danger\">\n        <strong>Your formalization is incorrect.</strong>\n        { !children\n            ? <p>{summary}</p>\n            : <details open>\n                <summary className=\"mb-2\">{summary}</summary>\n                {children}\n            </details>\n        }\n    </Feedback>\n\nconst Interpretation = ({interpFunc, viewValue, subscript}) => {\n    if (!interpFunc) return null;\n    const entries = Object.entries(interpFunc);\n    return (\n        entries.length > 0 &&\n        <ul className=\"list-unstyled mb-1\">\n            {entries.map(([symbol, value]) =>\n                <li key={symbol}>\n                    𝑖{subscript}({symbol}) = {viewValue(value)}\n                </li>\n            )}\n        </ul>\n    );\n};\n\nconst viewSetValue = (tuples) => (\n    `{${\n        tuples.map((tuple) => tuple.length > 1\n            ? `(${tuple})`\n            : tuple\n        ).join(', ')\n    }}`\n);\n\nconst Structure = ({ subscript, D, iC, iP, iF }) => (<>\n    <p className=\"mb-1\">\n        𝐷{subscript}{` = {${D.join(\", \")}}`}\n    </p>\n    <Interpretation\n        interpFunc={iC}\n        viewValue={(value) => value}\n        subscript={subscript}\n    />\n    <Interpretation\n        interpFunc={iP}\n        viewValue={viewSetValue}\n        subscript={subscript}\n    />\n    <Interpretation\n        interpFunc={iF}\n        viewValue={viewSetValue}\n        subscript={subscript}\n    />\n</>)\n\nconst Counterexample = ({structure, description, index, msgNotFound}) => {\n    const subscript = index ? <sub>{index}</sub> : null;\n    return (\n        structure\n        ? <div className=\"mb-2\">\n            <p className=\"mb-1\">\n                {description}{\" \"}\n                ℳ{subscript} = (𝐷{subscript}, 𝑖{subscript}) where:\n            </p>\n            <Structure subscript={subscript} {...structure}/>\n        </div>\n        : <p className=\"mb-2\">\n            { msgNotFound ??\n                'We could not find a counterexample automatically.'\n            }\n            {msgDiscuss}\n        </p>\n    );\n}\n\nconst getMessage = (evaluation) => {\n  if (evaluation.solutionToFormalization === 'OK'\n      && evaluation.formalizationToSolution === 'OK') {\n    return (\n        <CorrectFeedback/>\n    );\n  } else if (evaluation.solutionToFormalization === 'TE'\n      || evaluation.formalizationToSolution === 'TE' || evaluation.solutionToFormalization === 'ME'\n      || evaluation.formalizationToSolution === 'ME') {\n    return (\n        <FailedFeedback/>\n    );\n  } else {\n    // FIXME: evaluation.languageContants is sometimes empty\n    // Example: Charles hates no one whom Agatha hates.\n    // \\a x(-hates(C,x) \\limpl -hates(C,x))\n    // FIXME: 1.5.1. Peter je muž. A = E.\n    // No counterexample in one direction, in the other direction:\n    // got i(muz) = {}; should get: i(muz) = {i(Peter)}\n    const C_L = new Set(evaluation.languageContants);\n    // TODO: Fix backend to return a pair of objects similar to these\n    const correctImpliesInput = {\n        result: evaluation.formalizationToSolution,\n        description: evaluation.m1,\n        counterexample: makeStructure(\n            evaluation.domainFormalizationToSolution,\n            evaluation.symbolsFormalizationToSolution,\n            C_L\n        )\n    }\n    const inputImpliesCorrect = {\n        result: evaluation.solutionToFormalization,\n        description: evaluation.m2,\n        counterexample: makeStructure(\n            evaluation.domainSolutionToFormalization,\n            evaluation.symbolsSolutionToFormalization,\n            C_L\n        )\n    }\n\n    if (inputImpliesCorrect.result === 'OK'\n        && correctImpliesInput.result === 'WA') {\n        return (\n            <IncorrectFeedback summary={\n                `Your formalization is false\n                in some first-order structure\n                where the correct formalization is true.`\n            }>\n                <Counterexample\n                    description=\"One such structure is\"\n                    structure={correctImpliesInput.counterexample}\n                />\n            </IncorrectFeedback>\n        );\n    } else if (inputImpliesCorrect.result === 'WA'\n        && correctImpliesInput.result === 'OK') {\n        return (\n            <IncorrectFeedback summary={\n                `Your formalization is true\n                in some first-order structure\n                where the correct formalization is false.`\n            }>\n                <Counterexample\n                    description=\"One such structure is\"\n                    structure={inputImpliesCorrect.counterexample}\n                />\n            </IncorrectFeedback>\n        );\n    } else {\n        return (\n            <IncorrectFeedback\n                summary={`Your formalization is false\n                    in some first-order structure\n                    where the correct formalization is true,\n                    and vice versa.`}\n            >\n                <Counterexample\n                    description=\"Your formalization is true\n                        and the correct formalization is false,\n                        e.g., in structure\"\n                    structure={inputImpliesCorrect.counterexample}\n                    index={1}\n                    msgNotFound={`We could not automatically find a structure\n                        in which your formalization is true\n                        and the correct formalization is false.`}\n                />\n                <Counterexample\n                    description=\"Your formalization is false\n                        and the correct formalization is true,\n                        e.g., in structure\"\n                    structure={correctImpliesInput.counterexample}\n                    index={2}\n                    msgNotFound={`We could not automatically find a structure\n                        in which your formalization is false\n                        and the correct formalization is true.`}\n                />\n            </IncorrectFeedback>\n        );\n    }\n  }\n};\n\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from '../addExercise/SyntaxError';\nimport Evaluation from './Evaluation';\nimport {\n  update,\n  evaluate,\n  selectSolution\n} from '../../redux/solveExerciseSlice';\n\n\nfunction Solution({ exercise_id, proposition_id, proposition,\n                    value, error, update ,  evaluate, user, onChange}) {\n\n  const handleChange = (value) => {\n    update(value, proposition_id);\n    onChange && onChange(value, proposition_id);\n  }\n\n  return (\n    <Form.Group\n      className=\"clearfix\"\n      controlId={`formalization-${exercise_id}-${proposition_id}`}\n    >\n      <Form.Label>\n        { proposition }\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter formalization\"\n        as=\"textarea\"\n        rows={1}\n        value={value}\n        isInvalid={!!error}\n        onChange={(e) => handleChange(e.target.value)}\n      />\n      <Button\n        className=\"mt-1 float-right\"\n        variant=\"primary\"\n        disabled={error}\n        onClick={() => evaluate({\n          exercise_id,\n          proposition_id,\n          solution: value,\n          user: user\n        })}\n      >\n        Check\n      </Button>\n      <SyntaxError value={value} error={error} />\n      <Evaluation proposition_id={proposition_id} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return selectSolution(state, ownProps.proposition_id);\n};\n\nconst mapDispatchToProps = { update, evaluate };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Solution);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Solution from './Solution';\nimport {\n  selectExercise,\n  selectStatus,\n  selectError,\n  fetchExercise\n} from '../../redux/solveExerciseSlice';\nimport { useParams } from 'react-router';\nimport {selectUser} from \"../../redux/userSlice\";\n\n\nexport function SolveExercise({ match, exercise, status, error, fetchExercise, user, exerciseId, onChange })  {\n\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchExercise({exercise_id : exerciseId, username : user});\n    }\n  }, [status, exerciseId, exercise, fetchExercise, user]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    const propositions_list = exercise.propositions.map((x) => (\n      <Solution\n        key={x.proposition_id}\n        exercise_id={exerciseId}\n        proposition_id={x.proposition_id}\n        proposition={x.proposition}\n        user={user}\n        onChange={onChange}\n      />\n    ));\n    content = (\n      <div>\n        <h2>{ exercise.title }</h2>\n        <p>{ exercise.description }</p>\n        <h5>Language ℒ</h5>\n        <p>𝒞<sub>ℒ</sub> = {\"{ \"}{ exercise.constants }{\" }\"}</p>\n        <p>𝒫<sub>ℒ</sub> = {\"{ \"}{ exercise.predicates }{\" }\"}</p>\n        <p>ℱ<sub>ℒ</sub> = {\"{ \"}{ exercise.functions }{\" }\"}</p>\n        { acceptedSymbolsView }\n        <h5>Propositions</h5>\n        { propositions_list }\n      </div>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nfunction SolveExercise1(props) {\n  let id = useParams()['id'];\n  return <SolveExercise exerciseId={id} {...props} />\n}\n\nconst acceptedSymbols = [\n  {\n    name: \"Negation\",\n    preferredToken: \"¬\",\n    acceptedTokens: [ \"-\", \"!\", \"~\", \"\\\\neg\", \"\\\\lnot\" ]\n  },\n  {\n    name: \"Equality\",\n    preferredToken: \"≐\",\n    acceptedTokens: [ \"=\" ]\n  },\n  {\n    name: \"Inequality\",\n    preferredToken: \"≠\",\n    acceptedTokens: [ \"!=\", \"/=\", \"<>\", \"\\\\neq\" ]\n  },\n  {\n    name: \"Conjunction\",\n    preferredToken: \"∧\",\n    acceptedTokens: [ \"&&\", \"&\", \"/\\\\\", \"\\\\wedge\", \"\\\\land\" ]\n  },\n  {\n    name: \"Disjunction\",\n    preferredToken: \"∨\",\n    acceptedTokens: [ \"||\", \"|\", \"\\\\/\", \"\\\\vee\", \"\\\\lor\", ]\n  },\n  {\n    name: \"Implication\",\n    preferredToken: \"→\",\n    acceptedTokens: [ \"->\", \"\\\\to\" ]\n  },\n  {\n    name: \"Equivalence\",\n    preferredToken: \"↔︎\",\n    acceptedTokens: [ \"⟷\", \"<->\", \"<-->\", \"\\\\lequiv\", \"\\\\leftrightarrow\" ]\n  },\n  {\n    name: \"Existential quantifier\",\n    preferredToken: \"∃\",\n    acceptedTokens: [ \"\\\\exists\", \"\\\\e\", \"\\\\E\" ]\n  },\n  {\n    name: \"Universal quantifier\",\n    preferredToken: \"∀\",\n    acceptedTokens: [ \"\\\\forall\", \"\\\\a\", \"\\\\A\" ]\n  },\n];\n\nconst acceptedSymbolsView = (\n  <details className=\"mb-3\">\n    <summary className=\"h6\">Accepted notation of logical symbols</summary>\n    <Table size=\"sm\" striped className=\"w-auto\">\n      <thead>\n        <tr>\n          <th>Logical symbol</th>\n          <th>Accepted notation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          acceptedSymbols.map(({ name, preferredToken, acceptedTokens }) =>\n            <tr key={name}>\n              <th>{name}</th>\n              <td>\n                <strong key={preferredToken}><code>{preferredToken}</code></strong>\n                {\n                  acceptedTokens.map( (token) =>\n                    <React.Fragment key={token}>\n                      {\" \"}<code className=\"ml-2\">{token}</code>\n                    </React.Fragment>\n                  )\n                }\n              </td>\n            </tr>\n          )\n        }\n      </tbody>\n    </Table>\n  </details>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    exercise: selectExercise(state),\n    status: selectStatus(state),\n    error: selectError(state),\n   user: selectUser(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolveExercise1);\n","import React from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport SyntaxError from './SyntaxError';\n\n\nfunction SymbolsInput({ symbolsKind, symbolsSet, value, error, update }) {  \n  return (\n    <InputGroup hasValidation={!!error} className=\"mb-3\">\n      <InputGroup.Prepend>\n        <InputGroup.Text as=\"label\">\n          {symbolsSet}<sub>ℒ</sub>{\" = {\"}\n        </InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        type=\"text\"\n        placeholder={`Enter ${symbolsKind}`}\n        value={value}\n        onChange={(e) => update(e.target.value)}\n        isInvalid={!!error}\n      />\n      <InputGroup.Append>\n        <InputGroup.Text>{\"}\"}</InputGroup.Text>\n      </InputGroup.Append>\n      <SyntaxError value={value} error={error} />\n    </InputGroup>\n  );\n}\n\nexport default SymbolsInput;\n","import React from 'react';\nimport SymbolsInput from './SymbolsInput';\nimport { connect } from 'react-redux';\nimport {\n  updateConstants,\n  selectConstantsParsed\n} from '../../redux/addExerciseSlice';\n\n\nconst Constants = (props) =>\n  <SymbolsInput\n    symbolsKind=\"individual constants\"\n    symbolsSet=\"𝒞\"\n    {...props}\n  />;\n\nconst mapStateToProps = selectConstantsParsed;\n\nconst mapDispatchToProps = { update: updateConstants };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constants);\n","import React from 'react';\nimport SymbolsInput from './SymbolsInput';\nimport { connect } from 'react-redux';\nimport {\n  updatePredicates,\n  selectPredicatesParsed\n} from '../../redux/addExerciseSlice';\n\n\nconst Predicates = (props) =>\n  <SymbolsInput\n    symbolsKind=\"predicate symbols\"\n    symbolsSet=\"𝒫\"\n    {...props}\n  />;\n\nconst mapStateToProps = selectPredicatesParsed;\n\nconst mapDispatchToProps = { update: updatePredicates };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Predicates);\n","import React from 'react';\nimport SymbolsInput from './SymbolsInput';\nimport { connect } from 'react-redux';\nimport {\n  updateFunctions,\n  selectFunctionsParsed\n} from '../../redux/addExerciseSlice';\n\n\nconst Functions = (props) =>\n  <SymbolsInput\n    symbolsKind=\"function symbols\"\n    symbolsSet=\"ℱ\"\n    {...props}\n  />;\n\nconst mapStateToProps = selectFunctionsParsed;\n\nconst mapDispatchToProps = { update: updateFunctions };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Functions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  selectLanguage\n} from '../../redux/addExerciseSlice';\n\n\nfunction Clashes({ errorMessage }) {\n  return errorMessage ? (\n    <p className=\"text-danger\">\n      {errorMessage}\n    </p>\n  )\n  : null;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: selectLanguage(state).errorMessage\n  };\n};\n\nexport default connect(mapStateToProps)(Clashes);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n    selectConstraint, updateConstraint\n} from '../../redux/addExerciseSlice';\n\n\nfunction Constraint({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Global preferred model constraints (optional):\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter constraints\"\n        value={value}\n        as=\"textarea\"\n        rows={1}\n        onChange={(e) => update(e.target.value)}\n        isInvalid={!!error}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectConstraint;\n\nconst mapDispatchToProps = { update: updateConstraint };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constraint);\n","import React from 'react';\nimport Constants from './Constants';\nimport Predicates from './Predicates';\nimport Functions from './Functions';\nimport Clashes from './Clashes';\nimport Constraint from './Constraint';\n\n\nfunction LanguageSection() {\n  return (\n    <div className=\"mt-4 mb-4\">\n      <h4>Language ℒ</h4>\n      <Constants />\n      <Predicates />\n      <Functions />\n      <Clashes />\n      <Constraint/>\n    </div>\n  );\n}\n\nexport default LanguageSection;\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  removeFormalization,\n  updateFormalization,\n  selectFormalization,\n  updateConstraints,  selectConstraints\n} from '../../redux/addExerciseSlice';\n\n\nfunction Formalization({ i, j, value, value2, error, error2, remove, update, updateConstraints, cannotBeRemoved }) {\n  const tag = `${i + 1}.${j + 1}`;\n  const id = `-${i}-${j}`;\n  return (\n    <li className=\"clearfix mb-4\">\n      <Form.Group controlId={`formalization${id}`}>\n        <Form.Label>\n          {`Formalization ${tag}`}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter formalization\"\n          value={value}\n          as=\"textarea\"\n          rows={1}\n          onChange={(e) => update(e.target.value, i, j)}\n          isInvalid={!!error}\n        />\n        <Button\n          className=\"mt-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i, j)}\n          disabled={cannotBeRemoved}\n        >\n          Remove formalization {tag}\n        </Button>\n        <SyntaxError value={value} error={error} />\n      </Form.Group>\n\n      <Form.Group controlId={`constraints${id}`} size=\"sm\">\n        <Form.Label>\n          <small>Preferred model constraints {tag} (optional)</small>\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter constraints\"\n          value={value2}\n          as=\"textarea\"\n          size=\"sm\"\n          rows={1}\n          onChange={(e) => updateConstraints(e.target.value, i, j)}\n          isInvalid={!!error2}\n        />\n        <SyntaxError value={value2} error={error2} />\n      </Form.Group>\n    </li>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = selectFormalization(state, ownProps.i, ownProps.j);\n  const data2 = selectConstraints(state, ownProps.i, ownProps.j);\n  return {\n    value: data.value,\n    error: data.error,\n    value2: data2.value,\n    error2: data2.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  remove: removeFormalization,\n  update: updateFormalization,\n  updateConstraints\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Formalization);\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Formalization from './Formalization';\nimport {\n  addNewFormalization,\n  removeProposition,\n  updateInformalValue,\n  selectInformalValue,\n  selectFormalizations\n} from '../../redux/addExerciseSlice';\n\n\nfunction Proposition({ i, value, formalizations, add, remove, update }) {\n  const formalizationRemovable = formalizations.length > 1;\n  const formalizations_list = formalizations.map((_x, j) =>\n    <Formalization\n      key={j}\n      i={i}\n      j={j}\n      cannotBeRemoved={!formalizationRemovable}\n    />\n  );\n  const propositionFeedback = (value === \"\"\n    ? <Form.Control.Feedback type=\"invalid\">\n        This field cannot be empty\n      </Form.Control.Feedback>\n    : null\n  );\n\n  return (\n    <div className=\"mb-4\">\n      <Form.Group className=\"clearfix mb-0\" controlId={`proposition-${i}`}>\n        <h5><Form.Label className=\"d-block\">\n          Proposition {i + 1}\n        </Form.Label></h5>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter proposition\"\n          value={value}\n          onChange={(e) => update(e.target.value, i)}\n          isInvalid={!!propositionFeedback}\n        />\n        <Button\n          className=\"mt-1 mb-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i)}\n        >\n          Remove proposition {i + 1}\n        </Button>\n        {propositionFeedback}\n      </Form.Group>\n      <ol className=\"list-unstyled pl-5\">\n        { formalizations_list }\n      </ol>\n      <div className=\"pl-5 mb-3\">\n        <Button\n          variant=\"outline-success\"\n          size=\"sm\"\n          onClick={() => add(i)}\n        >\n          Add formalization\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    value: selectInformalValue(state, ownProps.i),\n    formalizations: selectFormalizations(state, ownProps.i)\n  };\n};\n\nconst mapDispatchToProps = {\n  add: addNewFormalization,\n  remove: removeProposition,\n  update: updateInformalValue\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Proposition);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Proposition from './Proposition';\nimport {\n  addNewProposition,\n  selectPropositions\n} from '../../redux/addExerciseSlice';\n\n\nfunction PropositionsSection({ propositions, add }) {\n  const propositions_list = propositions.map((_x, i) => (\n    <Proposition key={i} i={i} />\n  ));\n\n  return (\n    <div className=\"mb-4 clearfix\">\n      <h4 className=\"mb-3\">Propositions</h4>\n      { propositions_list }\n      <div>\n        <Button\n          variant=\"success\"\n          onClick={() => add()}\n        >\n          Add proposition\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    propositions: selectPropositions(state)\n  };\n};\n\nconst mapDispatchToProps = { add: addNewProposition };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PropositionsSection);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateExerciseTitle,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\n\n\nfunction ExerciseTitle({ value, update }) {\n  const feedback = (value === \"\" ?\n    <Form.Control.Feedback type=\"invalid\">\n      This field cannot be empty\n    </Form.Control.Feedback>\n    : null);\n\n  return (\n    <Form.Group controlId=\"exercise-title\">\n      <Form.Label>\n          Exercise title\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter exercise title\"\n        value={value}\n        isInvalid={!!feedback}\n        onChange={(e) => update(e.target.value)}\n      />\n      {feedback}\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectExerciseTitle;\n\nconst mapDispatchToProps = { update: updateExerciseTitle };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseTitle);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateDescription,\n  selectDescription\n} from '../../redux/addExerciseSlice';\n\n\nfunction Description({ value, update }) {  \n  return (\n    <Form.Group controlId=\"exercise-description\">\n      <Form.Label>\n        Description\n      </Form.Label>\n      <Form.Control\n        as=\"textarea\"\n        placeholder=\"Enter description\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectDescription;\n\nconst mapDispatchToProps = { update: updateDescription };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Description);\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nfunction SaveButtonGroup({ containsErrors, saveExercise}) {\n  return (\n    <Form.Group className=\"text-center text-md-right mb-4\">\n      <Button\n          variant=\"primary\"\n          size=\"lg\"\n          disabled={containsErrors}\n          onClick={saveExercise}\n      >\n          Save exercise\n      </Button>\n      {containsErrors &&\n        <Form.Text className=\"text-danger\">\n          Fix all errors above\n          in order to be able to save the exercise\n        </Form.Text>\n      }\n    </Form.Group>\n  );\n}\n\nexport default SaveButtonGroup;\n","import React from 'react';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  addNewExercise,\n  checkExercise,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\nimport LanguageSection from './LanguageSection';\nimport PropositionsSection from './PropositionsSection';\nimport ExerciseTitle from './ExerciseTitle';\nimport Description from './Description';\nimport SaveButtonGroup from './SaveButtonGroup';\n\nfunction AddExercise({ status, error, containsErrors, title, addExercise, added}) {\n  let content = null;\n  if (status === 'idle') {\n      if (added) {\n          content = (\n              <Alert variant=\"success\">\n                  Exercise <b>{ title }</b> was succefully added to the database.\n              </Alert>\n              );\n      }\n      else{\n          content = (      <Form>\n                  <h1>Add exercise</h1>\n                  <ExerciseTitle />\n                  <Description />\n                  <LanguageSection />\n                  <PropositionsSection />\n                  <SaveButtonGroup\n                    containsErrors={containsErrors}\n                    saveExercise={addExercise}\n                  />\n              </Form>\n          );\n      }\n  } else if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.addExercise.status,\n    added: state.addExercise.added,\n    error: state.addExercise.error,\n    containsErrors: checkExercise(state),\n    title: selectExerciseTitle(state).value\n  };\n};\n\nconst mapDispatchToProps = { addExercise: addNewExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExercise);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction AdminRoute({ isLoggedIn, isAdmin, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isLoggedIn) {\n            if(!isAdmin){\n                return <Redirect to={{ pathname: \"/\", state: { from: location } }} />;\n            }\n          return <Component />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n  };\n};\n\nexport default connect(mapStateToProps)(AdminRoute);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert, Table} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {fetchAllUsersToExercise} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction Exercises({ exercises, status, error, fetchAllExercises, fetchAllUsersToExercise }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => (\n      <tr key={x.exercise_id}>\n        <td>\n          <Link to={`/progress/exercise/users`} key={x.exercise_id} onClick={() => fetchAllUsersToExercise(x.exercise_id)}>\n            { x.title }\n          </Link>\n        </td>\n        <td>{x.attempted}</td>\n    </tr>\n    ));\n  content =\n   <Table striped bordered hover>\n      <thead>\n      <tr>\n        <th>Exercise</th>\n        <th>Students attempted</th>\n      </tr>\n      </thead>\n     <tbody>\n      { exercises_list }\n     </tbody>\n  </Table>\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Student progress</h2>\n\n            {content}\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchAllUsersToExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercises);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectStatus,\n  selectError, fetchUsersSolutions, selectUsersSolution, selectExerciseTitle, selectUserName\n} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction UsersSolutionList({ solutions, users, status, error, name, id, title })  {\n\n\n  useEffect( () => {\n    if (status === 'idle') {\n      fetchUsersSolutions({exercise_id: id, user_name: name});\n    }\n  }, [status, id, users, fetchUsersSolutions]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n\n    let s = [];\n    let table = [];\n    let proposition = null;\n    let first= false\n    for(let i = 0; i < solutions.length; i++){\n      if(proposition === null){\n        proposition = solutions[i].proposition;\n        first = true;\n      }\n      else if(proposition !== solutions[i].proposition && first){\n        s.push(<h5   key={proposition}> {proposition}</h5>)\n        s.push(<Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Date</th>\n            <th>Solution</th>\n            <th>Correct</th>\n          </tr>\n          </thead>\n          <tbody>\n          {table}\n          </tbody>\n        </Table>\n          );\n        table = [];\n        proposition = solutions[i].proposition;\n      }\n      if(solutions[i].is_correct){\n        table.push(\n            <tr key={solutions[i].date}>\n              <td>\n                {solutions[i].date.split(\".\")[0].replace(\"T\", \" \") + \" \"}\n              </td>\n              <td>{solutions[i].solution}</td>\n              <td>  &#x2713;</td>\n            </tr>)\n      }\n      else{\n        table.push(<tr key={solutions[i].date}>\n              <td>\n                {solutions[i].date.split(\".\")[0].replace(\"T\", \" \") + \" \"}\n              </td>\n              <td>{solutions[i].solution}</td>\n              <td>  &#x2715;</td>\n            </tr>)\n      }\n    }\n\n    //last element of array\n    s.push(<h5   key={proposition}> {proposition}</h5>)\n    s.push(<Table striped bordered hover>\n      <thead>\n      <tr>\n        <th>Date</th>\n        <th>Solution</th>\n        <th>Correct</th>\n      </tr>\n      </thead>\n      <tbody>\n      {table}\n      </tbody>\n    </Table>\n    );\n\n    content = (\n        <div key={s}>{ s }</div>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n      <div>\n          <h2 className=\"mb-4\">{title} by {name} </h2>\n          { content }\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    solutions: selectUsersSolution(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    name: selectUserName(state),\n    title: selectExerciseTitle(state),\n  };\n};\n\nconst mapDispatchToProps = {  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersSolutionList);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport {\n    selectUsers,\n    selectStatus,\n    selectError, fetchUsersSolutions, selectProposition, fetchAllUsersToExercise, selectExerciseTitle\n} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction UsersToExercise({ users, status, error, fetchAllUsersToExercise, fetchUsersSolutions, id, title })  {\n\n\n\n  useEffect( () => {\n    if (status === 'idle') {\n        fetchAllUsersToExercise(id);\n    }\n  }, [status, id, users, fetchAllUsersToExercise]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n      let user_list = []\n      for(let i = 0; i < users.length; i++){\n          console.log(users[i])\n          if(users[i].lastattemptcorrec){\n              user_list.push(<tr key={users[i].user_name}>\n                  <td>\n                      <Link to={`/progress/exercise/users/solutions`} key={users[i].user_name} onClick={() => fetchUsersSolutions( {exercise_id: users[i].exercise_id, user_name: users[i].user_name})}>\n                          { users[i].user_name }\n                      </Link>\n                  </td>\n                  <td>{users[i].solved} </td>\n                  <td>{users[i].attempted} </td>\n                  <td>{users[i].successful_attempts}</td>\n                  <td>users[i].attempts}</td>\n                  <td>users[i].huuu}</td>\n                  <td>{users[i].last_attempt_date.split(\".\")[0].replace(\"T\", \" \") + \" \"} &#x2713;</td>\n                  </tr>\n                  )\n          }\n          else{\n              user_list.push(<tr key={users[i].user_name}>\n                      <td>\n                          <Link to={`/progress/exercise/users/solutions`} key={users[i].user_name} onClick={() => fetchUsersSolutions( {exercise_id: users[i].exercise_id, user_name: users[i].user_name})}>\n                              { users[i].user_name }\n                          </Link>\n                      </td>\n                      <td>{users[i].solved} </td>\n                      <td>{users[i].attempted} </td>\n                      <td>{users[i].successful_attempts}</td>\n                      <td>{users[i].attempts}</td>\n                      <td>{users[i].last_attempt_date.split(\".\")[0].replace(\"T\", \" \") + \" \"} &#x2715;</td>\n                  </tr>\n              )\n          }\n\n\n      }\n\n    content =<Table striped bordered hover>\n        <thead>\n        <tr>\n            <th> </th>\n            <th colSpan={2}>Propositions </th>\n            <th colSpan={2}>Attempt</th>\n            <th> </th>\n        </tr>\n        <tr>\n            <th>Student</th>\n            <th>Solved</th>\n            <th>Attempted</th>\n            <th>Successful</th>\n            <th>Total</th>\n            <th>Last attempt</th>\n        </tr>\n        </thead>\n        <tbody>\n        { user_list }\n        </tbody>\n    </Table>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n      <div>\n          <h2 className=\"mb-4\"> {title} </h2>\n          { content }\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectUsers(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    title: selectExerciseTitle(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchUsersSolutions, fetchAllUsersToExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersToExercise);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectStatus, selectError, addChanged, fetchAllUsers, saveAdmins,\n  selectAllUsers, selectChangedAdmins\n} from \"../../redux/adminsSlice\";\nimport {selectUser} from \"../../redux/userSlice\";\n\n\nfunction UserList({ users, user_name, status, error, fetchAllUsers, addChanged, changedAdmins, saveAdmins }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllUsers(user_name);\n    }\n  }, [status, fetchAllUsers]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let user = users.map((x) => (\n        <tr key={x.user_name}>\n          <td>\n              { x.user_name }\n          </td>\n        <td> <input type=\"checkbox\" defaultChecked={x.is_admin} id={x.user_name} onChange={(e) => {addChanged(e.target.id)}}/> </td>\n\n        </tr>\n    ));\n    content =\n        <Form>\n        <Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Username</th>\n            <th>Is admin</th>\n          </tr>\n          </thead>\n          <tbody>\n          { user }\n          </tbody>\n        </Table>\n        </Form>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Users</h2>\n      { content }\n        <Button  onClick={(e) => {saveAdmins(changedAdmins)}}>Save admins</Button>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectAllUsers(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    changedAdmins: selectChangedAdmins(state),\n    user_name: selectUser(state)\n  };\n};\n\nconst mapDispatchToProps = { fetchAllUsers, addChanged, saveAdmins };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","import React from 'react';\nimport { Row, Col, Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n    saveExercise,\n    removeExercise,\n  checkExercise,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\nimport LanguageSection from '../addExercise/LanguageSection';\nimport PropositionsSection from '../addExercise/PropositionsSection';\nimport ExerciseTitle from '../addExercise/ExerciseTitle';\nimport Description from '../addExercise/Description';\nimport SaveButtonGroup from '../addExercise/SaveButtonGroup';\n\nfunction EditExercise({ status, error, title, containsErrors, removeExercise, saveExercise }) {\n  let content = null;\n  if (status === 'idle') {\n    content = (\n      <Form>\n        <h1>Editing <i>{title}</i></h1>\n        <ExerciseTitle />\n        <Description />\n        <LanguageSection />\n        <PropositionsSection />\n        <Row className=\"justify-content-end\">\n          <Col xs={12} md={{order: 2, span: 4}}>\n            <SaveButtonGroup\n              containsErrors={containsErrors}\n              saveExercise={saveExercise}\n            />\n          </Col>\n          <Col xs={12} md={{order:1, span: 4, offset: 4}} className=\"text-center\">\n            <Button\n                variant=\"outline-danger\"\n                size=\"lg\"\n                onClick={removeExercise}\n            >\n                Remove exercise\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  } else if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    content = (\n      <Alert variant=\"success\">\n        Exercise was succefully changed in the database.\n      </Alert>\n    );\n  }else if (status === 'removed') {\n    content = (\n      <Alert variant=\"success\">\n        Exercise  was succefully removed from database.\n      </Alert>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.addExercise.status,\n    error: state.addExercise.error,\n    containsErrors: checkExercise(state),\n    title: selectExerciseTitle(state).value\n  };\n};\n\nconst mapDispatchToProps = {saveExercise, removeExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExercise);\n","import React, { useEffect } from 'react';\nimport { ListGroup, Spinner, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {\n  fetchSavedExercise\n} from '../../redux/addExerciseSlice';\n\n\nfunction ExerciseList({ exercises, status, error, fetchAllExercises, fetchSavedExercise }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => (\n      <ListGroup.Item\n        as={Link} to={`/edit/${x.exercise_id}`} key={x.exercise_id}\n        action\n        onClick={() => fetchSavedExercise(x.exercise_id)}\n      >\n        { x.title }\n      </ListGroup.Item>\n    ));\n    content = <ListGroup>{ exercises_list }</ListGroup>;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Edit exercise</h1>\n      { content }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchSavedExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList);\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  Container, Alert, Button, Navbar, Nav\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport ProtectedRoute from './components/login/ProtectedRoute';\nimport LoginForm from './components/login/LoginForm';\nimport ExerciseList from './components/solveExercise/ExerciseList';\nimport SolveExercise from './components/solveExercise/SolveExercise';\nimport AddExercise from './components/addExercise/AddExercise';\nimport {logOut} from './redux/userSlice';\nimport AdminRoute from \"./components/login/AdminRoute\";\nimport Exercises from \"./components/studentProgress/Exercises\";\nimport UserSolutionsList from \"./components/studentProgress/UserSolutionsList\";\nimport UsersToExercise from \"./components/studentProgress/UsersToExercise\";\nimport UserList from \"./components/addAdmins/UserList\";\nimport {BASE_NAME} from \"./config\";\nimport {changeStatus} from \"./redux/addExerciseSlice\";\nimport {changeExerciseStatus} from \"./redux/exercisesSlice\";\nimport EditExercise from \"./components/editExercise/EditExercise\";\nimport EditExerciseList from \"./components/editExercise/EditExerciseList\";\n\n\nfunction App({ isLoggedIn, user, logOut, changeStatus, changeExerciseStatus, isAdmin }) {\n  let loginInfo = null;\n  if (isLoggedIn) {\n    loginInfo = (\n      <React.Fragment>\n        <span className=\"px-4 my-auto text-info\">\n          You are logged in as <b>{ user.username }</b>\n        </span>\n        <Button as={Link} to=\"/\" onClick={() => logOut()}>\n          Log out\n        </Button>\n      </React.Fragment>\n    );\n  } else {\n    loginInfo = (\n      <Button as={Link} to=\"/login\">\n        Log in\n      </Button>\n    );\n  }\n  if(!isAdmin){\n    return (\n        <BrowserRouter basename={BASE_NAME}>\n          <div className=\"App\">\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link className=\"px-4\" as={Link} to=\"/\" onClick={() => changeExerciseStatus()}>\n                  Home\n                </Nav.Link>\n\n              </Nav>\n              <Nav>\n                { loginInfo }\n              </Nav>\n            </Navbar>\n            <Container className=\"my-3\">\n              <Switch>\n                <ProtectedRoute exact path=\"/\" component={ExerciseList} />\n                <Route exact path=\"/login\" component={LoginForm} />\n                <ProtectedRoute path=\"/solve/:id\" component={SolveExercise} />\n\n                <Route path=\"*\" component={() => {\n                  return <Alert variant=\"danger\">404 Not Found</Alert>\n                }} />\n              </Switch>\n            </Container>\n          </div>\n        </BrowserRouter>\n    );\n  }\n  return (\n    <BrowserRouter basename={BASE_NAME}>\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link className=\"px-4\" as={Link} to=\"/\" onClick={() => changeExerciseStatus()}>\n              Home\n            </Nav.Link>\n\n              <Nav.Link className=\"px-4\" as={Link} to=\"/add\" onClick={() => changeStatus()}>\n                Add\n              </Nav.Link>\n              <Nav.Link className=\"px-4\" as={Link} to=\"/edit\" onClick={() => changeExerciseStatus()}>\n                Edit\n              </Nav.Link>\n              <Nav.Link className=\"px-4\" as={Link} to=\"/progress\" onClick={() => changeExerciseStatus()}>\n                Student progress\n              </Nav.Link>\n              <Nav.Link className=\"px-4\" as={Link} to=\"/admins\">\n                Admin\n              </Nav.Link>\n\n          </Nav>\n          <Nav>\n            { loginInfo }\n          </Nav>\n          </Navbar>\n        <Container className=\"my-3\">\n          <Switch>\n            <ProtectedRoute exact path=\"/\" component={ExerciseList} />\n            <AdminRoute exact path=\"/admins\" component={UserList} />\n            <AdminRoute exact path=\"/progress\" component={Exercises} />\n            <AdminRoute exact path=\"/progress/exercise/users\" component={UsersToExercise} />\n            <AdminRoute exact path=\"/progress/exercise/users/solutions\" component={UserSolutionsList} />\n            <Route exact path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/solve/:id\" component={SolveExercise} />\n\n            <AdminRoute exact path=\"/add\" component={AddExercise}  />\n            <AdminRoute exact path=\"/edit\" component={EditExerciseList}  />\n            <AdminRoute exact path=\"/edit/:id\" component={EditExercise}  />\n\n            <Route path=\"*\" component={() => {\n              return <Alert variant=\"danger\">404 Not Found</Alert>\n            }} />\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = { logOut, changeStatus, changeExerciseStatus };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport initStore from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BACKEND_URL } from './config';\n\nconst store = initStore(BACKEND_URL);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore } from '@reduxjs/toolkit';\nimport addExerciseReducer from './addExerciseSlice';\nimport exercisesReducer from './exercisesSlice';\nimport progressPropositionsReducer from './progressPropositionsSlice';\nimport solveExerciseReducer from './solveExerciseSlice';\nimport userReducer from './userSlice';\nimport adminsReducer from './adminsSlice';\nimport backendReducer from './backendSlice';\n\nexport default function (backendUrl) {\n  return configureStore({\n    reducer: {\n      addExercise: addExerciseReducer,\n      exercises: exercisesReducer,\n      propositions: progressPropositionsReducer,\n      allUsers: adminsReducer,\n      solveExercise: solveExerciseReducer,\n      user: userReducer,\n      backend: backendReducer(backendUrl),\n    }\n  });\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport default function(url) {\n  return createSlice({name: 'backend', initialState: {url}}).reducer;\n}"],"sourceRoot":""}