{"version":3,"sources":["redux/fetchData.js","redux/userSlice.js","config.js","redux/formula_classes.js","redux/helpers.js","redux/addExerciseSlice.js","redux/exercisesSlice.js","redux/progressPropositionsSlice.js","redux/solveExerciseSlice.js","redux/adminsSlice.js","redux/store.js","components/login/ProtectedRoute.js","components/login/LoginForm.js","components/solveExercise/ExerciseList.js","components/addExercise/SyntaxError.js","components/solveExercise/Evaluation.js","components/solveExercise/Solution.js","components/solveExercise/SolveExercise.js","components/addExercise/Constants.js","components/addExercise/Predicates.js","components/addExercise/Functions.js","components/addExercise/Clashes.js","components/addExercise/Constraint.js","components/addExercise/LanguageSection.js","components/addExercise/Formalization.js","components/addExercise/Proposition.js","components/addExercise/PropositionsSection.js","components/addExercise/ExerciseTitle.js","components/addExercise/Description.js","components/addExercise/AddExercise.js","components/login/AdminRoute.js","components/studentProgress/Exercises.js","components/studentProgress/UserSolutionsList.js","components/studentProgress/UsersToExercise.js","components/addAdmins/UserList.js","components/editExercise/EditExercise.js","components/editExercise/EditExerciseList.js","App.js","serviceWorker.js","index.js"],"names":["fetchData","route","method","a","body","undefined","config","headers","localStorage","getItem","JSON","stringify","fetch","BACKEND_URL","response","ok","json","Error","status","statusText","logIn","createAsyncThunk","username","password","rejectWithValue","data","console","error","message","logInByGithub","code","userSlice","createSlice","name","initialState","isLoggedIn","isAdmin","user","usernameValue","passwordValue","reducers","updateUsername","state","action","payload","updatePassword","logOut","removeItem","setUser","parse","Buffer","from","split","toString","extraReducers","pending","fulfilled","token","rejected","setItem","selectUser","actions","require","module","exports","process","CLIENT_ID","REDIRECT","BASE_NAME","BinaryFormula","lhs","rhs","this","addAll","Set","getFreeVariables","QuantifiedFormula","originalSymbol","subf","res","delete","Variable","Constant","FunctionApplication","args","reduce","fvs","arg","PredicateAtom","EqualityAtom","Negation","Conjunction","Disjunction","Implication","Equivalence","ExistentialQuant","UniversalQuant","b","forEach","elem","add","arrayToArityMap","symbols","arityMap","Map","x","has","set","arity","parseLanguageSubset","input","parser","array","checkArity","symbol","expected","get","length","parseFormalization","constants","predicates","functions","nonLogicalSymbols","keys","language","isConstant","isPredicate","isFunction","isVariable","factories","functionApplication","ee","predicateAtom","variable","v","_","constant","c","equalityAtom","negation","f","conjunction","disjunction","implication","equivalence","existentialQuant","universalQuant","size","getStringDomainAndPredicates","d","i","poc","Object","entries","key","value","includes","slice","p","j","stringForPredicateAndFunctions","addNewExercise","getState","exercise","selectExercise","saveExercise","removeExercise","fetchSavedExercise","exercise_id","fetchExercise","addExerciseSlice","title","description","constraint","id","propositions","proposition","proposition_id","formalizations","constraints","added","updateExerciseTitle","updateDescription","updateConstants","updatePredicates","updateFunctions","updateConstraint","updateInformalValue","reducer","prepare","updateFormalization","addNewProposition","push","addNewFormalization","removeProposition","splice","removeFormalization","updateConstraints","changeStatus","formalization","checkForDuplicates","values","found","selectExerciseTitle","addExercise","selectConstantsParsed","createSelector","result","parseConstants","selectPredicatesParsed","parsePredicates","selectFunctionsParsed","parseFunctions","selectLanguage","constantsParsed","predicatesParsed","functionsParsed","containsErrors","containsDuplicates","map","errorMessage","checkForClashes","selectPropositions","selectFormalizations","selectInformalValue","selectFormalization","parseFormulaWithPrecedence","selectConstraints","selectConstraint","checkExercise","fetchAllExercises","exercisesSlice","exercises","changeExerciseStatus","selectExercises","selectStatus","selectError","fetchAllUsersToExercise","fetchUsersSolutions","user_name","progressPropositionsSlice","users","solutions","meta","selectUsers","selectUsersSolution","selectUserName","evaluate","solution","solveExerciseSlice","update","evaluation","solveExercise","selectEvaluation","selectEvalStatus","selectEvalError","fetchAllUsers","saveAdmins","admins","adminsSlice","changed","addChanged","is_admin","selectAllUsers","allUsers","selectChangedAdmins","configureStore","addExerciseReducer","exercisesReducer","progressPropositionsReducer","adminsReducer","solveExerciseReducer","userReducer","connect","Component","component","location","rest","render","to","pathname","mapDispatchToProps","useEffect","Spinner","animation","variant","window","href","match","Form","Group","Label","Control","type","placeholder","onChange","e","target","Text","className","Button","onClick","preventDefault","url","replace","content","exercises_list","ListGroup","Item","as","Link","Alert","SyntaxError","start","offset","end","str_1","substring","str_2","str_3","str","ownProps","getMessage","solutionToFormalization","formalizationToSolution","pom","symbolsFormalizationToSolution","domainFormalizationToSolution","languageContants","domainFormToSol","symbolsFormToSol","domainSolToForm","symbolsSolutionToFormalization","domainSolutionToFormalization","symbolsSolToForm","iFormalizationSolution","open","m1","iSolutionToFormalization","m2","selectSolution","rows","disabled","useParams","propositions_list","mapStateToProps","LanguageSection","remove","data2","value2","error2","formalizations_list","attempted","Table","striped","bordered","hover","s","table","first","is_correct","date","user_list","log","lastattemptcorrec","solved","successful_attempts","last_attempt_date","attempts","colSpan","changedAdmins","defaultChecked","loginInfo","Fragment","basename","Navbar","bg","sticky","Nav","Container","exact","path","ExerciseList","UserList","Exercises","UsersToExercise","UserSolutionsList","LoginForm","SolveExercise","AddExercise","EditExerciseList","EditExercise","Boolean","hostname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3cc20fdf.chunk.js","sourcesContent":["import { BACKEND_URL } from '../config';\n\n\nexport const fetchData = async (route, method, body = undefined) => {\n  const config = {\n    method: method,\n    headers: { \"Content-Type\": \"application/json\"}\n  }\n  if(localStorage.getItem(\"token\") !== undefined){\n    config.headers[\"Authorization\"] = \"Bearer \" + localStorage.getItem(\"token\");\n  }\n  if (body) {\n    config.body = JSON.stringify(body)\n  }\n\n  let response = await fetch(BACKEND_URL + route, config);\n\n  if (response.ok) {\n    return response.json();\n  }\n  \n  throw new Error(response.status + \" \" + response.statusText);\n}\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\n\n\n\n\n/* async actions */\n\nexport const logIn = createAsyncThunk(\n  'user/logIn',\n  async ({ username, password }, { rejectWithValue }) => {\n    try {\n      let data = {};\n      data[\"username\"] = username;\n      data[\"password\"] = password;\n      let response = await fetchData(\n          `/api/exercises/logIn`, 'POST', data\n      );\n\n    return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\nexport const logInByGithub = createAsyncThunk(\n  'user/logInGithub',\n  async ( {code},  { rejectWithValue }) => {\n    try {\n      let data = {};\n      data[\"code\"] = code;\n      let response = await fetchData(\n          `/api/exercises/logIn/github/auth`, 'POST', data\n      );\n      return response;\n    } catch (err) {\n      console.error(err.message)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    isAdmin: false,\n    user: null,\n    \n    status: 'idle',\n    error: null,\n\n    usernameValue: '',\n    passwordValue: ''\n  },\n  reducers: {\n    updateUsername: (state, action) => {\n      state.usernameValue = action.payload;\n    },\n    updatePassword: (state, action) => {\n      state.passwordValue = action.payload;\n    },\n    logOut: (state) => {\n      localStorage.removeItem(\"token\");\n      state.isLoggedIn = false;\n      state.user = null;\n      state.status = 'idle';\n      state.error = '';\n    },\n    setUser: (state) => {\n      let data = JSON.parse(Buffer.from(localStorage.getItem(\"token\").split(\".\")[1], \"base64\").toString());\n      state.user = {\"username\": data.username};\n      state.isLoggedIn = true;\n      state.isAdmin = data.isAdmin;\n    },\n  },\n  extraReducers: {\n    [logIn.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logIn.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.usernameValue = '';\n      state.passwordValue = '';\n      if (action.payload) {\n        let data = JSON.parse(Buffer.from(action.payload.token.split(\".\")[1], \"base64\").toString());\n        state.user = {\"username\": data.username};\n        state.isLoggedIn = true;\n        state.isAdmin = data.isAdmin;\n        localStorage[\"token\"] = action.payload.token\n      } else {\n        state.error = '';\n      }\n    },\n    [logIn.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n    [logInByGithub.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logInByGithub.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.usernameValue = '';\n      state.passwordValue = '';\n      if (action.payload) {\n        let data = JSON.parse(Buffer.from(action.payload.token.split(\".\")[1], \"base64\").toString());\n        state.user = {\"username\": data.username};\n        state.isLoggedIn = true;\n        state.isAdmin = data.isAdmin;\n        localStorage.setItem(\"token\", action.payload.token);\n      } else {\n        state.error = '';\n      }\n    },\n    [logInByGithub.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n  }\n});\n\nexport const selectUser = (state) => {\n  return state.user.user.username;\n}\n\n\n/* export actions */\nexport const {\n  updateUsername,\n  updatePassword,\n  logOut,\n  setUser\n} = userSlice.actions;\n\n\nexport default userSlice.reducer;\n","const dotenv = require('dotenv');\n\ndotenv.config();\n\nmodule.exports = {\n     BACKEND_URL: process.env.REACT_APP_BACKEND_URL,\n     CLIENT_ID: process.env.REACT_APP_CLIENT_ID,\n     REDIRECT: process.env.REACT_APP_REDIRECT,\n     BASE_NAME: process.env.REACT_APP_BASE_NAME\n}\n\n","export class BinaryFormula {\n  constructor(lhs, rhs) {\n    this.lhs = lhs;\n    this.rhs = rhs;\n  }\n\n  getFreeVariables() {\n    let a = addAll(new Set(), this.lhs.getFreeVariables());\n    return addAll(a, this.rhs.getFreeVariables())\n  }\n}\n\nexport class QuantifiedFormula {\n  constructor(originalSymbol, subf) {\n    this.originalSymbol = originalSymbol;\n    this.subf = subf;\n  }\n  getFreeVariables() {\n    const res = this.subf.getFreeVariables()\n    res.delete(this.originalSymbol);\n    return res;\n  }\n}\n\nexport class Variable {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set([this.originalSymbol]);\n\n  }\n}\n\nexport class Constant {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set();\n  }\n}\n\nexport class FunctionApplication {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables(){\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class PredicateAtom {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables() {\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class EqualityAtom extends BinaryFormula{\n}\n\nexport class Negation {\n  constructor(subf) {\n    this.subf = subf;\n  }\n\n  getFreeVariables(){\n    return this.subf.getFreeVariables();\n  }\n}\n\nexport class Conjunction extends BinaryFormula{\n}\n\nexport class Disjunction extends BinaryFormula{\n}\n\nexport class Implication extends BinaryFormula{\n}\n\nexport class Equivalence extends BinaryFormula{\n}\n\nexport class ExistentialQuant extends QuantifiedFormula{\n}\n\nexport class UniversalQuant extends QuantifiedFormula{\n}\n\nfunction addAll(a, b) {\n  b.forEach((elem) => a.add(elem));\n  return a;\n}\n","import {\n  Conjunction, Constant,\n  Disjunction, EqualityAtom,\n  Equivalence,\n  ExistentialQuant,\n  FunctionApplication,\n  Implication, Negation, PredicateAtom, UniversalQuant,\n  Variable\n} from \"./formula_classes\";\n\nexport const arrayToArityMap = (symbols) => {\n  let arityMap = new Map();\n  for (let x of symbols) {\n    if (!arityMap.has(x.name)) {\n      arityMap.set(x.name, x.arity);\n    }\n  }\n  return arityMap;\n}\n\nexport const parseLanguageSubset = (input, parser) => {\n  try {\n    let result = parser(input);\n    return {\n      array: result,\n      error: null\n    };\n  } catch (error) {\n    return {\n      array: [],\n      error: error\n    };\n  }\n}\n\nconst checkArity = (symbol, args, arityMap, {expected}) => {\n  const a = arityMap.get(symbol);\n  if (args.length !== a) {\n    expected(`${a} argument${(a === 1 ? '' : 's')} to ${symbol}`);\n  }\n}\n\nexport const parseFormalization = (input, constants, predicates, functions, parser) => {\n  const nonLogicalSymbols = new Set([\n    ...constants,\n    ...predicates.keys(),\n    ...functions.keys()\n  ]);\n\n  const language = {\n    isConstant: (x) => constants.has(x),\n    isPredicate: (x) => predicates.has(x),\n    isFunction: (x) => functions.has(x),\n    isVariable: (x) => !nonLogicalSymbols.has(x)\n  };\n\n  const factories = {\n    functionApplication: (symbol, args, ee) => {\n      checkArity(symbol, args, functions, ee);\n      return new FunctionApplication(symbol, args);\n    },\n    predicateAtom: (symbol, args, ee) => {\n      checkArity(symbol, args, predicates, ee);\n      return new PredicateAtom(symbol, args);\n    },\n    variable: (v, _) =>  new Variable(v , v),\n    constant: (c, _) => new Constant(c, c),\n    equalityAtom: (lhs, rhs, _) => new EqualityAtom(lhs, rhs),\n    negation: (f, _) => new Negation(f),\n    conjunction: (lhs, rhs, _) => new Conjunction(lhs, rhs),\n    disjunction: (lhs, rhs, _) => new Disjunction(lhs, rhs),\n    implication: (lhs, rhs, _) => new Implication(lhs, rhs),\n    equivalence: (lhs, rhs, _) => new Equivalence(lhs, rhs),\n    existentialQuant: (v, f, _) => new ExistentialQuant(v, f),\n    universalQuant: (v, f, _) => new UniversalQuant(v, f),\n  };\n\n  try {\n    let a = parser(input, language, factories);\n    a = a.getFreeVariables();\n    if(a.size !== 0){\n      let res = \"\";\n      for(let element of a){\n        res += element + \" \";\n      }\n      throw {\"location\" : {\"start\" : { \"column\": 0,\n                                      \"line\": 0,\n                                      \"offset\": 0\n                                      },\n                          \"end\" : { \"column\": 0,\n                                    \"line\": 0,\n                                    \"offset\": 0\n                                  }\n                           }  ,\n              \"message\" : \"Expected  existential quantifier or universal quantifier but following free \" + (a.size === 1? \"variable \" :  \"variables \") + res +  \"found.\"};\n    }\n    return null;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport function getStringDomainAndPredicates(symbols, constants, language){\n  let d = \"𝒟 = {\";\n  let i = \"\";\n  let poc = 0;\n  if(symbols === ''){\n    return ['',''];\n  }\n  for (let [key, value] of Object.entries(constants)){\n    if(language.includes(key)) {\n      i += \"𝑖(\" + key + \") = \" + value + \"\\n\";\n    }\n    if( value <= poc){\n      continue;\n    }\n    d += value + \", \";\n    poc++;\n  }\n  i += \"\\n\";\n  d = d.slice(0, d.length -2 );\n  d += \"}\\n\";\n\n  i += stringForPredicateAndFunctions(symbols);\n  return [d, i];\n}\n\nfunction stringForPredicateAndFunctions(name){\n  let p = \"\";\n  for (let [key, value] of Object.entries(name)) {\n    // eslint-disable-next-line no-useless-concat\n    p += \"𝑖(\" + key + \") = \" + \"{\";\n    if (value[value.length - 1] === undefined) {\n      p += \"}\\n\";\n      continue;\n    }\n    for (let j = 0; j < value.length - 1; j++) {\n      if (value[j] === undefined) {\n        continue;\n      }\n      if(value[j].length === 1){\n        p += value[j] + \", \";\n      }\n      else{\n        p += \"(\" + value[j] + \"), \";\n      }\n\n    }\n    if(value[value.length - 1].length === 1){\n      p += value[value.length - 1] + \"}\\n\";\n    }\n    else{\n      p += \"(\" +  value[value.length - 1] + \")}\\n\";\n    }\n\n  }\n\n  return p;\n}","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseLanguageSubset,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const addNewExercise = createAsyncThunk(\n  'addExercise/addNewExercise',\n  async (_, { getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await fetchData(\n        '/api/exercises', 'POST', exercise\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const saveExercise = createAsyncThunk(\n  'saveExercise',\n  async (_, { getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await fetchData(\n        '/api/exercises/edit', 'POST', exercise\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const removeExercise = createAsyncThunk(\n  'saveExercise',\n  async (_, { getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await fetchData(\n        '/api/exercises/edit/remove', 'POST', exercise\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const fetchSavedExercise = createAsyncThunk(\n  'fetchSavedExercise',\n  async (exercise_id, { getState, rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n          `/api/exercises/edit/${exercise_id}`, 'GET'\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const fetchExercise = createAsyncThunk(\n    'fetchExercise',\n    async (exercise_id, { rejectWithValue }) => {\n      try {\n        let response = await fetchData(\n            `/api/exercises/${exercise_id}`, 'GET'\n        );\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\n/* slice */\nexport const addExerciseSlice = createSlice({\n  name: 'addExercise',\n  initialState: {\n    title: '',\n    description: '',\n    constants: '',\n    predicates: '',\n    functions: '',\n    constraint: '',\n    id: '',\n    propositions: [{\n      proposition: '',\n      proposition_id: '',\n      formalizations: [''],\n      constraints: ['']\n    }],\n\n    status: 'idle',\n    error: null,\n    added: null,\n  },\n  reducers: {\n    updateExerciseTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    updateDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    updateConstants: (state, action) => {\n      state.constants = action.payload;\n    },\n    updatePredicates: (state, action) => {\n      state.predicates = action.payload;\n    },\n    updateFunctions: (state, action) => {\n      state.functions = action.payload;\n    },\n    updateConstraint: (state, action) => {\n      state.constraint = action.payload;\n    },\n    updateInformalValue: {\n      reducer: (state, action) => {\n        const { value, i } = action.payload;\n        state.propositions[i].proposition = value;\n      },\n      prepare: (value, i) => {\n        return { payload: { value, i } };\n      }\n    },\n    updateFormalization: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].formalizations[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j } };\n      }\n    },\n    addNewProposition: (state) => {\n      state.propositions.push({\n        proposition: '',\n        formalizations: [''],\n        constraints: ['']\n      });\n    },\n    addNewFormalization: (state, action) => {\n      const i = action.payload;\n      state.propositions[i].formalizations.push('');\n      state.propositions[i].constraints.push('');\n    },\n    removeProposition: (state, action) => {\n      const i = action.payload;\n      state.propositions.splice(i, 1);\n    },\n    removeFormalization: {\n      reducer: (state, action) => {\n        const { i, j } = action.payload;\n        state.propositions[i].formalizations.splice(j, 1);\n        state.propositions[i].constraints.splice(j, 1);\n      },\n      prepare: (i, j) => {\n        return { payload: { i, j } };\n      }\n    },\n    updateConstraints: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].constraints[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j} };\n      }\n    },\n    changeStatus: {\n      reducer: (state, action) => {\n        state.added = null;\n        state.status = 'idle';\n        state.title = '';\n        state.description = '';\n        state.constants = '';\n        state.predicates = '';\n        state.functions = '';\n        state.constraint = '';\n        state.id = '';\n        state.propositions = [{\n          proposition: '',\n          proposition_id: '',\n          formalizations: [''],\n          constraints: ['']\n        }];\n\n      }\n    },\n  },\n  extraReducers: {\n    [addNewExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [addNewExercise.fulfilled]: (state, action) => {\n      state.added = true;\n      state.title =  ''\n      state.description =  ''\n      state.constants =  ''\n      state.predicates = ''\n      state.functions =  ''\n      state.constraint = ''\n      state.propositions= [{\n        \"proposition\": '',\n        \"formalizations\": [''],\n        \"constraints\": ['']\n      }]\n\n      state.status = 'idle'\n    },\n    [addNewExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [saveExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [saveExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.title = '';\n      state.description = '';\n      state.constants = '';\n      state.predicates = '';\n      state.functions = '';\n      state.constraint = '';\n      state.id = '';\n      state.propositions = [{\n        proposition: '',\n        proposition_id: '',\n        formalizations: [''],\n        constraints: ['']\n      }];\n    },\n    [saveExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [removeExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [removeExercise.fulfilled]: (state, action) => {\n      state.status = 'removed';\n      state.title = '';\n      state.description = '';\n      state.constants = '';\n      state.predicates = '';\n      state.functions = '';\n      state.constraint = '';\n      state.id = '';\n      state.propositions = [{\n        proposition: '',\n        proposition_id: '',\n        formalizations: [''],\n        constraints: ['']\n      }];\n    },\n    [removeExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n    },\n    [fetchExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchSavedExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchSavedExercise.fulfilled]: (state, action) => {\n      state.status = 'idle';\n      const exercise = action.payload;\n      state.title = exercise.title;\n      state.description = exercise.description;\n      state.constants = exercise.constants;\n      state.predicates = exercise.predicates;\n      state.functions = exercise.functions;\n      state.constraint = exercise.constraints === undefined? \"\": exercise.constraints;\n      state.id = exercise.exercise_id;\n      state.propositions = [];\n      for (let i = 0; i < exercise.propositions.length; i++) {\n        let formalization = [];\n        let constraint = [];\n        for (let j = 0; j < exercise.propositions[i].formalization.length; j++) {\n          formalization.push(exercise.propositions[i].formalization[j].formalization);\n          constraint.push(exercise.propositions[i].formalization[j].constraints);\n        }\n        state.propositions.push({\n          proposition: exercise.propositions[i].proposition,\n          proposition_id: exercise.propositions[i].proposition_id,\n          formalizations: formalization,\n          constraints: constraint\n        })\n      }\n    },\n    [fetchSavedExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n  }\n});\n\n\n/* export actions */\nexport const {\n  updateExerciseTitle,\n  updateDescription,\n  updateConstants,\n  updatePredicates,\n  updateFunctions,\n  updateInformalValue,\n  updateFormalization,\n  addNewProposition,\n  addNewFormalization,\n  removeProposition,\n  removeFormalization,\n  updateConstraints,\n  updateConstraint,\n    changeStatus\n} = addExerciseSlice.actions;\n\n\n/* definition of helper functions used in selectors */\n\nfunction checkForDuplicates(values, name) {\n  let found = new Set();\n  for (let x of values) {\n    if (found.has(x)) {\n      return `Found duplicate symbol: '${x}' in ${name}`;\n    } else {\n      found.add(x);\n    }\n  }\n\n  return null;\n}\n\nfunction checkForClashes(constants, predicates, functions) {\n  for (let x of constants) {\n    if (predicates.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and predicates`;\n    }\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and functions`;\n    }\n  }\n\n  for (let x of predicates.keys()) {\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in predicates and functions`;\n    }\n  }\n\n  return null;\n}\n\n\n/* selectors */\n\nexport const selectExerciseTitle = (state) => {\n  return {\n    value: state.addExercise.title\n  };\n};\n\nexport const selectDescription = (state) => {\n  return {\n    value: state.addExercise.description\n  };\n};\n\nexport const selectConstantsParsed = createSelector(\n  [ state => state.addExercise.constants ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseConstants);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectPredicatesParsed = createSelector(\n  [ state => state.addExercise.predicates ],\n  (value) => {\n    let result = parseLanguageSubset(value, parsePredicates);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectFunctionsParsed = createSelector(\n  [ state => state.addExercise.functions ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseFunctions);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectLanguage = createSelector(\n  [\n    selectConstantsParsed,\n    selectPredicatesParsed,\n    selectFunctionsParsed\n  ],\n  (constantsParsed, predicatesParsed, functionsParsed) => {\n    let constants = new Set(constantsParsed.array);\n    let predicates = arrayToArityMap(predicatesParsed.array);\n    let functions = arrayToArityMap(functionsParsed.array);\n\n    let containsErrors = constantsParsed.error\n      || predicatesParsed.error\n      || functionsParsed.error;\n    let containsDuplicates = checkForDuplicates(constantsParsed.array, \"constants\")\n      || checkForDuplicates(predicatesParsed.array.map(x => x.name), \"predicates\")\n      || checkForDuplicates(functionsParsed.array.map(x => x.name), \"functions\");\n    \n    let errorMessage = null;\n    if (containsErrors) {\n      errorMessage = \"Language definition contains errors\";\n    } else if (containsDuplicates) {\n      errorMessage = containsDuplicates;\n    } else {\n      errorMessage = checkForClashes(constants, predicates, functions);\n    }\n\n    return { constants, predicates, functions, errorMessage };\n  }\n);\n\nexport const selectPropositions = (state) => {\n  return state.addExercise.propositions;\n};\n\nexport const selectFormalizations = (state, i) => {\n  return state.addExercise.propositions[i].formalizations;\n};\n\nexport const selectInformalValue = (state, i) => {\n  return state.addExercise.propositions[i].proposition;\n};\n\nexport const selectFormalization = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].formalizations[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\nexport const selectConstraints = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].constraints[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\nexport const selectConstraint = createSelector(\n  [\n    (state) => state.addExercise.constraint,\n    (state) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\n\nconst selectExercise = (state) => {\n  let language = selectLanguage(state);\n  if (language.errorMessage || selectExerciseTitle(state).value === \"\") {\n    return null;\n  }\n\n  let propositions = selectPropositions(state);\n  for (let i = 0; i < propositions.length; i++) {\n    if (propositions[i].proposition === \"\") {\n      return null;\n    }\n    let formalizations = propositions[i].formalizations;\n    for (let j = 0; j < formalizations.length; j++) {\n      let formalization = selectFormalization(state, i, j);\n      if (formalization.error) {\n        return null;\n      }\n      let constraint = selectConstraints(state, i, j);\n      if (constraint.error) {\n        return null;\n      }\n    }\n  }\n  \n  return {\n    title: state.addExercise.title,\n    description: state.addExercise.description,\n    constants: state.addExercise.constants,\n    predicates: state.addExercise.predicates,\n    functions: state.addExercise.functions,\n    constraint: state.addExercise.constraint,\n    id: state.addExercise.id,\n    propositions: state.addExercise.propositions,\n  };\n};\n\nexport const checkExercise = (state) => {\n  let exercise = selectExercise(state);\n  return !exercise;\n};\n\n\nexport default addExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport { fetchData } from './fetchData';\n\n\n/* async actions */\n\nexport const fetchAllExercises = createAsyncThunk(\n  'exercises/fetchAllExercises',\n  async (_, { rejectWithValue }) => {\n    try {\n      let response = await fetchData('/api/exercises', 'GET');\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const exercisesSlice = createSlice({\n  name: 'exercises',\n  initialState: {\n    exercises: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {changeExerciseStatus: {\n      reducer: (state, action) => {\n        state.added = null;\n        state.status = 'idle';\n      }\n    },},\n  extraReducers: {\n    [fetchAllExercises.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllExercises.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercises = action.payload;\n    },\n    [fetchAllExercises.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n/* export actions */\nexport const {\n  changeExerciseStatus\n} = exercisesSlice.actions;\n\n/* selectors */\n\nexport const selectExercises = (state) => {\n  return state.exercises.exercises;\n};\n\nexport const selectPropositions = (state) => {\n  return state.exercises;\n};\n\nexport const selectStatus = (state) => {\n  return state.exercises.status;\n};\n\nexport const selectError = (state) => {\n  return state.exercises.error;\n};\n\n\nexport default exercisesSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport { fetchData } from './fetchData';\n\n\n/* async actions */\n\nexport const fetchAllUsersToExercise = createAsyncThunk(\n    'exercises/fetchAllUsersToExercise',\n    async (exercise_id, { rejectWithValue }) => {\n      try {\n        let response = await fetchData(`/api/exercises/progress/${exercise_id}`, 'GET');\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\nexport const fetchUsersSolutions = createAsyncThunk(\n    'exercises/fetchUsersSolutions',\n    async ({exercise_id, user_name}, { rejectWithValue }) => {\n      try {\n        let response = await fetchData(`/api/exercises/progress/user/${user_name}/${exercise_id}`, 'GET');\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\n\n/* slice */\nexport const progressPropositionsSlice = createSlice({\n  name: 'users',\n  initialState: {\n    users: [],\n    status: 'idle',\n    error: null,\n    solutions: [],\n    exercise_id: null,\n    user: '',\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllUsersToExercise.pending]: (state, action) => {\n      state.status = 'loading';\n      state.exercise_id = action.meta.arg\n    },\n    [fetchAllUsersToExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = action.payload;\n    },\n    [fetchAllUsersToExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchUsersSolutions.pending]: (state, action) => {\n      state.status = 'loading';\n      state.user = action.meta.arg.user_name;\n    },\n    [fetchUsersSolutions.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.solutions = action.payload;\n    },\n    [fetchUsersSolutions.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n\n/* selectors */\n\nexport const selectUsers = (state) => {\n  return state.propositions.users;\n};\n\nexport const selectProposition = (state) => {\n  if(state.propositions.users[0] !== undefined){\n    return state.propositions.users[0].proposition_id;\n  }\n  return null;\n};\n\nexport const selectExerciseId = (state) => {\n  return state.propositions.exercise_id;\n};\n\nexport const selectExerciseTitle = (state) => {\n  for(let i = 0; i < state.exercises.exercises.length; i++){\n    if(state.exercises.exercises[i].exercise_id === state.propositions.exercise_id){\n      return state.exercises.exercises[i].title\n    }\n  }\n  return null;\n};\n\n\nexport const selectUsersSolution = (state) => {\n  return state.propositions.solutions;\n};\nexport const selectUserName = (state) => {\n  return state.propositions.user;\n};\n\nexport const selectStatus = (state) => {\n  return state.propositions.status;\n};\n\nexport const selectError = (state) => {\n  return state.propositions.status;\n};\n\n\nexport default progressPropositionsSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const fetchExercise = createAsyncThunk(\n  'solveExercise/fetchExercise',\n  async ({exercise_id, user_name}, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n        `/api/exercises/${exercise_id}`, 'POST', { username: user_name}\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const evaluate = createAsyncThunk(\n  'solveExercise/evaluate',\n  async ({ exercise_id, proposition_id, solution, user }, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n        `/api/exercises/${exercise_id}/${proposition_id}`, 'POST',\n        { solution, user}\n      );\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const solveExerciseSlice = createSlice({\n  name: 'solveExercise',\n  initialState: {\n    exercise: null,\n    status: 'idle',\n    error: null,\n\n    constants: [],\n    predicates: [],\n    functions: [],\n\n    solutions: {}\n  },\n  reducers: {\n    update: {\n      reducer: (state, action) => {\n        const { value, id } = action.payload;\n        state.solutions[id].solution = value;\n      },\n      prepare: (value, id) => {\n        return { payload: { value, id } };\n      }\n    }\n  },\n  extraReducers: {\n    [fetchExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercise = action.payload;\n      state.constants = parseConstants(state.exercise.constants);\n      state.predicates = parsePredicates(state.exercise.predicates);\n      state.functions = parseFunctions(state.exercise.functions);\n      for (let p of state.exercise.propositions) {\n        state.solutions[p.proposition_id] = {\n\n\n          evaluation: null,\n\n          status: 'idle',\n          error: null,\n        };\n        if(p.solution === null || p.solution === undefined){\n          state.solutions[p.proposition_id][\"solution\"] = '';\n        }\n        else{\n          state.solutions[p.proposition_id][\"solution\"] = p.solution\n        }\n      }\n    },\n    [fetchExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n\n    [evaluate.pending]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'loading';\n    },\n    [evaluate.fulfilled]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let evaluation = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'succeeded';\n      solution.evaluation = evaluation;\n    },\n    [evaluate.rejected]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let { error } = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'failed';\n      solution.error = error;\n    }\n  }\n});\n\n\n/* export actions */\nexport const {\n  update\n} = solveExerciseSlice.actions;\n\n\n/* selectors */\n\nexport const selectExercise = (state) => {\n  return state.solveExercise.exercise;\n};\n\nexport const selectSolution = (state, id) => {\n  const value = state.solveExercise.solutions[id].solution;\n  let error = parseFormalization(\n    value, new Set(state.solveExercise.constants),\n    arrayToArityMap(state.solveExercise.predicates),\n    arrayToArityMap(state.solveExercise.functions),\n    parseFormulaWithPrecedence\n  );\n  return { value, error};\n};\n\nexport const selectStatus = (state) => {\n  return state.solveExercise.status;\n};\n\nexport const selectError = (state) => {\n  return state.solveExercise.error;\n};\n\nexport const selectEvaluation = (state, id) => {\n  return state.solveExercise.solutions[id].evaluation;\n};\n\nexport const selectEvalStatus = (state, id) => {\n  return state.solveExercise.solutions[id].status;\n};\n\nexport const selectEvalError = (state, id) => {\n  return state.solveExercise.solutions[id].error;\n};\n\n\nexport default solveExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\n\n/* async actions */\n\nexport const fetchAllUsers = createAsyncThunk(\n  'users',\n  async (user, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n          `/api/exercises/allUsers/${user}`, 'GET'\n      );\n    return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const saveAdmins = createAsyncThunk(\n  'admins',\n  async (admins, { rejectWithValue }) => {\n    try {\n      let response = await fetchData(\n          `/api/exercises/allUsers`, 'POST', admins\n      );\n\n     return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n/* slice */\nexport const adminsSlice = createSlice({\n  name: 'admins',\n  initialState: {\n    users: [''],\n    \n    status: 'idle',\n    error: null,\n\n    changed: {}\n  },\n  reducers: {\n    addChanged: (state, action) => {\n      state.changed[action.payload] = !state.changed[action.payload] ;\n    },\n    },\n  extraReducers: {\n    [fetchAllUsers.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllUsers.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = action.payload\n      for(let i = 0; i < state.users.length; i++){\n        state.changed[state.users[i].user_name] = state.users[i].is_admin;\n      }\n    },\n    [fetchAllUsers.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'There are no users';\n    } ,\n    [saveAdmins.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [saveAdmins.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = [];\n      for(let [key, value] of Object.entries(action.payload)){\n        state.users.push({\"user_name\": key, \"is_admin\": value});\n      }\n    },\n    [saveAdmins.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'Unsuccessful saving admins';\n    } ,\n  }\n});\n\nexport const selectAllUsers = (state) => {\n  return state.allUsers.users;\n};\n\nexport const selectStatus = (state) => {\n  return state.allUsers.status;\n};\n\nexport const selectError = (state) => {\n  return state.allUsers.error;\n};\n\nexport const selectChangedAdmins = (state) => {\n  return state.allUsers.changed;\n};\n\n/* export actions */\nexport const {\n  addChanged\n} = adminsSlice.actions;\n\nexport default adminsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport addExerciseReducer from './addExerciseSlice';\nimport exercisesReducer from './exercisesSlice';\nimport progressPropositionsReducer from './progressPropositionsSlice';\nimport solveExerciseReducer from './solveExerciseSlice';\nimport userReducer from './userSlice';\nimport adminsReducer from './adminsSlice';\n\nexport default configureStore({\n  reducer: {\n    addExercise: addExerciseReducer,\n    exercises: exercisesReducer,\n    propositions: progressPropositionsReducer,\n    allUsers: adminsReducer,\n    solveExercise: solveExerciseReducer,\n    user: userReducer\n  }\n});\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction ProtectedRoute({ isLoggedIn, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isLoggedIn) {\n          return <Component />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React, {useEffect} from 'react';\nimport { Form, Button, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n    updateUsername, updatePassword, logIn, logInByGithub, setUser\n} from '../../redux/userSlice';\nimport {CLIENT_ID, REDIRECT} from \"../../config\";\n\n\nfunction LoginForm({\n  usernameValue, passwordValue, updateUsername, updatePassword, setUser,\n  location, isLoggedIn, status, error, logIn, logInByGithub\n}) {\n    useEffect(() => {\n        if (localStorage.getItem(\"token\") !== null) {\n            setUser();\n        }\n    }, [status, setUser]);\n\n  if (status === 'loading') {\n    return <Spinner animation=\"border\" variant=\"primary\" />;\n  }\n  if(window.location.href.match(\"code\")){\n      let code = window.location.href.split(\"code=\")[1];\n      logInByGithub({code: code});\n      return <Redirect to=\"/\" />\n  }\n\n  if (isLoggedIn) {\n    if (location.state && location.state.from && location.state.from.pathname) {\n      return <Redirect to={location.state.from.pathname} />\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  } else {\n\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label>\n            Username\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            value={usernameValue}\n            onChange={(e) => updateUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Password\n          </Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={passwordValue}\n            onChange={(e) => updatePassword(e.target.value)}\n          />\n          <Form.Text className=\"text-danger\">\n            { error }\n          </Form.Text>\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            logIn({ username: usernameValue, password: passwordValue });\n          }}\n        >\n          Log in\n        </Button>\n        <Button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n              let url = \"https://github.com/login/oauth/authorize?client_id=\" + CLIENT_ID + \"&redirect_uri=\" + REDIRECT +\"&scope=read:user\"\n              window.location.replace(url);\n          }}\n        >\n          Log in with Github\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    usernameValue: state.user.usernameValue,\n    passwordValue: state.user.passwordValue,\n    isLoggedIn: state.user.isLoggedIn,\n    status: state.user.status,\n    error: state.user.error\n  };\n};\n\nconst mapDispatchToProps = { updateUsername, updatePassword, logIn, logInByGithub, setUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React, { useEffect } from 'react';\nimport { ListGroup, Spinner, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {\n  fetchExercise\n} from '../../redux/solveExerciseSlice';\nimport {selectUser} from \"../../redux/userSlice\";\n\n\nfunction ExerciseList({ exercises, status, error, fetchAllExercises, fetchExercise, username }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => (\n      <ListGroup.Item\n        as={Link} to={`/solve/${x.exercise_id}`} key={x.exercise_id}\n        variant=\"primary\" action\n        onClick={() => fetchExercise({exercise_id:x.exercise_id, user_name: username })}\n      >\n        { x.title }\n      </ListGroup.Item>\n    ));\n    content = <ListGroup>{ exercises_list }</ListGroup>;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Exercises</h2>\n      { content }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    username: selectUser(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n\nfunction SyntaxError({ value, error }) {\n  if (!error) {\n    return null;\n  }\n\n  const start = error.location.start.offset;\n  const end = error.location.end.offset;\n\n  const str_1 = value.substring(0, start);\n  const str_2 = value.substring(start, end);\n  const str_3 = value.substring(end);\n\n  const str = value === \"\" ?\n    null : (\n      <div>\n        {str_1}\n        <u className=\"bg-warning\">\n          {str_2}\n        </u>\n        {str_3}\n      </div>\n    );\n\n  return (\n    <Form.Text className=\"mb-3\">\n      {str}\n      <div className=\"text-danger\">\n        {error.message}\n      </div>\n    </Form.Text>\n  );\n}\n\nexport default SyntaxError;\n","import React from 'react';\nimport { Spinner, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectEvaluation,\n  selectEvalStatus,\n  selectEvalError\n} from '../../redux/solveExerciseSlice';\nimport {\n    getStringDomainAndPredicates,\n} from '../../redux/helpers';\n\n\nfunction Evaluation({ evaluation, status, error }) {\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    content = getMessage(evaluation);\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    evaluation: selectEvaluation(state, ownProps.proposition_id),\n    status: selectEvalStatus(state, ownProps.proposition_id),\n    error: selectEvalError(state, ownProps.proposition_id)\n  };\n};\n\nexport default connect(mapStateToProps)(Evaluation);\n\n\nconst getMessage = (evaluation) => {\n  if (evaluation.solutionToFormalization === 'OK'\n      && evaluation.formalizationToSolution === 'OK') {\n        return (\n          <Alert variant=\"success\">\n            <b>Riešenie je správne.</b>\n          </Alert>\n        );\n  } else if (evaluation.solutionToFormalization === 'TE'\n      || evaluation.formalizationToSolution === 'TE' || evaluation.solutionToFormalization === 'ME'\n      || evaluation.formalizationToSolution === 'ME') {\n        return (\n          <Alert variant=\"warning\">\n           <p> Dokazovaču sa nepodarilo zistiť,\n            či je vaše riešenie správne alebo nesprávne.\n               Na správnosť vášho riešenia sa spýtajte.</p>\n          </Alert>\n        );\n  } else {\n      let pom = getStringDomainAndPredicates(evaluation.symbolsFormalizationToSolution, evaluation.domainFormalizationToSolution,\n           evaluation.languageContants);\n      let domainFormToSol = pom[0];\n      let symbolsFormToSol = pom[1];\n\n      pom = getStringDomainAndPredicates(evaluation.symbolsSolutionToFormalization, evaluation.domainSolutionToFormalization,\n           evaluation.languageContants);\n      let domainSolToForm = pom[0];\n      let symbolsSolToForm = pom[1];\n\n      if (evaluation.solutionToFormalization === 'OK'\n          && evaluation.formalizationToSolution === 'WA') {\n          if (evaluation.iFormalizationSolution !== 'null') {\n              return (\n                  <Alert variant=\"danger\">\n                      <details open=\"true\">\n                          <summary><b>Riešenie je nesprávne.</b>\n                          <p>Vieme nájsť konkrétnu štruktúru,\n                              v ktorej je hľadaná správna formalizácia pravdivá,\n                              ale vaša formalizácia je nepravdivá.</p></summary>\n\n                          <p>{evaluation.m1}</p>\n                          <p>{domainFormToSol}</p>\n                          {symbolsFormToSol.split(\"\\n\").map((i,key) => {\n                              return <div className=\"p\" key={key}>{i}</div>;\n                          })}\n\n\n                          <br/>\n\n\n                      </details>\n                  </Alert>\n              );\n          } else {\n              return (\n                  <Alert variant=\"danger\">\n                      <details open=\"true\">\n                          <summary><b>Riešenie je nesprávne.</b>\n                              <p>Nepodarilo sa nájsť štruktúru, na vaše riešenie sa radšej opýtajte.</p></summary>\n\n                      </details>\n                  </Alert>\n              );\n          }\n      } else if (evaluation.solutionToFormalization === 'WA'\n          && evaluation.formalizationToSolution === 'OK') {\n          if (evaluation.iSolutionToFormalization !== 'null') {\n              return (\n                  <Alert variant=\"danger\">\n                      <details open=\"true\">\n                         <summary> <b>Riešenie je nesprávne.</b>\n                          <p>Vieme nájsť konkrétnu štruktúru,\n                              v ktorej je vaša formalizácia pravdivá,\n                              ale hľadaná správna formalizácia je nepravdivá.</p> </summary>\n                          <p>{evaluation.m2}</p>\n                          <p>{domainSolToForm}</p>\n                          {symbolsSolToForm.split(\"\\n\").map((i,key) => {\n                              return <div className=\"p\" key={key}>{i}</div>;\n                          })}\n\n                      </details>\n                  </Alert>\n              );\n          } else {\n              return (\n                  <Alert variant={\"danger\"}>\n                      <details open=\"true\">\n                          <summary><b>Riešenie je nesprávne.</b>\n                              <p>Nepodarilo sa nájsť štruktúru, na vaše riešenie sa radšej opýtajte.</p></summary>\n                      </details>\n                  </Alert>\n              );\n          }\n      } else {\n          return (\n              <Alert variant={\"danger\"}>\n                  <details open=\"true\">\n                      <summary><b>Riešenie je nesprávne.</b>\n                      <p>Vieme nájsť konkrétne štruktúry,\n                          v ktorých je vaša formalizácia pravdivá,\n                          ale hľadaná správna formalizácia je nepravdivá, a naopak.</p></summary>\n\n                      <p>{evaluation.m2}</p>\n                      <p>{domainSolToForm}</p>\n                      {symbolsSolToForm.split(\"\\n\").map((i,key) => {\n                          return <div className=\"p\" key={key}>{i}</div>;\n                      })}\n\n\n                      <p>{evaluation.m1}</p>\n                      <p>{domainFormToSol}</p>\n                      {symbolsFormToSol.split(\"\\n\").map((i,key) => {\n                          return <div className=\"p\" key={key}>{i}</div>;\n                      })}\n\n\n                  </details>\n              </Alert>\n          );\n      }\n\n  }\n};\n\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from '../addExercise/SyntaxError';\nimport Evaluation from './Evaluation';\nimport {\n  update,\n  evaluate,\n  selectSolution\n} from '../../redux/solveExerciseSlice';\n\n\nfunction Solution({ exercise_id, proposition_id, proposition,\n                    value, error, update ,  evaluate, user}) {\n  return (\n    <div className=\"clearfix mt-4\">\n      <Form.Group className=\"clearfix\">\n        <Form.Label>\n          { proposition }\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter formalization\"\n          as=\"textarea\"\n          rows={1}\n          value={value}\n          onChange={(e) => update(e.target.value, proposition_id)}\n        />\n        <Button\n          className=\"mt-1 float-right\"\n          variant=\"primary\"\n          disabled={error}\n          onClick={() => evaluate({\n            exercise_id,\n            proposition_id,\n            solution: value,\n            user: user\n          })}\n        >\n          Check\n        </Button>\n        <SyntaxError value={value} error={error} />\n      </Form.Group>\n      <Evaluation proposition_id={proposition_id} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return selectSolution(state, ownProps.proposition_id);\n};\n\nconst mapDispatchToProps = { update, evaluate };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Solution);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Solution from './Solution';\nimport {\n  selectExercise,\n  selectStatus,\n  selectError,\n  fetchExercise\n} from '../../redux/solveExerciseSlice';\nimport { useParams } from 'react-router';\nimport {selectUser} from \"../../redux/userSlice\";\n\n\nfunction SolveExercise({ match, exercise, status, error, fetchExercise, user })  {\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchExercise({exercise_id : id, username : user});\n    }\n  }, [status, id, exercise, fetchExercise]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    const propositions_list = exercise.propositions.map((x) => (\n      <Solution\n        key={x.proposition_id}\n        exercise_id={id}\n        proposition_id={x.proposition_id}\n        proposition={x.proposition}\n        user={user}\n      />\n    ));\n    content = (\n      <div>\n        <h2>{ exercise.title }</h2>\n        <h5 className=\"mt-4\">Constants</h5>\n        <p>{ exercise.constants }</p>\n        <h5 className=\"mt-4\">Predicates</h5>\n        <p>{ exercise.predicates }</p>\n        <h5 className=\"mt-4\">Functions</h5>\n        <p>{ exercise.functions }</p>\n        <h5 className=\"mt-4\">Description</h5>\n        <p>{ exercise.description }</p>\n         <details ><summary className=\"mt-4\">Symbols which are accepted</summary>\n            <p> Negation symbols : ¬, -, !, ~, \\neg, \\lnot <br/>\n                Equality symbols : =, ≐<br/>\n                Inequality symbols : ≠, !=, /=, \\neq, {\"<\"}{\">\"}<br/>\n                Conjunction symbols : \\wedge, \\land, &&, &, /\\, ∧<br/>\n                Disjunction symbols : \\vee, \\lor, ||, |, \\/, ∨<br/>\n                Implication symbols : \\to, →, -><br/>\n                Universal  symbols : ↔︎, ⟷, ⇔, ⟺, ≡, {\"<\"}->, {\"<\"}-->, {\"<\"}=>, {\"<\"}==>, ===, \\lequiv, \\leftrightarrow, \\equivalent, \\equiv<br/>\n                Exist quantifier symbols : \\exists, \\e, \\E, ∃<br/>\n                Universal quantifier symbols : \\forall, \\a, \\A, ∀ </p>\n         </details>\n        { propositions_list }\n      </div>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercise: selectExercise(state),\n    status: selectStatus(state),\n    error: selectError(state),\n   user: selectUser(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolveExercise);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  updateConstants,\n  selectConstantsParsed\n} from '../../redux/addExerciseSlice';\n\n\nfunction Constants({ value, error, update }) {  \n  return (\n    <Form.Group>\n      <Form.Label>\n        Constants:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter constants\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectConstantsParsed;\n\nconst mapDispatchToProps = { update: updateConstants };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constants);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  updatePredicates,\n  selectPredicatesParsed\n} from '../../redux/addExerciseSlice';\n\n\nfunction Predicates({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Predicates:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter predicates\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectPredicatesParsed;\n\nconst mapDispatchToProps = { update: updatePredicates };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Predicates);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  updateFunctions,\n  selectFunctionsParsed\n} from '../../redux/addExerciseSlice';\n\n\nfunction Functions({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Functions:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter functions\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectFunctionsParsed;\n\nconst mapDispatchToProps = { update: updateFunctions };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Functions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  selectLanguage\n} from '../../redux/addExerciseSlice';\n\n\nfunction Clashes({ errorMessage }) {\n  return errorMessage ? (\n    <p className=\"text-danger\">\n      {errorMessage}\n    </p>\n  )\n  : null;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: selectLanguage(state).errorMessage\n  };\n};\n\nexport default connect(mapStateToProps)(Clashes);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n    selectConstraint, updateConstraint\n} from '../../redux/addExerciseSlice';\n\n\nfunction Constraint({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Preferred model constraints(optional):\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter constraints\"\n        value={value}\n        as=\"textarea\"\n        rows={1}\n        onChange={(e) => update(e.target.value)}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectConstraint;\n\nconst mapDispatchToProps = { update: updateConstraint };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constraint);\n","import React from 'react';\nimport Constants from './Constants';\nimport Predicates from './Predicates';\nimport Functions from './Functions';\nimport Clashes from './Clashes';\nimport Constraint from './Constraint';\n\n\nfunction LanguageSection() {\n  return (\n    <div className=\"mt-4 mb-4\">\n      <h4>Language</h4>\n      <Constants />\n      <Predicates />\n      <Functions />\n      <Clashes />\n      <Constraint/>\n    </div>\n  );\n}\n\nexport default LanguageSection;\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  removeFormalization,\n  updateFormalization,\n  selectFormalization,\n  updateConstraints,  selectConstraints\n} from '../../redux/addExerciseSlice';\n\n\nfunction Formalization({ i, j, value, value2, error, error2, remove, update, updateConstraints }) {\n  return (\n    <div className=\"clearfix pl-5\">\n      <Form.Group className=\"mb-0\">\n        <Form.Label>\n          {\"Formalization \" + (i + 1) + \".\" + (j + 1)}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter formalization\"\n          value={value}\n          as=\"textarea\"\n          rows={1}\n          onChange={(e) => update(e.target.value, i, j)}\n        />\n        <SyntaxError value={value} error={error} />\n\n        <Form.Label>\n          {\"Preferred model constraints \" + (i + 1) + \".\" + (j + 1) + \"(optional)\"}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter constraints\"\n          value={value2}\n          as=\"textarea\"\n          rows={1}\n          onChange={(e) => updateConstraints(e.target.value, i, j)}\n        />\n        <SyntaxError value={value2} error={error2} />\n        <Button\n          className=\"mt-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i, j)}\n        >\n          Remove\n        </Button>\n      </Form.Group>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = selectFormalization(state, ownProps.i, ownProps.j);\n  const data2 = selectConstraints(state, ownProps.i, ownProps.j);\n  return {\n    value: data.value,\n    error: data.error,\n    value2: data2.value,\n    error2: data2.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  remove: removeFormalization,\n  update: updateFormalization,\n  updateConstraints\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Formalization);\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Formalization from './Formalization';\nimport {\n  addNewFormalization,\n  removeProposition,\n  updateInformalValue,\n  selectInformalValue,\n  selectFormalizations\n} from '../../redux/addExerciseSlice';\n\n\nfunction Proposition({ i, value, formalizations, add, remove, update }) {\n  const formalizations_list = formalizations.map((x, j) => (\n    <Formalization key={j} i={i} j={j} />\n  ));\n\n  return (\n    <div className=\"clearfix mb-2 border-bottom border-dark\">\n      <Form.Group className=\"clearfix mb-0\">\n        <Form.Label>\n          {\"Proposition \" + (i + 1)}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter proposition\"\n          value={value}\n          onChange={(e) => update(e.target.value, i)}\n        />\n        <Button\n          className=\"mt-1 mb-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i)}\n        >\n          Remove proposition\n        </Button>\n        { value === \"\" ?\n          <Form.Text className=\"mb-3 text-danger\">\n            This field cannot be empty\n          </Form.Text>\n          : null\n        }\n      </Form.Group>\n      { formalizations_list }\n      <Button\n        className=\"mt-1 mb-3 float-right\"\n        variant=\"primary\"\n        size=\"sm\"\n        onClick={() => add(i)}\n      >\n        Add formalization\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    value: selectInformalValue(state, ownProps.i),\n    formalizations: selectFormalizations(state, ownProps.i)\n  };\n};\n\nconst mapDispatchToProps = {\n  add: addNewFormalization,\n  remove: removeProposition,\n  update: updateInformalValue\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Proposition);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Proposition from './Proposition';\nimport {\n  addNewProposition,\n  selectPropositions\n} from '../../redux/addExerciseSlice';\n\n\nfunction PropositionsSection({ propositions, add }) {\n  const propositions_list = propositions.map((x, i) => (\n    <Proposition key={i} i={i} />\n  ));\n\n  return (\n    <div className=\"mt-4 mb-4 clearfix\">\n      <h4>Propositions</h4>\n      { propositions_list }\n      <Button\n        className=\"mt-2 float-right\"\n        variant=\"primary\"\n        size=\"sm\"\n        onClick={() => add()}\n      >\n        Add proposition\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    propositions: selectPropositions(state)\n  };\n};\n\nconst mapDispatchToProps = { add: addNewProposition };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PropositionsSection);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateExerciseTitle,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\n\n\nfunction ExerciseTitle({ value, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n          Exercise title:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter exercise title\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n\n      />\n      { value === \"\" ?\n        <Form.Text className=\"mb-3 text-danger\">\n          This field cannot be empty\n        </Form.Text>\n        : null\n      }\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectExerciseTitle;\n\nconst mapDispatchToProps = { update: updateExerciseTitle };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseTitle);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateDescription,\n  selectDescription\n} from '../../redux/addExerciseSlice';\n\n\nfunction Description({ value, update }) {  \n  return (\n    <Form.Group>\n      <Form.Label>\n        Description:\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter description\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectDescription;\n\nconst mapDispatchToProps = { update: updateDescription };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Description);\n","import React from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  addNewExercise,\n  checkExercise,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\nimport LanguageSection from './LanguageSection';\nimport PropositionsSection from './PropositionsSection';\nimport ExerciseTitle from './ExerciseTitle';\nimport Description from './Description';\n\n\nfunction AddExercise({ status, error, containsErrors, title, addExercise, added}) {\n  let content = null;\n  if (status === 'idle') {\n      if (added) {\n          content = (\n              <Alert variant=\"success\">\n                  Exercise <b>{ title }</b> was succefully added to the database.\n              </Alert>\n              );\n      }\n      else{\n          content = (      <Form>\n                  <h2>Add exercise</h2>\n                  <ExerciseTitle />\n                  <Description />\n                  <LanguageSection />\n                  <PropositionsSection />\n                  <Button\n                      className=\"mt-4 mb-5 float-right clearfix\"\n                      variant=\"primary\"\n                      size=\"lg\"\n                      disabled={containsErrors}\n                      onClick={addExercise}\n                  >\n                      Save exercise\n                  </Button>\n              </Form>\n          );\n      }\n\n  } else if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.addExercise.status,\n    added: state.addExercise.added,\n    error: state.addExercise.error,\n    containsErrors: checkExercise(state),\n    title: selectExerciseTitle(state).value\n  };\n};\n\nconst mapDispatchToProps = { addExercise: addNewExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExercise);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction AdminRoute({ isLoggedIn, isAdmin, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isLoggedIn) {\n            if(!isAdmin){\n                return <Redirect to={{ pathname: \"/\", state: { from: location } }} />;\n            }\n          return <Component />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n  };\n};\n\nexport default connect(mapStateToProps)(AdminRoute);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert, Table} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {fetchAllUsersToExercise} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction Exercises({ exercises, status, error, fetchAllExercises, fetchAllUsersToExercise }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => (\n      <tr key={x.exercise_id}>\n        <td>\n          <Link to={`/progress/exercise/users`} key={x.exercise_id} onClick={() => fetchAllUsersToExercise(x.exercise_id)}>\n            { x.title }\n          </Link>\n        </td>\n        <td>{x.attempted}</td>\n    </tr>\n    ));\n  content =\n   <Table striped bordered hover>\n      <thead>\n      <tr>\n        <th>Exercise</th>\n        <th>Students attempted</th>\n      </tr>\n      </thead>\n     <tbody>\n      { exercises_list }\n     </tbody>\n  </Table>\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Student progress</h2>\n\n            {content}\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchAllUsersToExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercises);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectStatus,\n  selectError, fetchUsersSolutions, selectUsersSolution, selectExerciseTitle, selectUserName\n} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction UsersSolutionList({ solutions, users, status, error, name, id, title })  {\n\n\n  useEffect( () => {\n    if (status === 'idle') {\n      fetchUsersSolutions({exercise_id: id, user_name: name});\n    }\n  }, [status, id, users, fetchUsersSolutions]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n\n    let s = [];\n    let table = [];\n    let proposition = null;\n    let first= false\n    for(let i = 0; i < solutions.length; i++){\n      if(proposition === null){\n        proposition = solutions[i].proposition;\n        first = true;\n      }\n      else if(proposition !== solutions[i].proposition && first){\n        s.push(<h5   key={proposition}> {proposition}</h5>)\n        s.push(<Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Date</th>\n            <th>Solution</th>\n            <th>Correct</th>\n          </tr>\n          </thead>\n          <tbody>\n          {table}\n          </tbody>\n        </Table>\n          );\n        table = [];\n        proposition = solutions[i].proposition;\n      }\n      if(solutions[i].is_correct){\n        table.push(\n            <tr key={solutions[i].date}>\n              <td>\n                {solutions[i].date.split(\".\")[0].replace(\"T\", \" \") + \" \"}\n              </td>\n              <td>{solutions[i].solution}</td>\n              <td>  &#x2713;</td>\n            </tr>)\n      }\n      else{\n        table.push(<tr key={solutions[i].date}>\n              <td>\n                {solutions[i].date.split(\".\")[0].replace(\"T\", \" \") + \" \"}\n              </td>\n              <td>{solutions[i].solution}</td>\n              <td>  &#x2715;</td>\n            </tr>)\n      }\n    }\n\n    //last element of array\n    s.push(<h5   key={proposition}> {proposition}</h5>)\n    s.push(<Table striped bordered hover>\n      <thead>\n      <tr>\n        <th>Date</th>\n        <th>Solution</th>\n        <th>Correct</th>\n      </tr>\n      </thead>\n      <tbody>\n      {table}\n      </tbody>\n    </Table>\n    );\n\n    content = (\n        <div key={s}>{ s }</div>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n      <div>\n          <h2 className=\"mb-4\">{title} by {name} </h2>\n          { content }\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    solutions: selectUsersSolution(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    name: selectUserName(state),\n    title: selectExerciseTitle(state),\n  };\n};\n\nconst mapDispatchToProps = {  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersSolutionList);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport {\n    selectUsers,\n    selectStatus,\n    selectError, fetchUsersSolutions, selectProposition, fetchAllUsersToExercise, selectExerciseTitle\n} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction UsersToExercise({ users, status, error, fetchAllUsersToExercise, fetchUsersSolutions, id, title })  {\n\n\n\n  useEffect( () => {\n    if (status === 'idle') {\n        fetchAllUsersToExercise(id);\n    }\n  }, [status, id, users, fetchAllUsersToExercise]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n      let user_list = []\n      for(let i = 0; i < users.length; i++){\n          console.log(users[i])\n          if(users[i].lastattemptcorrec){\n              user_list.push(<tr key={users[i].user_name}>\n                  <td>\n                      <Link to={`/progress/exercise/users/solutions`} key={users[i].user_name} onClick={() => fetchUsersSolutions( {exercise_id: users[i].exercise_id, user_name: users[i].user_name})}>\n                          { users[i].user_name }\n                      </Link>\n                  </td>\n                  <td>{users[i].solved} </td>\n                  <td>{users[i].attempted} </td>\n                  <td>{users[i].successful_attempts}</td>\n                  <td>users[i].attempts}</td>\n                  <td>users[i].huuu}</td>\n                  <td>{users[i].last_attempt_date.split(\".\")[0].replace(\"T\", \" \") + \" \"} &#x2713;</td>\n                  </tr>\n                  )\n          }\n          else{\n              user_list.push(<tr key={users[i].user_name}>\n                      <td>\n                          <Link to={`/progress/exercise/users/solutions`} key={users[i].user_name} onClick={() => fetchUsersSolutions( {exercise_id: users[i].exercise_id, user_name: users[i].user_name})}>\n                              { users[i].user_name }\n                          </Link>\n                      </td>\n                      <td>{users[i].solved} </td>\n                      <td>{users[i].attempted} </td>\n                      <td>{users[i].successful_attempts}</td>\n                      <td>{users[i].attempts}</td>\n                      <td>{users[i].last_attempt_date.split(\".\")[0].replace(\"T\", \" \") + \" \"} &#x2715;</td>\n                  </tr>\n              )\n          }\n\n\n      }\n\n    content =<Table striped bordered hover>\n        <thead>\n        <tr>\n            <th> </th>\n            <th colSpan={2}>Propositions </th>\n            <th colSpan={2}>Attempt</th>\n            <th> </th>\n        </tr>\n        <tr>\n            <th>Student</th>\n            <th>Solved</th>\n            <th>Attempted</th>\n            <th>Successful</th>\n            <th>Total</th>\n            <th>Last attempt</th>\n        </tr>\n        </thead>\n        <tbody>\n        { user_list }\n        </tbody>\n    </Table>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n      <div>\n          <h2 className=\"mb-4\"> {title} </h2>\n          { content }\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectUsers(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    title: selectExerciseTitle(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchUsersSolutions, fetchAllUsersToExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersToExercise);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectStatus, selectError, addChanged, fetchAllUsers, saveAdmins,\n  selectAllUsers, selectChangedAdmins\n} from \"../../redux/adminsSlice\";\nimport {selectUser} from \"../../redux/userSlice\";\n\n\nfunction UserList({ users, user_name, status, error, fetchAllUsers, addChanged, changedAdmins, saveAdmins }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllUsers(user_name);\n    }\n  }, [status, fetchAllUsers]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let user = users.map((x) => (\n        <tr key={x.user_name}>\n          <td>\n              { x.user_name }\n          </td>\n        <td> <input type=\"checkbox\" defaultChecked={x.is_admin} id={x.user_name} onChange={(e) => {addChanged(e.target.id)}}/> </td>\n\n        </tr>\n    ));\n    content =\n        <Form>\n        <Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Username</th>\n            <th>Is admin</th>\n          </tr>\n          </thead>\n          <tbody>\n          { user }\n          </tbody>\n        </Table>\n        </Form>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Users</h2>\n      { content }\n        <Button  onClick={(e) => {saveAdmins(changedAdmins)}}>Save admins</Button>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectAllUsers(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    changedAdmins: selectChangedAdmins(state),\n    user_name: selectUser(state)\n  };\n};\n\nconst mapDispatchToProps = { fetchAllUsers, addChanged, saveAdmins };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","import React from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n    saveExercise,\n    removeExercise,\n  checkExercise,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\nimport LanguageSection from '../addExercise/LanguageSection';\nimport PropositionsSection from '../addExercise/PropositionsSection';\nimport ExerciseTitle from '../addExercise/ExerciseTitle';\nimport Description from '../addExercise/Description';\n\n\nfunction EditExercise({ status, error, containsErrors, removeExercise, saveExercise }) {\n  let content = null;\n  if (status === 'idle') {\n    content = (\n      <Form>\n        <h2>Add exercise</h2>\n        <ExerciseTitle />\n        <Description />\n        <LanguageSection />\n        <PropositionsSection />\n        <Button\n          className=\"mt-4 mb-5 float-right clearfix\"\n          variant=\"primary\"\n          size=\"lg\"\n          disabled={containsErrors}\n          onClick={saveExercise}\n        >\n          Save exercise\n        </Button>\n          <Button\n              className=\"mt-4 mb-5 float-left clearfix\"\n              variant=\"danger\"\n              size=\"lg\"\n              disabled={containsErrors}\n              onClick={removeExercise}\n          >\n               Remove exercise\n          </Button>\n      </Form>\n    );\n  } else if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    content = (\n      <Alert variant=\"success\">\n        Exercise  was succefully changed to the database.\n      </Alert>\n    );\n  }else if (status === 'removed') {\n    content = (\n      <Alert variant=\"success\">\n        Exercise  was succefully removed from database.\n      </Alert>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.addExercise.status,\n    error: state.addExercise.error,\n    containsErrors: checkExercise(state),\n    title: selectExerciseTitle(state).value\n  };\n};\n\nconst mapDispatchToProps = {saveExercise, removeExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExercise);\n","import React, { useEffect } from 'react';\nimport { ListGroup, Spinner, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchAllExercises,\n  selectExercises,\n  selectStatus,\n  selectError\n} from '../../redux/exercisesSlice';\nimport {\n  fetchSavedExercise\n} from '../../redux/addExerciseSlice';\n\n\nfunction ExerciseList({ exercises, status, error, fetchAllExercises, fetchSavedExercise }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllExercises();\n    }\n  }, [status, fetchAllExercises]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let exercises_list = exercises.map((x) => (\n      <ListGroup.Item\n        as={Link} to={`/edit/${x.exercise_id}`} key={x.exercise_id}\n        variant=\"primary\" action\n        onClick={() => fetchSavedExercise(x.exercise_id)}\n      >\n        { x.title }\n      </ListGroup.Item>\n    ));\n    content = <ListGroup>{ exercises_list }</ListGroup>;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Exercises</h2>\n      { content }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exercises: selectExercises(state),\n    status: selectStatus(state),\n    error: selectError(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllExercises, fetchSavedExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList);\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  Container, Alert, Button, Navbar, Nav\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport ProtectedRoute from './components/login/ProtectedRoute';\nimport LoginForm from './components/login/LoginForm';\nimport ExerciseList from './components/solveExercise/ExerciseList';\nimport SolveExercise from './components/solveExercise/SolveExercise';\nimport AddExercise from './components/addExercise/AddExercise';\nimport {logOut} from './redux/userSlice';\nimport AdminRoute from \"./components/login/AdminRoute\";\nimport Exercises from \"./components/studentProgress/Exercises\";\nimport UserSolutionsList from \"./components/studentProgress/UserSolutionsList\";\nimport UsersToExercise from \"./components/studentProgress/UsersToExercise\";\nimport UserList from \"./components/addAdmins/UserList\";\nimport {BASE_NAME} from \"./config\";\nimport {changeStatus} from \"./redux/addExerciseSlice\";\nimport {changeExerciseStatus} from \"./redux/exercisesSlice\";\nimport EditExercise from \"./components/editExercise/EditExercise\";\nimport EditExerciseList from \"./components/editExercise/EditExerciseList\";\n\n\nfunction App({ isLoggedIn, user, logOut, changeStatus, changeExerciseStatus, isAdmin }) {\n  let loginInfo = null;\n  if (isLoggedIn) {\n    loginInfo = (\n      <React.Fragment>\n        <span className=\"px-4 my-auto text-info\">\n          You are logged in as <b>{ user.username }</b>\n        </span>\n        <Button as={Link} to=\"/\" onClick={() => logOut()}>\n          Log out\n        </Button>\n      </React.Fragment>\n    );\n  } else {\n    loginInfo = (\n      <Button as={Link} to=\"/login\">\n        Log in\n      </Button>\n    );\n  }\n  if(!isAdmin){\n    return (\n        <BrowserRouter basename={BASE_NAME}>\n          <div className=\"App\">\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link className=\"px-4\" as={Link} to=\"/\" onClick={() => changeExerciseStatus()}>\n                  Home\n                </Nav.Link>\n\n              </Nav>\n              <Nav>\n                { loginInfo }\n              </Nav>\n            </Navbar>\n            <Container className=\"my-3\">\n              <Switch>\n                <ProtectedRoute exact path=\"/\" component={ExerciseList} />\n                <Route exact path=\"/login\" component={LoginForm} />\n                <ProtectedRoute path=\"/solve/:id\" component={SolveExercise} />\n\n                <Route path=\"*\" component={() => {\n                  return <Alert variant=\"danger\">404 Not Found</Alert>\n                }} />\n              </Switch>\n            </Container>\n          </div>\n        </BrowserRouter>\n    );\n  }\n  return (\n    <BrowserRouter basename={BASE_NAME}>\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link className=\"px-4\" as={Link} to=\"/\" onClick={() => changeExerciseStatus()}>\n              Home\n            </Nav.Link>\n\n              <Nav.Link className=\"px-4\" as={Link} to=\"/add\" onClick={() => changeStatus()}>\n                Add\n              </Nav.Link>\n              <Nav.Link className=\"px-4\" as={Link} to=\"/edit\" onClick={() => changeExerciseStatus()}>\n                Edit\n              </Nav.Link>\n              <Nav.Link className=\"px-4\" as={Link} to=\"/progress\" onClick={() => changeExerciseStatus()}>\n                Student progress\n              </Nav.Link>\n              <Nav.Link className=\"px-4\" as={Link} to=\"/admins\">\n                Admin\n              </Nav.Link>\n\n          </Nav>\n          <Nav>\n            { loginInfo }\n          </Nav>\n          </Navbar>\n        <Container className=\"my-3\">\n          <Switch>\n            <ProtectedRoute exact path=\"/\" component={ExerciseList} />\n            <AdminRoute exact path=\"/admins\" component={UserList} />\n            <AdminRoute exact path=\"/progress\" component={Exercises} />\n            <AdminRoute exact path=\"/progress/exercise/users\" component={UsersToExercise} />\n            <AdminRoute exact path=\"/progress/exercise/users/solutions\" component={UserSolutionsList} />\n            <Route exact path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/solve/:id\" component={SolveExercise} />\n\n            <AdminRoute exact path=\"/add\" component={AddExercise}  />\n            <AdminRoute exact path=\"/edit\" component={EditExerciseList}  />\n            <AdminRoute exact path=\"/edit/:id\" component={EditExercise}  />\n\n            <Route path=\"*\" component={() => {\n              return <Alert variant=\"danger\">404 Not Found</Alert>\n            }} />\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = { logOut, changeStatus, changeExerciseStatus };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}