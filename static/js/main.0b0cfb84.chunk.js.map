{"version":3,"sources":["redux/fetchData.js","redux/formula_classes.js","redux/helpers.js","redux/addExerciseSlice.js","redux/progressPropositionsSlice.js","redux/solveExerciseSlice.js","redux/userSlice.js","redux/adminsSlice.js","redux/badFormalizationsSlice.js","redux/feedbacksSlice.js","components/login/ProtectedRoute.js","components/login/LoginForm.js","components/common/QueryError.js","components/solveExercise/ExerciseList.js","components/addExercise/SyntaxError.js","components/solveExercise/Feedback.js","components/solveExercise/Evaluation.js","components/solveExercise/Solution.js","components/solveExercise/SolveExercise.js","components/addExercise/SymbolsInput.js","components/addExercise/Constants.js","components/addExercise/Predicates.js","components/addExercise/Functions.js","components/addExercise/Clashes.js","components/addExercise/Constraint.js","components/addExercise/LanguageSection.js","components/addExercise/Formalization.js","components/addExercise/Proposition.js","components/addExercise/PropositionsSection.js","components/addExercise/ExerciseTitle.js","components/addExercise/Description.js","components/addExercise/SaveButtonGroup.js","components/addExercise/AddExercise.js","components/login/AdminRoute.js","components/studentProgress/Exercises.js","components/studentProgress/FeedbacksList.js","components/studentProgress/UserSolutionsList.js","components/studentProgress/UsersToExercise.js","components/userProgress/ExercisesToUser.js","components/addAdmins/UserList.js","components/editExercise/EditExercise.js","components/editExercise/EditExerciseList.js","components/badFormalizations/BadExercises.js","components/badFormalizations/BadPropositionsToExercise.js","components/badFormalizations/AddFeedback.js","components/badFormalizations/Checkbox.js","components/badFormalizations/Feedbacks.js","components/badFormalizations/Cards.js","components/badFormalizations/BadFormalizationsToProposition.js","App.js","serviceWorker.js","index.js","redux/store.js","redux/backendSlice.js","config.js"],"names":["fetchData","route","method","body","undefined","_","getState","a","config","headers","localStorage","getItem","JSON","stringify","backendUrl","backend","url","fetch","response","ok","json","Error","status","statusText","BinaryFormula","lhs","rhs","this","addAll","getFreeVariables","QuantifiedFormula","originalSymbol","subf","res","delete","Variable","Set","Constant","FunctionApplication","args","reduce","fvs","arg","PredicateAtom","EqualityAtom","Negation","Conjunction","Disjunction","Implication","Equivalence","ExistentialQuant","UniversalQuant","b","forEach","elem","add","arrayToArityMap","symbols","arityMap","Map","x","has","name","set","arity","parseLanguageSubset","input","parser","array","error","checkArity","symbol","expected","get","length","parseFormalization","constants","predicates","functions","nonLogicalSymbols","keys","language","isConstant","isPredicate","isFunction","isVariable","factories","functionApplication","ee","predicateAtom","variable","v","constant","c","equalityAtom","negation","f","conjunction","disjunction","implication","equivalence","existentialQuant","universalQuant","fvars","size","location","start","column","line","offset","end","message","Array","from","join","makeStructure","iCWithUnnamed","iPF","C_L","D","Object","values","sort","iC","fromEntries","entries","filter","iP","iF","addNewExercise","createAsyncThunk","dispatch","rejectWithValue","exercise","selectExercise","saveExercise","removeExercise","fetchSavedExercise","exercise_id","fetchExercise","addExerciseSlice","createSlice","initialState","title","description","constraint","id","propositions","proposition","proposition_id","formalizations","constraints","added","reducers","updateExerciseTitle","state","action","payload","updateDescription","updateConstants","updatePredicates","updateFunctions","updateConstraint","updateInformalValue","reducer","value","i","prepare","updateFormalization","j","addNewProposition","push","addNewFormalization","removeProposition","splice","removeFormalization","updateConstraints","changeStatus","extraReducers","pending","fulfilled","rejected","formalization","actions","checkForDuplicates","found","selectExerciseTitle","addExercise","selectConstantsParsed","createSelector","result","parseConstants","selectPredicatesParsed","parsePredicates","selectFunctionsParsed","parseFunctions","selectLanguage","constantsParsed","predicatesParsed","functionsParsed","containsErrors","containsDuplicates","map","errorMessage","checkForClashes","selectPropositions","selectFormalizations","selectInformalValue","selectFormalization","parseFormulaWithPrecedence","selectConstraints","selectConstraint","checkExercise","fetchAllUsersToExercise","console","stack","fetchAllExercisesToUser","fetchUsersSolutions","user_name","progressPropositionsSlice","exercises","users","solutions","user","meta","selectUsers","selectExercises","selectUsersSolution","selectUserName","selectStatus","selectError","username","evaluate","solution","fetchActiveFeedbacks","bad_formalization_id","feedbackRating","index","feedback_id","solution_id","updateRating","rating","solveExerciseSlice","update","replace","p","evaluation","feedbacks","rating_id","solveExercise","selectEvaluation","selectEvalStatus","selectEvalError","selectFeedbacks","logIn","password","data","logInByGithub","code","token","userFromToken","parse","Buffer","split","toString","isLoggedIn","isAdmin","_e","getStoredUser","loginFulfilled","usernameValue","passwordValue","userInfo","setItem","userSlice","updateUsername","updatePassword","logOut","removeItem","setUser","savedUser","selectUser","fetchAllUsers","saveAdmins","admins","adminsSlice","changed","addChanged","is_admin","key","selectAllUsers","allUsers","selectChangedAdmins","badFormalizationsSlice","createApi","reducerPath","baseQuery","_q","api","extraOptions","queryFn","fetchBaseQuery","baseUrl","prepareHeaders","endpoints","builder","getExercises","query","skipCache","getBadExercises","getBadPropositions","getBadFormalizations","getBadFormalizationInfo","useGetExercisesQuery","useGetBadExercisesQuery","useGetBadPropositionsQuery","useGetBadFormalizationsQuery","useGetBadFormalizationInfoQuery","feedbacksSlice","tagTypes","getFeedbacks","providesTags","addFeedback","mutation","initialPost","invalidatesTags","updateFeedback","post","useGetFeedbacksQuery","useAddFeedbackMutation","useUpdateFeedbackMutation","connect","Component","component","rest","render","props","to","pathname","mapDispatchToProps","useEffect","Spinner","animation","variant","window","href","match","Form","Group","Label","Control","type","placeholder","onChange","e","target","Text","className","Button","style","marginTop","marginBottom","marginRight","onClick","preventDefault","marginLeft","CLIENT_ID","REDIRECT","QueryError","as","Comp","Alert","originalStatus","onSelect","refetchOnMountOrArgChange","isLoading","isSuccess","isError","content","exercises_list","ListGroup","Item","Link","SyntaxError","str_1","substring","str_2","str_3","str","Feedback","feedback","useState","activeBtn","setActiveBtn","thumbsUp","setThumbsUp","thumbsDown","setThumbsDown","like","dislike","Row","Col","xs","Container","fluid","fetchFeedbacks","ownProps","setIndex","active","viewEvalResult","viewFeedbacks","EvalResult","children","CorrectEvalResult","ErrorEvalResult","msgDiscuss","FailedEvalResult","IncorrectEvalResult","summary","open","Interpretation","interpFunc","viewValue","subscript","viewSetValue","tuples","tuple","Structure","Counterexample","structure","msgNotFound","solutionToFormalization","formalizationToSolution","languageContants","correctImpliesInput","m1","counterexample","domainFormalizationToSolution","symbolsFormalizationToSolution","inputImpliesCorrect","m2","domainSolutionToFormalization","symbolsSolutionToFormalization","visibleFeedbacks","slice","hintButton","selectSolution","handleChange","controlId","rows","onKeyDown","isInvalid","disabled","SolveExercise","exerciseId","propositions_list","acceptedSymbolsView","Table","striped","preferredToken","acceptedTokens","Fragment","useParams","SymbolsInput","symbolsKind","symbolsSet","InputGroup","hasValidation","Prepend","Append","mapStateToProps","LanguageSection","remove","data2","value2","error2","cannotBeRemoved","tag","formalizationRemovable","formalizations_list","_x","propositionFeedback","SaveButtonGroup","Exercises","attempted","bordered","hover","FeedbacksList","params","s","table","first","date","Date","toLocaleString","feedback_list","is_correct","display","padding","user_list","last_attempt_date","last_attempt_correct","solved","successful_attempts","attempts","colSpan","changedAdmins","defaultChecked","md","order","span","BadExercises","bad_formalizations","students","BadPropositionsToExercise","badPropositions","isFetching","title1","AddFeedback","setFeedback","onSubmit","unwrap","Checkbox","isActive","setIsActive","Check","inline","label","checked","Feedbacks","author","shown","likes","dislikes","Cards","bad_formalization","students_list","bad_solutions","badSolutions","Card","Body","BadFormalizationsToProposition","exerciseTitle","propositionTitle","title2","badFormalizations","representative","loginInfo","basename","BASE_NAME","Navbar","bg","sticky","Nav","exact","path","ExerciseList","UserList","UsersToExercise","UserSolutionsList","LoginForm","AddExercise","EditExerciseList","EditExercise","ExercisesToUser","Boolean","hostname","store","configureStore","addExerciseReducer","progressPropositionsReducer","adminsReducer","solveExerciseReducer","userReducer","middleware","getDefaultMiddleware","concat","initStore","BACKEND_URL","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","require","module","exports","process"],"mappings":"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","file":"static/js/main.0b0cfb84.chunk.js","sourcesContent":["export const fetchData = (route, method, body = undefined) => {\n  return async (_, getState) => {\n    const config = {\n      method: method,\n      headers: { \"Content-Type\": \"application/json\"}\n    }\n    if(localStorage.getItem(\"formalization_checker_token\") !== null){\n      config.headers[\"Authorization\"] = \"Bearer \" + localStorage.getItem(\"formalization_checker_token\");\n    }\n    if (body) {\n      config.body = JSON.stringify(body)\n    }\n  \n    const backendUrl = getState().backend.url;\n    let response = await fetch(backendUrl + route, config);\n  \n    if (response.ok) {\n      return response.json();\n    }\n    \n    throw new Error(response.status + \" \" + response.statusText);\n  }\n}\n","export class BinaryFormula {\n  constructor(lhs, rhs) {\n    this.lhs = lhs;\n    this.rhs = rhs;\n  }\n\n  getFreeVariables() {\n    return addAll(this.lhs.getFreeVariables(), this.rhs.getFreeVariables());\n  }\n}\n\nexport class QuantifiedFormula {\n  constructor(originalSymbol, subf) {\n    this.originalSymbol = originalSymbol;\n    this.subf = subf;\n  }\n  getFreeVariables() {\n    const res = this.subf.getFreeVariables()\n    res.delete(this.originalSymbol);\n    return res;\n  }\n}\n\nexport class Variable {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set([this.originalSymbol]);\n\n  }\n}\n\nexport class Constant {\n  constructor(originalSymbol) {\n    this.originalSymbol = originalSymbol;\n  }\n\n  getFreeVariables(){\n    return new Set();\n  }\n}\n\nexport class FunctionApplication {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables(){\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class PredicateAtom {\n  constructor(originalSymbol, args) {\n    this.originalSymbol = originalSymbol;\n    this.args = args;\n  }\n  getFreeVariables() {\n    return this.args.reduce(\n        (fvs, arg) => addAll(fvs, arg.getFreeVariables()),\n        new Set()\n    );\n  }\n}\n\nexport class EqualityAtom extends BinaryFormula{\n}\n\nexport class Negation {\n  constructor(subf) {\n    this.subf = subf;\n  }\n\n  getFreeVariables(){\n    return this.subf.getFreeVariables();\n  }\n}\n\nexport class Conjunction extends BinaryFormula{\n}\n\nexport class Disjunction extends BinaryFormula{\n}\n\nexport class Implication extends BinaryFormula{\n}\n\nexport class Equivalence extends BinaryFormula{\n}\n\nexport class ExistentialQuant extends QuantifiedFormula{\n}\n\nexport class UniversalQuant extends QuantifiedFormula{\n}\n\nfunction addAll(a, b) {\n  b.forEach((elem) => a.add(elem));\n  return a;\n}\n","import {\n  Conjunction, Constant,\n  Disjunction, EqualityAtom,\n  Equivalence,\n  ExistentialQuant,\n  FunctionApplication,\n  Implication, Negation, PredicateAtom, UniversalQuant,\n  Variable\n} from \"./formula_classes\";\n\nexport const arrayToArityMap = (symbols) => {\n  let arityMap = new Map();\n  for (let x of symbols) {\n    if (!arityMap.has(x.name)) {\n      arityMap.set(x.name, x.arity);\n    }\n  }\n  return arityMap;\n}\n\nexport const parseLanguageSubset = (input, parser) => {\n  try {\n    let result = parser(input);\n    return {\n      array: result,\n      error: null\n    };\n  } catch (error) {\n    return {\n      array: [],\n      error: error\n    };\n  }\n}\n\nconst checkArity = (symbol, args, arityMap, {expected}) => {\n  const a = arityMap.get(symbol);\n  if (args.length !== a) {\n    expected(`${a} argument${(a === 1 ? '' : 's')} to ${symbol}`);\n  }\n}\n\nexport const parseFormalization = (input, constants, predicates, functions, parser) => {\n  const nonLogicalSymbols = new Set([\n    ...constants,\n    ...predicates.keys(),\n    ...functions.keys()\n  ]);\n\n  const language = {\n    isConstant: (x) => constants.has(x),\n    isPredicate: (x) => predicates.has(x),\n    isFunction: (x) => functions.has(x),\n    isVariable: (x) => !nonLogicalSymbols.has(x)\n  };\n\n  const factories = {\n    functionApplication: (symbol, args, ee) => {\n      checkArity(symbol, args, functions, ee);\n      return new FunctionApplication(symbol, args);\n    },\n    predicateAtom: (symbol, args, ee) => {\n      checkArity(symbol, args, predicates, ee);\n      return new PredicateAtom(symbol, args);\n    },\n    variable: (v, _) =>  new Variable(v , v),\n    constant: (c, _) => new Constant(c, c),\n    equalityAtom: (lhs, rhs, _) => new EqualityAtom(lhs, rhs),\n    negation: (f, _) => new Negation(f),\n    conjunction: (lhs, rhs, _) => new Conjunction(lhs, rhs),\n    disjunction: (lhs, rhs, _) => new Disjunction(lhs, rhs),\n    implication: (lhs, rhs, _) => new Implication(lhs, rhs),\n    equivalence: (lhs, rhs, _) => new Equivalence(lhs, rhs),\n    existentialQuant: (v, f, _) => new ExistentialQuant(v, f),\n    universalQuant: (v, f, _) => new UniversalQuant(v, f),\n  };\n\n  try {\n    const fvars = parser(input, language, factories).getFreeVariables();\n    if (fvars.size > 0) {\n      throw ({\n        location: {\n          start: {\n            column: 0, line: 0, offset: 0\n          },\n          end: {\n            column: 0, line: 0, offset: input.length\n          }\n        },\n        message:\n          `The formula should be closed, but the following\n          variable${fvars.size === 1 ? \" is\" :  \"s are\"} free:\n          ${Array.from(fvars).join(\", \")}.`\n      });\n    }\n    return null;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport const makeStructure = (iCWithUnnamed, iPF, C_L) => (\n  !!iCWithUnnamed\n  ? {\n    D: Array.from(new Set(Object.values(iCWithUnnamed))).sort(),\n    iC: Object.fromEntries(\n      Object.entries(iCWithUnnamed).filter(([name, _]) => C_L.has(name))\n    ),\n    iP: iPF,\n    iF: null,\n  }\n  : undefined\n);\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseLanguageSubset,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const addNewExercise = createAsyncThunk(\n  'addExercise/addNewExercise',\n  async (_, { dispatch, getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await dispatch(fetchData(\n        '/api/exercises', 'POST', exercise\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const saveExercise = createAsyncThunk(\n  'saveExercise',\n  async (_, { dispatch, getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await dispatch(fetchData(\n        '/api/exercises/edit', 'POST', exercise\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const removeExercise = createAsyncThunk(\n  'removeExercise',\n  async (_, { dispatch, getState, rejectWithValue }) => {\n    let exercise = selectExercise(getState());\n    if (!exercise) {\n      return rejectWithValue(\"Exercise contains errors.\");\n    }\n    try {\n      let response = await dispatch(fetchData(\n        '/api/exercises/remove', 'DELETE', exercise\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const fetchSavedExercise = createAsyncThunk(\n  'fetchSavedExercise',\n  async (exercise_id, { dispatch, getState, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n          `/api/exercises/edit/${exercise_id}`, 'GET'\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const fetchExercise = createAsyncThunk(\n    'fetchExercise',\n    async (exercise_id, { dispatch, rejectWithValue }) => {\n      try {\n        let response = await dispatch(fetchData(\n            `/api/exercises/${exercise_id}`, 'GET'\n        ));\n        return response;\n      } catch (err) {\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\n/* slice */\nexport const addExerciseSlice = createSlice({\n  name: 'addExercise',\n  initialState: {\n    title: '',\n    description: '',\n    constants: '',\n    predicates: '',\n    functions: '',\n    constraint: '',\n    id: '',\n    propositions: [{\n      proposition: '',\n      proposition_id: '',\n      formalizations: [''],\n      constraints: ['']\n    }],\n\n    status: 'idle',\n    error: null,\n    added: null,\n  },\n  reducers: {\n    updateExerciseTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    updateDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    updateConstants: (state, action) => {\n      state.constants = action.payload;\n    },\n    updatePredicates: (state, action) => {\n      state.predicates = action.payload;\n    },\n    updateFunctions: (state, action) => {\n      state.functions = action.payload;\n    },\n    updateConstraint: (state, action) => {\n      state.constraint = action.payload;\n    },\n    updateInformalValue: {\n      reducer: (state, action) => {\n        const { value, i } = action.payload;\n        state.propositions[i].proposition = value;\n      },\n      prepare: (value, i) => {\n        return { payload: { value, i } };\n      }\n    },\n    updateFormalization: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].formalizations[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j } };\n      }\n    },\n    addNewProposition: (state) => {\n      state.propositions.push({\n        proposition: '',\n        formalizations: [''],\n        constraints: ['']\n      });\n    },\n    addNewFormalization: (state, action) => {\n      const i = action.payload;\n      state.propositions[i].formalizations.push('');\n      state.propositions[i].constraints.push('');\n    },\n    removeProposition: (state, action) => {\n      const i = action.payload;\n      state.propositions.splice(i, 1);\n    },\n    removeFormalization: {\n      reducer: (state, action) => {\n        const { i, j } = action.payload;\n        state.propositions[i].formalizations.splice(j, 1);\n        state.propositions[i].constraints.splice(j, 1);\n      },\n      prepare: (i, j) => {\n        return { payload: { i, j } };\n      }\n    },\n    updateConstraints: {\n      reducer: (state, action) => {\n        const { value, i, j } = action.payload;\n        state.propositions[i].constraints[j] = value;\n      },\n      prepare: (value, i, j) => {\n        return { payload: { value, i, j} };\n      }\n    },\n    changeStatus: {\n      reducer: (state, action) => {\n        state.added = null;\n        state.status = 'idle';\n        state.title = '';\n        state.description = '';\n        state.constants = '';\n        state.predicates = '';\n        state.functions = '';\n        state.constraint = '';\n        state.id = '';\n        state.propositions = [{\n          proposition: '',\n          proposition_id: '',\n          formalizations: [''],\n          constraints: ['']\n        }];\n\n      }\n    },\n  },\n  extraReducers: {\n    [addNewExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [addNewExercise.fulfilled]: (state, action) => {\n      state.added = true;\n      state.title =  ''\n      state.description =  ''\n      state.constants =  ''\n      state.predicates = ''\n      state.functions =  ''\n      state.constraint = ''\n      state.propositions= [{\n        \"proposition\": '',\n        \"formalizations\": [''],\n        \"constraints\": ['']\n      }]\n\n      state.status = 'idle'\n    },\n    [addNewExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [saveExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [saveExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.title = '';\n      state.description = '';\n      state.constants = '';\n      state.predicates = '';\n      state.functions = '';\n      state.constraint = '';\n      state.id = '';\n      state.propositions = [{\n        proposition: '',\n        proposition_id: '',\n        formalizations: [''],\n        constraints: ['']\n      }];\n    },\n    [saveExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [removeExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [removeExercise.fulfilled]: (state, action) => {\n      state.status = 'removed';\n      state.title = '';\n      state.description = '';\n      state.constants = '';\n      state.predicates = '';\n      state.functions = '';\n      state.constraint = '';\n      state.id = '';\n      state.propositions = [{\n        proposition: '',\n        proposition_id: '',\n        formalizations: [''],\n        constraints: ['']\n      }];\n    },\n    [removeExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n    },\n    [fetchExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchSavedExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchSavedExercise.fulfilled]: (state, action) => {\n      state.status = 'idle';\n      const exercise = action.payload;\n      state.title = exercise.title;\n      state.description = exercise.description;\n      state.constants = exercise.constants;\n      state.predicates = exercise.predicates;\n      state.functions = exercise.functions;\n      state.constraint = exercise.constraints === undefined? \"\": exercise.constraints;\n      state.id = exercise.exercise_id;\n      state.propositions = [];\n      for (let i = 0; i < exercise.propositions.length; i++) {\n        let formalization = [];\n        let constraint = [];\n        for (let j = 0; j < exercise.propositions[i].formalization.length; j++) {\n          formalization.push(exercise.propositions[i].formalization[j].formalization);\n          constraint.push(exercise.propositions[i].formalization[j].constraints);\n        }\n        state.propositions.push({\n          proposition: exercise.propositions[i].proposition,\n          proposition_id: exercise.propositions[i].proposition_id,\n          formalizations: formalization,\n          constraints: constraint\n        })\n      }\n    },\n    [fetchSavedExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n  }\n});\n\n\n/* export actions */\n\nexport const {\n  updateExerciseTitle,\n  updateDescription,\n  updateConstants,\n  updatePredicates,\n  updateFunctions,\n  updateInformalValue,\n  updateFormalization,\n  addNewProposition,\n  addNewFormalization,\n  removeProposition,\n  removeFormalization,\n  updateConstraints,\n  updateConstraint,\n  changeStatus\n} = addExerciseSlice.actions;\n\n\n/* definition of helper functions used in selectors */\n\nfunction checkForDuplicates(values, name) {\n  let found = new Set();\n  for (let x of values) {\n    if (found.has(x)) {\n      return `Found duplicate symbol: '${x}' in ${name}`;\n    } else {\n      found.add(x);\n    }\n  }\n\n  return null;\n}\n\nfunction checkForClashes(constants, predicates, functions) {\n  for (let x of constants) {\n    if (predicates.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and predicates`;\n    }\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in constants and functions`;\n    }\n  }\n\n  for (let x of predicates.keys()) {\n    if (functions.has(x)) {\n      return `Found clash in language definition: '${x}' in predicates and functions`;\n    }\n  }\n\n  return null;\n}\n\n\n/* selectors */\n\nexport const selectExerciseTitle = (state) => {\n  return {\n    value: state.addExercise.title\n  };\n};\n\nexport const selectDescription = (state) => {\n  return {\n    value: state.addExercise.description\n  };\n};\n\nexport const selectConstantsParsed = createSelector(\n  [ state => state.addExercise.constants ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseConstants);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectPredicatesParsed = createSelector(\n  [ state => state.addExercise.predicates ],\n  (value) => {\n    let result = parseLanguageSubset(value, parsePredicates);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectFunctionsParsed = createSelector(\n  [ state => state.addExercise.functions ],\n  (value) => {\n    let result = parseLanguageSubset(value, parseFunctions);\n    return {\n      value: value,\n      array: result.array,\n      error: result.error\n    };\n  }\n);\n\nexport const selectLanguage = createSelector(\n  [\n    selectConstantsParsed,\n    selectPredicatesParsed,\n    selectFunctionsParsed\n  ],\n  (constantsParsed, predicatesParsed, functionsParsed) => {\n    let constants = new Set(constantsParsed.array);\n    let predicates = arrayToArityMap(predicatesParsed.array);\n    let functions = arrayToArityMap(functionsParsed.array);\n\n    let containsErrors = constantsParsed.error\n      || predicatesParsed.error\n      || functionsParsed.error;\n    let containsDuplicates = checkForDuplicates(constantsParsed.array, \"constants\")\n      || checkForDuplicates(predicatesParsed.array.map(x => x.name), \"predicates\")\n      || checkForDuplicates(functionsParsed.array.map(x => x.name), \"functions\");\n    \n    let errorMessage = null;\n    if (containsErrors) {\n      errorMessage = \"Language definition contains errors\";\n    } else if (containsDuplicates) {\n      errorMessage = containsDuplicates;\n    } else {\n      errorMessage = checkForClashes(constants, predicates, functions);\n    }\n\n    return { constants, predicates, functions, errorMessage };\n  }\n);\n\nexport const selectPropositions = (state) => {\n  return state.addExercise.propositions;\n};\n\nexport const selectFormalizations = (state, i) => {\n  return state.addExercise.propositions[i].formalizations;\n};\n\nexport const selectInformalValue = (state, i) => {\n  return state.addExercise.propositions[i].proposition;\n};\n\nexport const selectFormalization = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].formalizations[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\n\nexport const selectConstraints = createSelector(\n  [\n    (state, i, j) => state.addExercise.propositions[i].constraints[j],\n    (state, i, j) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\n\nexport const selectConstraint = createSelector(\n  [\n    (state) => state.addExercise.constraint,\n    (state) => selectLanguage(state)\n  ],\n  (value, language) => {\n    if(value === ''){\n      return { value, error: \"\"};\n    }\n    let error = parseFormalization(\n      value, language.constants, language.predicates,\n      language.functions, parseFormulaWithPrecedence\n    );\n    return { value, error };\n  }\n);\n\nconst selectExercise = (state) => {\n  let language = selectLanguage(state);\n  if (language.errorMessage || selectExerciseTitle(state).value === \"\") {\n    return null;\n  }\n\n  let propositions = selectPropositions(state);\n  for (let i = 0; i < propositions.length; i++) {\n    if (propositions[i].proposition === \"\") {\n      return null;\n    }\n    let formalizations = propositions[i].formalizations;\n    for (let j = 0; j < formalizations.length; j++) {\n      let formalization = selectFormalization(state, i, j);\n      if (formalization.error) {\n        return null;\n      }\n      let constraint = selectConstraints(state, i, j);\n      if (constraint.error) {\n        return null;\n      }\n    }\n  }\n  \n  return {\n    title: state.addExercise.title,\n    description: state.addExercise.description,\n    constants: state.addExercise.constants,\n    predicates: state.addExercise.predicates,\n    functions: state.addExercise.functions,\n    constraint: state.addExercise.constraint,\n    id: state.addExercise.id,\n    propositions: state.addExercise.propositions,\n  };\n};\n\nexport const checkExercise = (state) => {\n  let exercise = selectExercise(state);\n  return !exercise;\n};\n\nexport default addExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport { fetchData } from './fetchData';\n\n\n/* async actions */\n\nexport const fetchAllUsersToExercise = createAsyncThunk(\n    'exercises/fetchAllUsersToExercise',\n    async (exercise_id, { dispatch, rejectWithValue }) => {\n      try {\n        let response = await dispatch(fetchData(`/api/progress/${exercise_id}`, 'GET'));\n        return response;\n      } catch (err) {\n        console.error(err);\n        console.error(err.stack);\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\nexport const fetchAllExercisesToUser = createAsyncThunk(\n  'exercises/fetchAllExercisesToUser',\n  async (exercise_id, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(`/api/progress`, 'GET'));\n      return response;\n    } catch (err) {\n      console.error(err);\n      console.error(err.stack);\n      return rejectWithValue(err.message);\n    }\n  }\n);\nexport const fetchUsersSolutions = createAsyncThunk(\n    'exercises/fetchUsersSolutions',\n    async ({exercise_id, user_name}, { dispatch, rejectWithValue }) => {\n      try {\n        let response = await dispatch(fetchData(`/api/progress/${exercise_id}/${user_name}`, 'GET'));\n        return response;\n      } catch (err) {\n        console.error(err);\n        console.error(err.stack);\n        return rejectWithValue(err.message);\n      }\n    }\n);\n\n\n/* slice */\nexport const progressPropositionsSlice = createSlice({\n  name: 'users',\n  initialState: {\n    exercises: [],\n    users: [],\n    status: 'idle',\n    error: null,\n    solutions: [],\n    exercise_id: null,\n    user: '',\n    title:''\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllUsersToExercise.pending]: (state, action) => {\n      state.status = 'loading';\n      state.exercise_id = action.meta.arg;\n    },\n    [fetchAllUsersToExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.title = action.payload.title;\n      state.users = action.payload.users;\n    },\n    [fetchAllUsersToExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchAllExercisesToUser.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllExercisesToUser.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercises = action.payload;\n    },\n    [fetchAllExercisesToUser.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n    [fetchUsersSolutions.pending]: (state, action) => {\n      state.status = 'loading';\n      state.user = action.meta.arg.user_name;\n      state.exercise_id = action.meta.arg.exercise_id;\n    },\n    [fetchUsersSolutions.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.title = action.payload.title;\n      state.solutions = action.payload.solutions;\n    },\n    [fetchUsersSolutions.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\n\n\n/* selectors */\n\nexport const selectUsers = (state) => {\n  return state.propositions.users;\n};\n\nexport const selectExerciseTitle = (state) => {\n  return state.propositions.title;\n};\n\nexport const selectExercises = (state) => {\n  return state.propositions.exercises;\n};\n\nexport const selectUsersSolution = (state) => {\n  return state.propositions.solutions;\n};\n\nexport const selectUserName = (state) => {\n  return state.propositions.user;\n};\n\nexport const selectStatus = (state) => {\n  return state.propositions.status;\n};\n\nexport const selectError = (state) => {\n  return state.propositions.status;\n};\n\nexport default progressPropositionsSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {\n  parseConstants,\n  parsePredicates,\n  parseFunctions,\n  parseFormulaWithPrecedence\n} from '@fmfi-uk-1-ain-412/js-fol-parser';\nimport { fetchData } from './fetchData';\nimport {\n  arrayToArityMap,\n  parseFormalization\n} from './helpers';\n\n\n/* async actions */\n\nexport const fetchExercise = createAsyncThunk(\n  'solveExercise/fetchExercise',\n  async ({exercise_id, user_name}, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n        `/api/exercises/${exercise_id}`, 'POST', { username: user_name }\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const evaluate = createAsyncThunk(\n  'solveExercise/evaluate',\n  async ({ exercise_id, proposition_id, solution, user }, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n        `/api/exercises/${exercise_id}/${proposition_id}`, 'POST',\n        { solution, user }\n      ));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const fetchActiveFeedbacks = createAsyncThunk(\n  'solveExercise/fetchFeedback',\n  async ({ proposition_id, bad_formalization_id}, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n        `/api/feedbacks/active/bad_formalization/${bad_formalization_id}`, 'GET'));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const feedbackRating = createAsyncThunk(\n  'solveExercise/feedbackRating',\n  async ({ proposition_id, index, feedback_id, solution_id }, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n        `/api/feedbacks/rating`, 'POST', {feedback_id, solution_id}));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const updateRating = createAsyncThunk(\n  'solveExercise/rating',\n  async ({ id, rating }, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n        `/api/feedbacks/rating/${id}`, 'PATCH', {rating}));\n      return response;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* slice */\nexport const solveExerciseSlice = createSlice({\n  name: 'solveExercise',\n  initialState: {\n    exercise: null,\n    status: 'idle',\n    error: null,\n\n    constants: [],\n    predicates: [],\n    functions: [],\n\n    solutions: {},\n    solution: null\n  },\n  reducers: {\n    update: {\n      reducer: (state, action) => {\n        const { value, id } = action.payload;\n        state.solutions[id].solution = value.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n      },\n      prepare: (value, id) => {\n        return { payload: { value, id } };\n      }\n    }\n  },\n  extraReducers: {\n    [fetchExercise.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchExercise.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.exercise = action.payload;\n      state.constants = parseConstants(state.exercise.constants);\n      state.predicates = parsePredicates(state.exercise.predicates);\n      state.functions = parseFunctions(state.exercise.functions);\n      for (let p of state.exercise.propositions) {\n        state.solutions[p.proposition_id] = {\n          evaluation: null,\n          status: 'idle',\n          error: null,\n          feedbacks: []\n        };\n        if(p.solution === null || p.solution === undefined){\n          state.solutions[p.proposition_id][\"solution\"] = '';\n        }\n        else{\n          state.solutions[p.proposition_id][\"solution\"] = p.solution\n        }\n      }\n    },\n    [fetchExercise.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    },\n\n    [evaluate.pending]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'loading';\n    },\n    [evaluate.fulfilled]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let evaluation = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'succeeded';\n      solution.evaluation = evaluation;\n    },\n    [evaluate.rejected]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let { error } = action.payload;\n      let solution = state.solutions[proposition_id];\n      solution.status = 'failed';\n      solution.error = error;\n    },\n\n    [fetchActiveFeedbacks.pending]: (state, action) => {\n    },\n    [fetchActiveFeedbacks.fulfilled]: (state, action) => {\n      let { proposition_id } = action.meta.arg;\n      let solution = state.solutions[proposition_id];\n      solution.feedbacks = action.payload;\n    },\n    [fetchActiveFeedbacks.rejected]: (state, action) => {\n    },\n\n    [feedbackRating.pending]: (state, action) => {\n    },\n    [feedbackRating.fulfilled]: (state, action) => {\n      let { proposition_id, index } = action.meta.arg;\n      let feedback = state.solutions[proposition_id].feedbacks[index];\n      feedback.rating_id = action.payload;\n    },\n    [feedbackRating.rejected]: (state, action) => {\n    }\n  }\n});\n\n\n/* export actions */\nexport const {\n  update\n} = solveExerciseSlice.actions;\n\n\n/* selectors */\n\nexport const selectExercise = (state) => {\n  return state.solveExercise.exercise;\n};\n\nexport const selectSolution = (state, id) => {\n  const value = state.solveExercise.solutions[id].solution;\n  let error = parseFormalization(\n    value, new Set(state.solveExercise.constants),\n    arrayToArityMap(state.solveExercise.predicates),\n    arrayToArityMap(state.solveExercise.functions),\n    parseFormulaWithPrecedence\n  );\n  return { value, error };\n};\n\nexport const selectStatus = (state) => {\n  return state.solveExercise.status;\n};\n\nexport const selectError = (state) => {\n  return state.solveExercise.error;\n};\n\nexport const selectEvaluation = (state, id) => {\n  return state.solveExercise.solutions[id].evaluation;\n};\n\nexport const selectEvalStatus = (state, id) => {\n  return state.solveExercise.solutions[id].status;\n};\n\nexport const selectEvalError = (state, id) => {\n  return state.solveExercise.solutions[id].error;\n};\n\nexport const selectFeedbacks = (state, id) => {\n  return state.solveExercise.solutions[id].feedbacks;\n};\n\n\nexport default solveExerciseSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\nimport { Buffer } from 'buffer';\n\nconst debugAccessRights = false // todo\n\n\n/* Async actions */\n\nexport const logIn = createAsyncThunk(\n  'user/login',\n  async ({ username, password }, { dispatch, rejectWithValue }) => {\n    try {\n      let data = {};\n      data[\"username\"] = username;\n      data[\"password\"] = password;\n      let response = await dispatch(fetchData(\n          `/api/users/login`, 'POST', data\n      ));\n\n      return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\nexport const logInByGithub = createAsyncThunk(\n  'user/loginGithub',\n  async ( {code, token}, { dispatch, rejectWithValue }) => {\n    try {\n      let data = {};\n      if (code !== undefined) {\n        data[\"code\"] = code;\n      } else if (token !== undefined) {\n        data[\"token\"] = token;\n      }\n      let response = await dispatch(fetchData(\n          `/api/users/login/github/auth`, 'POST', data\n      ));\n      return response;\n    } catch (err) {\n      console.error(err.message)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n\n/* Common token processing */\n\nfunction userFromToken(token) {\n  if (token === null) {\n    return undefined;\n  }\n  try {\n    const { username, isAdmin } =\n      JSON.parse(Buffer.from(token.split(\".\")[1], \"base64\").toString());\n    return {\n      user: { username },\n      isLoggedIn: true,\n      isAdmin: debugAccessRights || isAdmin,\n    };\n  } catch (_e) {\n    return undefined;\n  }\n}\n\nconst getStoredUser = () =>\n  userFromToken(localStorage.getItem(\"formalization_checker_token\"));\n\nfunction loginFulfilled(state, action) {\n  state.status = 'succeeded';\n  state.usernameValue = '';\n  state.passwordValue = '';\n  if (action.payload) {\n    const userInfo = userFromToken(action.payload.token);\n    if (userInfo) {\n      state.user = userInfo.user;\n      state.isLoggedIn = userInfo.isLoggedIn;\n      state.isAdmin = userInfo.isAdmin;\n      localStorage.setItem(\"formalization_checker_token\", action.payload.token);\n    }\n  } else {\n    state.error = '';\n  }\n}\n\n\n/* Slice */\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    isAdmin: false,\n    user: null,\n\n    status: 'idle',\n    error: null,\n\n    usernameValue: '',\n    passwordValue: '',\n    ...(getStoredUser() ?? {})\n  },\n  reducers: {\n    updateUsername: (state, action) => {\n      state.usernameValue = action.payload;\n    },\n    updatePassword: (state, action) => {\n      state.passwordValue = action.payload;\n    },\n    logOut: (state) => {\n      localStorage.removeItem(\"formalization_checker_token\");\n      state.isLoggedIn = false;\n      state.user = null;\n      state.status = 'idle';\n      state.error = '';\n    },\n    setUser: (state) => {\n      const savedUser = getStoredUser();\n      if (savedUser) {\n        state.user = savedUser.user;\n        state.isLoggedIn = savedUser.isLoggedIn;\n        state.isAdmin = savedUser.isAdmin;\n      }\n    },\n  },\n  extraReducers: {\n    [logIn.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logIn.fulfilled]: loginFulfilled,\n    [logIn.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n    [logInByGithub.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [logInByGithub.fulfilled]: loginFulfilled,\n    [logInByGithub.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'No such combination of username and password found.';\n    } ,\n  }\n});\n\n/* export actions */\nexport const selectUser = (state) => {\n  return state.user.user?.username;\n}\n\nexport const {\n  updateUsername,\n  updatePassword,\n  logOut,\n  setUser\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n","import {\n  createSlice,\n  createAsyncThunk\n} from '@reduxjs/toolkit';\nimport {fetchData} from \"./fetchData\";\n\n/* async actions */\n\nexport const fetchAllUsers = createAsyncThunk(\n  'users',\n  async (user, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n          `/api/users/${user}`, 'GET'\n      ));\n    return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\nexport const saveAdmins = createAsyncThunk(\n  'admins',\n  async (admins, { dispatch, rejectWithValue }) => {\n    try {\n      let response = await dispatch(fetchData(\n          `/api/users`, 'POST', admins\n      ));\n\n     return response;\n    } catch (err) {\n      console.error(err)\n      return rejectWithValue(err.message);\n    }\n  }\n);\n\n/* slice */\nexport const adminsSlice = createSlice({\n  name: 'admins',\n  initialState: {\n    users: [''],\n    \n    status: 'idle',\n    error: null,\n\n    changed: {}\n  },\n  reducers: {\n    addChanged: (state, action) => {\n      state.changed[action.payload] = !state.changed[action.payload] ;\n    },\n    },\n  extraReducers: {\n    [fetchAllUsers.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [fetchAllUsers.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = action.payload\n      for(let i = 0; i < state.users.length; i++){\n        state.changed[state.users[i].user_name] = state.users[i].is_admin;\n      }\n    },\n    [fetchAllUsers.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'There are no users';\n    } ,\n    [saveAdmins.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [saveAdmins.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.users = [];\n      for(let [key, value] of Object.entries(action.payload)){\n        state.users.push({\"user_name\": key, \"is_admin\": value});\n      }\n    },\n    [saveAdmins.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = 'Unsuccessful saving admins';\n    } ,\n  }\n});\n\nexport const selectAllUsers = (state) => {\n  return state.allUsers.users;\n};\n\nexport const selectStatus = (state) => {\n  return state.allUsers.status;\n};\n\nexport const selectError = (state) => {\n  return state.allUsers.error;\n};\n\nexport const selectChangedAdmins = (state) => {\n  return state.allUsers.changed;\n};\n\n/* export actions */\nexport const {\n  addChanged\n} = adminsSlice.actions;\n\nexport default adminsSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const badFormalizationsSlice = createApi({\n\n    reducerPath: 'bad_formalizations',\n    baseQuery: function _q(args, api, extraOptions) {\n      if (_q.queryFn === undefined) {\n        _q.queryFn = fetchBaseQuery({\n          baseUrl: `${api.getState().backend.url}/api/exercises`,\n          prepareHeaders: (headers) => {\n              headers.set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"formalization_checker_token\"))\n              return headers;\n          }})\n      }\n      return _q.queryFn(args, api, extraOptions)\n    },\n    endpoints: builder => ({\n        getExercises: builder.query({\n            query: () => '/',\n            skipCache: true\n        }),\n        getBadExercises: builder.query({\n            query: () => '/bad_formalizations',\n            skipCache: true\n        }),\n        getBadPropositions: builder.query({\n            query: (exercise_id) => `/bad_formalizations/${exercise_id}`\n        }),\n        getBadFormalizations: builder.query({\n            query: ({exercise_id, proposition_id}) => `/bad_formalizations/${exercise_id}/${proposition_id}`\n        }),\n        getBadFormalizationInfo: builder.query({\n            query: ({exercise_id, bad_formalization_id}) => `/bad_formalization/${exercise_id}/${bad_formalization_id}`\n        })\n    })\n})\n\nexport const {\n    useGetExercisesQuery,\n    useGetBadExercisesQuery,\n    useGetBadPropositionsQuery,\n    useGetBadFormalizationsQuery,\n    useGetBadFormalizationInfoQuery\n} = badFormalizationsSlice","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const feedbacksSlice = createApi({\n\n    reducerPath: 'feedbacks',\n    baseQuery: function _q(args, api, extraOptions) {\n      if (_q.queryFn === undefined) {\n        _q.queryFn = fetchBaseQuery({\n          baseUrl: `${api.getState().backend.url}/api/feedbacks`,\n          prepareHeaders: (headers) => {\n              headers.set(\"Authorization\", \"Bearer \" + localStorage.getItem(\"formalization_checker_token\"))\n              return headers;\n          }})\n      }\n      return _q.queryFn(args, api, extraOptions)\n    },\n    tagTypes: ['Feedbacks'],\n    endpoints: builder => ({\n        getFeedbacks: builder.query({\n            query: (bad_formalization_id) => ({\n                url: `all/bad_formalization/${bad_formalization_id.bad_formalization_id}`,\n                method: 'GET'\n            }),\n            skipCache: true,\n            providesTags: ['Feedbacks'],\n        }),\n        addFeedback: builder.mutation({\n            query: initialPost => ({\n                url: '/',\n                method: 'POST',\n                body: initialPost\n            }),\n            invalidatesTags: ['Feedbacks'],\n        }),\n        updateFeedback: builder.mutation({\n            query: post => ({\n                url: `/${post.id}`,\n                method: 'PATCH',\n                body: post\n            }),\n            invalidatesTags: ['Feedbacks'],\n        })\n\n    }),\n})\n\nexport const {\n    useGetFeedbacksQuery,\n    useAddFeedbackMutation,\n    useUpdateFeedbackMutation\n} = feedbacksSlice","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction ProtectedRoute({ isLoggedIn, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isLoggedIn) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React, {useEffect} from 'react';\nimport { Form, Button, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n    updateUsername, updatePassword, logIn, logInByGithub, setUser\n} from '../../redux/userSlice';\nimport {CLIENT_ID, REDIRECT} from \"../../config\";\n\n\nfunction LoginForm({\n  usernameValue, passwordValue, updateUsername, updatePassword, setUser,\n  location, isLoggedIn, status, error, logIn, logInByGithub\n}) {\n    useEffect(() => {\n        if (localStorage.getItem(\"formalization_checker_token\") !== null) {\n            setUser();\n        }\n    }, [status, setUser]);\n\n  if (status === 'loading') {\n    return <Spinner animation=\"border\" variant=\"primary\" />;\n  }\n  if(window.location.href.match(\"code\")){\n      let code = window.location.href.split(\"code=\")[1];\n      logInByGithub({code: code});\n      return <Redirect to=\"/\" />\n  }\n\n  if (isLoggedIn) {\n    if (location.state && location.state.from && location.state.from.pathname) {\n      return <Redirect to={location.state.from.pathname} />\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  } else {\n\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label>\n            Username\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            value={usernameValue}\n            onChange={(e) => updateUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Password\n          </Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={passwordValue}\n            onChange={(e) => updatePassword(e.target.value)}\n          />\n          <Form.Text className=\"text-danger\">\n            { error }\n          </Form.Text>\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          style={{marginTop: 0.5+'em', marginBottom: 0.5+'em', marginRight: 0.5+'em'}}\n          onClick={(e) => {\n            e.preventDefault();\n            logIn({ username: usernameValue, password: passwordValue });\n          }}\n        >\n          Log in\n        </Button>\n        <Button\n          type=\"submit\"\n          style={{marginTop: 0.5+'em', marginBottom: 0.5+'em', marginLeft: 0.5+'em'}}\n          onClick={(e) => {\n            e.preventDefault();\n              let url = \"https://github.com/login/oauth/authorize?client_id=\" + CLIENT_ID + \"&redirect_uri=\" + REDIRECT +\"&scope=read:user\"\n              window.location.replace(url);\n          }}\n        >\n          Log in with Github\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    usernameValue: state.user.usernameValue,\n    passwordValue: state.user.passwordValue,\n    isLoggedIn: state.user.isLoggedIn,\n    status: state.user.status,\n    error: state.user.error\n  };\n};\n\nconst mapDispatchToProps = { updateUsername, updatePassword, logIn, logInByGithub, setUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst QueryError = ({ error, as: Comp = Alert }) =>\n    <Comp variant=\"danger\">\n        <strong>An error has occured while fetching the exercises list.</strong>\n        {\" \"}\n        { error.originalStatus == 200\n        ? error.error\n        : `Server responded with status ${error.originalStatus}.` }\n    </Comp>;\n\nexport default QueryError;\n","import React from 'react';\nimport { ListGroup, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchExercise\n} from '../../redux/solveExerciseSlice';\nimport {selectUser} from \"../../redux/userSlice\";\nimport {useGetExercisesQuery} from \"../../redux/badFormalizationsSlice\";\nimport QueryError from '../common/QueryError';\n\n\nfunction ExerciseList({ fetchExercise, username, onSelect }) {\n  const {\n    data: exercises,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetExercisesQuery(undefined, {refetchOnMountOrArgChange: true})\n\n  let content = null;\n  if (isLoading) {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (isSuccess) {\n    let exercises_list = exercises.map((x) => onSelect === undefined ? (\n      <ListGroup.Item\n        as={Link} to={`/solve/${x.exercise_id}`} key={x.exercise_id}\n        action\n        onClick={() => fetchExercise({exercise_id:x.exercise_id, user_name: username })}\n      >\n        { x.title }\n      </ListGroup.Item>\n    ) : (\n      <ListGroup.Item key={x.exercise_id} action onClick={() => onSelect(x.exercise_id)}>\n        {x.title}\n      </ListGroup.Item>\n    ));\n    content = <ListGroup>{ exercises_list }</ListGroup>;\n  } else if (isError) {\n    content = <QueryError error={error} />;\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Exercises</h1>\n      { content }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: selectUser(state)\n  };\n};\n\nconst mapDispatchToProps = { fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n\nfunction SyntaxError({ value, error }) {\n  if (!error) {\n    return null;\n  }\n\n  const start = error.location.start.offset;\n  const end = error.location.end.offset;\n\n  const str_1 = value.substring(0, start);\n  const str_2 = value.substring(start, end);\n  const str_3 = value.substring(end);\n\n  const str = value === \"\" ?\n    null : (\n      <div className=\"text-body\">\n        {str_1}\n        <mark className=\"bg-warning\">\n          {str_2}\n        </mark>\n        {str_3}\n      </div>\n    );\n\n  return (\n    <Form.Control.Feedback type=\"invalid\">\n      {str}\n      <div>\n        {error.message}\n      </div>\n    </Form.Control.Feedback>\n  );\n}\n\nexport default SyntaxError;\n","import React, {useState} from 'react';\nimport { Alert, Row, Col, Container} from 'react-bootstrap';\nimport {HandThumbsDown, HandThumbsDownFill, HandThumbsUp, HandThumbsUpFill} from \"react-bootstrap-icons\";\nimport {updateRating} from \"../../redux/solveExerciseSlice\";\nimport {connect} from \"react-redux\";\n\nfunction Feedback({ feedback, updateRating }) {\n    let content;\n    const [activeBtn, setActiveBtn] = useState(\"none\");\n    const [thumbsUp, setThumbsUp] = useState(<HandThumbsUp/>);\n    const [thumbsDown, setThumbsDown] = useState(<HandThumbsDown/>);\n\n    const handleLikeClick = () => {\n        if (activeBtn === \"none\" || activeBtn === \"dislike\") {\n            setActiveBtn(\"like\");\n            setThumbsUp(<HandThumbsUpFill/>)\n            setThumbsDown(<HandThumbsDown/>)\n            updateRating({\n                id: feedback.rating_id,\n                rating: 1\n            });\n        } else if (activeBtn === 'like'){\n            setActiveBtn(\"none\");\n            setThumbsUp(<HandThumbsUp/>)\n            updateRating({\n                id: feedback.rating_id,\n                rating: 0\n            });\n        }\n    };\n\n    const handleDislikeClick = () => {\n        if (activeBtn === \"none\" || activeBtn === \"like\") {\n            setActiveBtn(\"dislike\");\n            setThumbsDown(<HandThumbsDownFill/>)\n            setThumbsUp(<HandThumbsUp/>)\n            updateRating({\n                id: feedback.rating_id,\n                rating: -1\n            });\n        } else if (activeBtn === 'dislike'){\n            setActiveBtn(\"none\");\n            setThumbsDown(<HandThumbsDown/>)\n            updateRating({\n                id: feedback.rating_id,\n                rating: 0\n            });\n        }\n    };\n\n    const like = (\n        <button\n            className={`btn ${activeBtn === \"like\" ? \"like-active\" : \"\"}`}\n            key={feedback.feedback_id}\n            onClick={handleLikeClick} >\n            {thumbsUp}\n        </button>\n    )\n\n    const dislike = (\n        <button\n            className={`btn ${activeBtn === \"dislike\" ? \"dislike-active\" : \"\"}`}\n            key={feedback.feedback_id}\n            onClick={handleDislikeClick} >\n            {thumbsDown}\n        </button>\n    )\n\n    content = (\n        <Row className=\"p-0 mb-1\">\n            <Col className=\"p-0\">\n                <Alert variant=\"info\" className=\"mb-0 small p-2\">\n                    {feedback.feedback}\n                </Alert>\n            </Col>\n            <Col className=\"p-0\" xs=\"auto\">{like}</Col>\n            <Col className=\"p-0\" xs=\"auto\">{dislike}</Col>\n        </Row>\n    )\n\n    return (\n        <Container fluid>\n            { content }\n        </Container>\n    );\n}\n\nconst mapDispatchToProps = { updateRating };\n\nexport default connect(null, mapDispatchToProps)(Feedback);","import React, {useEffect, useState} from 'react';\nimport {Form,Spinner, Button} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {\n    selectEvalStatus,\n    selectEvalError,\n    fetchActiveFeedbacks,\n    feedbackRating, selectEvaluation, selectFeedbacks\n} from '../../redux/solveExerciseSlice';\nimport {\n    makeStructure\n} from '../../redux/helpers';\nimport Feedback from \"./Feedback\";\n\nfunction Evaluation({ proposition_id, evaluation, feedbacks, fetchFeedbacks, feedbackRating, status, error }) {\n    const [index, setIndex] = useState(-1);\n\n    useEffect(() => {\n        if (status === 'succeeded') {\n            fetchFeedbacks({\n                proposition_id,\n                bad_formalization_id: evaluation.bad_formalization_id,\n                active: true\n            });\n            setIndex(-1)\n        }\n    }, [status, fetchFeedbacks, proposition_id, evaluation]);\n\n    if (status === 'loading') {\n        return <Spinner animation=\"border\" variant=\"primary\" />;\n    }\n    if (status === 'succeeded') {\n        return <>\n            {viewEvalResult(evaluation)}\n            {viewFeedbacks(proposition_id, evaluation, feedbacks, feedbackRating, index, setIndex)}\n        </>\n    }\n    if (status === 'failed') {\n        return (\n            <ErrorEvalResult>\n                { error }\n            </ErrorEvalResult>\n        );\n    }\n    return null;\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        evaluation: selectEvaluation(state, ownProps.proposition_id),\n        feedbacks: selectFeedbacks(state, ownProps.proposition_id),\n        status: selectEvalStatus(state, ownProps.proposition_id),\n        error: selectEvalError(state, ownProps.proposition_id)\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchFeedbacks: fetchActiveFeedbacks,\n    feedbackRating\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Evaluation);\n\nconst EvalResult = ({ type, children }) =>\n    <Form.Text className={`text-${type}`} children={children} />\n\nconst CorrectEvalResult = () =>\n    <EvalResult type=\"success\">\n        <strong>Your formalization is correct</strong>\n    </EvalResult>\n\nconst ErrorEvalResult = ({children}) =>\n    <EvalResult type=\"danger\" className=\"text-warning\">\n        <strong>\n            An error occured while validating your formalization:\n        </strong>\n        {children}\n    </EvalResult>\n\nconst msgDiscuss = ' Discuss your formalization with your peers or teachers.'\n\nconst FailedEvalResult = () =>\n    <EvalResult type=\"warning\">\n        <strong>\n            We were unable to automatically validate your formalization.\n        </strong>\n        {msgDiscuss}\n    </EvalResult>\n\nconst IncorrectEvalResult = ({ summary, children }) =>\n    <EvalResult type=\"danger\">\n        <strong>Your formalization is incorrect.</strong>\n        { !children\n            ? <p>{summary}</p>\n            : <details open>\n                <summary className=\"mb-2\">{summary}</summary>\n                {children}\n            </details>\n        }\n    </EvalResult>\n\nconst Interpretation = ({interpFunc, viewValue, subscript}) => {\n    if (!interpFunc) return null;\n    const entries = Object.entries(interpFunc);\n    return (\n        entries.length > 0 &&\n        <ul className=\"list-unstyled mb-1\">\n            {entries.map(([symbol, value]) =>\n                <li key={symbol}>\n                    𝑖{subscript}({symbol}) = {viewValue(value)}\n                </li>\n            )}\n        </ul>\n    );\n};\n\nconst viewSetValue = (tuples) => (\n    `{${\n        tuples.map((tuple) => tuple.length > 1\n            ? `(${tuple})`\n            : tuple\n        ).join(', ')\n    }}`\n);\n\nconst Structure = ({ subscript, D, iC, iP, iF }) => (<>\n    <p className=\"mb-1\">\n        𝐷{subscript}{` = {${D.join(\", \")}}`}\n    </p>\n    <Interpretation\n        interpFunc={iC}\n        viewValue={(value) => value}\n        subscript={subscript}\n    />\n    <Interpretation\n        interpFunc={iP}\n        viewValue={viewSetValue}\n        subscript={subscript}\n    />\n    <Interpretation\n        interpFunc={iF}\n        viewValue={viewSetValue}\n        subscript={subscript}\n    />\n</>)\n\nconst Counterexample = ({structure, description, index, msgNotFound}) => {\n    const subscript = index ? <sub>{index}</sub> : null;\n    return (\n        structure\n        ? <div className=\"mb-2\">\n            <p className=\"mb-1\">\n                {description}{\" \"}\n                ℳ{subscript} = (𝐷{subscript}, 𝑖{subscript}) where:\n            </p>\n            <Structure subscript={subscript} {...structure}/>\n        </div>\n        : <p className=\"mb-2\">\n            { msgNotFound ??\n                'We could not find a counterexample automatically.'\n            }\n            {msgDiscuss}\n        </p>\n    );\n}\n\nconst viewEvalResult = (evaluation) => {\n    if (evaluation.solutionToFormalization === 'OK'\n        && evaluation.formalizationToSolution === 'OK') {\n        return <CorrectEvalResult />;\n    }\n\n    if (evaluation.solutionToFormalization === 'TE'\n        || evaluation.formalizationToSolution === 'TE'\n        || evaluation.solutionToFormalization === 'ME'\n        || evaluation.formalizationToSolution === 'ME') {\n        return <FailedEvalResult />;\n    }\n\n    // FIXME: evaluation.languageConstants is sometimes empty\n    // Example: Charles hates no one whom Agatha hates.\n    // \\a x(-hates(C,x) \\limpl -hates(C,x))\n    // FIXME: 1.5.1. Peter je muž. A = E.\n    // No counterexample in one direction, in the other direction:\n    // got i(muz) = {}; should get: i(muz) = {i(Peter)}\n    const C_L = new Set(evaluation.languageContants);\n    // TODO: Fix backend to return a pair of objects similar to these\n    const correctImpliesInput = {\n        result: evaluation.formalizationToSolution,\n        description: evaluation.m1,\n        counterexample: makeStructure(\n            evaluation.domainFormalizationToSolution,\n            evaluation.symbolsFormalizationToSolution,\n            C_L\n        )\n    }\n    const inputImpliesCorrect = {\n        result: evaluation.solutionToFormalization,\n        description: evaluation.m2,\n        counterexample: makeStructure(\n            evaluation.domainSolutionToFormalization,\n            evaluation.symbolsSolutionToFormalization,\n            C_L\n        )\n    }\n\n    if (inputImpliesCorrect.result === 'OK'\n        && correctImpliesInput.result === 'WA') {\n        return (\n            <IncorrectEvalResult summary={\n                `Your formalization is false\n                in some first-order structure\n                where the correct formalization is true.`\n            }>\n                <Counterexample\n                    description=\"One such structure is\"\n                    structure={correctImpliesInput.counterexample}\n                />\n            </IncorrectEvalResult>\n        );\n    }\n\n    if (inputImpliesCorrect.result === 'WA'\n        && correctImpliesInput.result === 'OK') {\n        return (\n            <IncorrectEvalResult summary={\n                `Your formalization is true\n                in some first-order structure\n                where the correct formalization is false.`\n            }>\n                <Counterexample\n                    description=\"One such structure is\"\n                    structure={inputImpliesCorrect.counterexample}\n                />\n            </IncorrectEvalResult>\n        );\n    }\n\n    return (\n        <IncorrectEvalResult\n            summary={`Your formalization is false\n                in some first-order structure\n                where the correct formalization is true,\n                and vice versa.`}\n        >\n            <Counterexample\n                description=\"Your formalization is true\n                    and the correct formalization is false,\n                    e.g., in structure\"\n                structure={inputImpliesCorrect.counterexample}\n                index={1}\n                msgNotFound={`We could not automatically find a structure\n                    in which your formalization is true\n                    and the correct formalization is false.`}\n            />\n            <Counterexample\n                description=\"Your formalization is false\n                    and the correct formalization is true,\n                    e.g., in structure\"\n                structure={correctImpliesInput.counterexample}\n                index={2}\n                msgNotFound={`We could not automatically find a structure\n                    in which your formalization is false\n                    and the correct formalization is true.`}\n            />\n        </IncorrectEvalResult>\n    );\n}\n\nconst viewFeedbacks = (proposition_id, evaluation, feedbacks, feedbackRating, index, setIndex) => {\n    if (!(feedbacks && feedbacks.length > 0)) {\n        return null;\n    }\n\n    const visibleFeedbacks = index >= 0 &&\n        feedbacks.slice(0, index+1).map(\n            (feedback) => <Feedback key={feedback.feedback_id} feedback={feedback}/>\n        );\n\n    const hintButton = index < feedbacks.length-1 &&\n        <Button\n            className=\"mt-1 mr-1 mb-1\"\n            variant=\"info\"\n            size=\"sm\"\n            onClick={ () => {\n                setIndex(++index);\n                feedbackRating({\n                    proposition_id,\n                    index,\n                    feedback_id: feedbacks[index].feedback_id,\n                    solution_id: evaluation.solution_id\n                });\n            }}\n        >\n            {index < 0 ? 'Hint' : 'Next hint'}\n        </Button>;\n\n    return <>\n        {visibleFeedbacks}\n        {hintButton}\n    </>;\n}\n","import React from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from '../addExercise/SyntaxError';\nimport Evaluation from './Evaluation';\nimport {\n    update,\n    evaluate,\n    selectSolution\n} from '../../redux/solveExerciseSlice';\n\nfunction Solution({ exercise_id, proposition_id, proposition, value, error, update, evaluate, user, onChange }) {\n\n    const handleChange = (value) => {\n        update(value, proposition_id);\n        onChange && onChange(value, proposition_id);\n    }\n\n    return (\n        <Form.Group\n          className=\"clearfix\"\n          controlId={`formalization-${exercise_id}-${proposition_id}`}\n        >\n            <Form.Label>\n                { proposition }\n            </Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"Enter formalization\"\n                as=\"textarea\"\n                rows={1}\n                value={value}\n                onKeyDown={(e) =>\n                    (e.key === 'Enter' && !error) &&\n                    evaluate({\n                        exercise_id,\n                        proposition_id,\n                        solution: value,\n                        user: user\n                    })}\n                isInvalid={!!error}\n                onChange={(e) => handleChange(e.target.value)}\n            />\n            <Button\n                type=\"submit\"\n                className=\"mt-1 float-right\"\n                variant=\"primary\"\n                disabled={error}\n                onClick={() => evaluate({\n                  exercise_id,\n                  proposition_id,\n                  solution: value,\n                  user: user\n                })}\n            >\n                Check\n            </Button>\n            <SyntaxError value={value} error={error} />\n            <Evaluation proposition_id={proposition_id} />\n        </Form.Group>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return selectSolution(state, ownProps.proposition_id)\n};\n\nconst mapDispatchToProps = { update, evaluate };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Solution);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Solution from './Solution';\nimport {\n    selectExercise,\n    selectStatus,\n    selectError,\n    fetchExercise\n} from '../../redux/solveExerciseSlice';\nimport { useParams } from 'react-router';\nimport {selectUser} from \"../../redux/userSlice\";\n\nexport const SolveExercise = ({ exerciseId, exercise, status, error, fetchExercise, user, onChange }) => {\n    useEffect(() => {\n        if (status === 'idle') {\n            fetchExercise({ exercise_id: exerciseId, username: user });\n        }\n    }, [status, exerciseId, exercise, fetchExercise, user]);\n\n    let content = null;\n    if (status === 'loading') {\n        content = <Spinner animation=\"border\" variant=\"primary\" />;\n    } else if (status === 'succeeded') {\n        const propositions_list = exercise.propositions.map((x) => (\n            <Solution\n              key={x.proposition_id}\n              exercise_id={exerciseId}\n              proposition_id={x.proposition_id}\n              proposition={x.proposition}\n              user={user}\n              onChange={onChange}\n            />\n        ));\n        content = (\n            <div>\n                <h2>{ exercise.title }</h2>\n                <p>{ exercise.description }</p>\n                <h5>Language ℒ</h5>\n                <p>𝒞<sub>ℒ</sub> = {\"{ \"}{ exercise.constants }{\" }\"}</p>\n                <p>𝒫<sub>ℒ</sub> = {\"{ \"}{ exercise.predicates }{\" }\"}</p>\n                <p>ℱ<sub>ℒ</sub> = {\"{ \"}{ exercise.functions }{\" }\"}</p>\n                { acceptedSymbolsView }\n                <h5>Propositions</h5>\n                { propositions_list }\n            </div>\n        );\n    } else if (status === 'failed') {\n        content = (\n            <Alert variant=\"danger\">\n                {error}\n            </Alert>\n        );\n    }\n\n    return content;\n}\n\nfunction SolveExercise1(props) {\n  const { id } = useParams();\n  return <SolveExercise exerciseId={id} {...props} />\n}\n\nconst acceptedSymbols = [\n  {\n    name: \"Negation\",\n    preferredToken: \"¬\",\n    acceptedTokens: [ \"-\", \"!\", \"~\", \"\\\\neg\", \"\\\\lnot\" ]\n  },\n  {\n    name: \"Equality\",\n    preferredToken: \"≐\",\n    acceptedTokens: [ \"=\" ]\n  },\n  {\n    name: \"Inequality\",\n    preferredToken: \"≠\",\n    acceptedTokens: [ \"!=\", \"/=\", \"<>\", \"\\\\neq\" ]\n  },\n  {\n    name: \"Conjunction\",\n    preferredToken: \"∧\",\n    acceptedTokens: [ \"&&\", \"&\", \"/\\\\\", \"\\\\wedge\", \"\\\\land\" ]\n  },\n  {\n    name: \"Disjunction\",\n    preferredToken: \"∨\",\n    acceptedTokens: [ \"||\", \"|\", \"\\\\/\", \"\\\\vee\", \"\\\\lor\", ]\n  },\n  {\n    name: \"Implication\",\n    preferredToken: \"→\",\n    acceptedTokens: [ \"->\", \"\\\\to\" ]\n  },\n  {\n    name: \"Equivalence\",\n    preferredToken: \"↔︎\",\n    acceptedTokens: [ \"⟷\", \"<->\", \"<-->\", \"\\\\lequiv\", \"\\\\leftrightarrow\" ]\n  },\n  {\n    name: \"Existential quantifier\",\n    preferredToken: \"∃\",\n    acceptedTokens: [ \"\\\\exists\", \"\\\\e\", \"\\\\E\" ]\n  },\n  {\n    name: \"Universal quantifier\",\n    preferredToken: \"∀\",\n    acceptedTokens: [ \"\\\\forall\", \"\\\\a\", \"\\\\A\" ]\n  },\n];\n\nconst acceptedSymbolsView = (\n  <details className=\"mb-3\">\n    <summary className=\"h6\">Accepted notation of logical symbols</summary>\n    <Table size=\"sm\" striped className=\"w-auto\">\n      <thead>\n        <tr>\n          <th>Logical symbol</th>\n          <th>Accepted notation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          acceptedSymbols.map(({ name, preferredToken, acceptedTokens }) =>\n            <tr key={name}>\n              <th>{name}</th>\n              <td>\n                <strong key={preferredToken}><code>{preferredToken}</code></strong>\n                {\n                  acceptedTokens.map( (token) =>\n                    <React.Fragment key={token}>\n                      {\" \"}<code className=\"ml-2\">{token}</code>\n                    </React.Fragment>\n                  )\n                }\n              </td>\n            </tr>\n          )\n        }\n      </tbody>\n    </Table>\n  </details>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        exercise: selectExercise(state),\n        status: selectStatus(state),\n        error: selectError(state),\n        user: selectUser(state),\n    };\n};\n\nconst mapDispatchToProps = { fetchExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolveExercise1);\n","import React from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport SyntaxError from './SyntaxError';\n\n\nfunction SymbolsInput({ symbolsKind, symbolsSet, value, error, update }) {  \n  return (\n    <InputGroup hasValidation={!!error} className=\"mb-3\">\n      <InputGroup.Prepend>\n        <InputGroup.Text as=\"label\">\n          {symbolsSet}<sub>ℒ</sub>{\" = {\"}\n        </InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        type=\"text\"\n        placeholder={`Enter ${symbolsKind}`}\n        value={value}\n        onChange={(e) => update(e.target.value)}\n        isInvalid={!!error}\n      />\n      <InputGroup.Append>\n        <InputGroup.Text>{\"}\"}</InputGroup.Text>\n      </InputGroup.Append>\n      <SyntaxError value={value} error={error} />\n    </InputGroup>\n  );\n}\n\nexport default SymbolsInput;\n","import React from 'react';\nimport SymbolsInput from './SymbolsInput';\nimport { connect } from 'react-redux';\nimport {\n  updateConstants,\n  selectConstantsParsed\n} from '../../redux/addExerciseSlice';\n\n\nconst Constants = (props) =>\n  <SymbolsInput\n    symbolsKind=\"individual constants\"\n    symbolsSet=\"𝒞\"\n    {...props}\n  />;\n\nconst mapStateToProps = selectConstantsParsed;\n\nconst mapDispatchToProps = { update: updateConstants };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constants);\n","import React from 'react';\nimport SymbolsInput from './SymbolsInput';\nimport { connect } from 'react-redux';\nimport {\n  updatePredicates,\n  selectPredicatesParsed\n} from '../../redux/addExerciseSlice';\n\n\nconst Predicates = (props) =>\n  <SymbolsInput\n    symbolsKind=\"predicate symbols\"\n    symbolsSet=\"𝒫\"\n    {...props}\n  />;\n\nconst mapStateToProps = selectPredicatesParsed;\n\nconst mapDispatchToProps = { update: updatePredicates };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Predicates);\n","import React from 'react';\nimport SymbolsInput from './SymbolsInput';\nimport { connect } from 'react-redux';\nimport {\n  updateFunctions,\n  selectFunctionsParsed\n} from '../../redux/addExerciseSlice';\n\n\nconst Functions = (props) =>\n  <SymbolsInput\n    symbolsKind=\"function symbols\"\n    symbolsSet=\"ℱ\"\n    {...props}\n  />;\n\nconst mapStateToProps = selectFunctionsParsed;\n\nconst mapDispatchToProps = { update: updateFunctions };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Functions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  selectLanguage\n} from '../../redux/addExerciseSlice';\n\n\nfunction Clashes({ errorMessage }) {\n  return errorMessage ? (\n    <p className=\"text-danger\">\n      {errorMessage}\n    </p>\n  )\n  : null;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: selectLanguage(state).errorMessage\n  };\n};\n\nexport default connect(mapStateToProps)(Clashes);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n    selectConstraint, updateConstraint\n} from '../../redux/addExerciseSlice';\n\n\nfunction Constraint({ value, error, update }) {\n  return (\n    <Form.Group>\n      <Form.Label>\n        Global preferred model constraints (optional):\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter constraints\"\n        value={value}\n        as=\"textarea\"\n        rows={1}\n        onChange={(e) => update(e.target.value)}\n        isInvalid={!!error}\n      />\n      <SyntaxError value={value} error={error} />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectConstraint;\n\nconst mapDispatchToProps = { update: updateConstraint };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Constraint);\n","import React from 'react';\nimport Constants from './Constants';\nimport Predicates from './Predicates';\nimport Functions from './Functions';\nimport Clashes from './Clashes';\nimport Constraint from './Constraint';\n\n\nfunction LanguageSection() {\n  return (\n    <div className=\"mt-4 mb-4\">\n      <h4>Language ℒ</h4>\n      <Constants />\n      <Predicates />\n      <Functions />\n      <Clashes />\n      <Constraint/>\n    </div>\n  );\n}\n\nexport default LanguageSection;\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SyntaxError from './SyntaxError';\nimport {\n  removeFormalization,\n  updateFormalization,\n  selectFormalization,\n  updateConstraints,  selectConstraints\n} from '../../redux/addExerciseSlice';\n\n\nfunction Formalization({ i, j, value, value2, error, error2, remove, update, updateConstraints, cannotBeRemoved }) {\n  const tag = `${i + 1}.${j + 1}`;\n  const id = `-${i}-${j}`;\n  return (\n    <li className=\"clearfix mb-4\">\n      <Form.Group controlId={`formalization${id}`}>\n        <Form.Label>\n          {`Formalization ${tag}`}\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter formalization\"\n          value={value}\n          as=\"textarea\"\n          rows={1}\n          onChange={(e) => update(e.target.value, i, j)}\n          isInvalid={!!error}\n        />\n        <Button\n          className=\"mt-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i, j)}\n          disabled={cannotBeRemoved}\n        >\n          Remove formalization {tag}\n        </Button>\n        <SyntaxError value={value} error={error} />\n      </Form.Group>\n\n      <Form.Group controlId={`constraints${id}`} size=\"sm\">\n        <Form.Label>\n          <small>Preferred model constraints {tag} (optional)</small>\n        </Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter constraints\"\n          value={value2}\n          as=\"textarea\"\n          size=\"sm\"\n          rows={1}\n          onChange={(e) => updateConstraints(e.target.value, i, j)}\n          isInvalid={!!error2}\n        />\n        <SyntaxError value={value2} error={error2} />\n      </Form.Group>\n    </li>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = selectFormalization(state, ownProps.i, ownProps.j);\n  const data2 = selectConstraints(state, ownProps.i, ownProps.j);\n  return {\n    value: data.value,\n    error: data.error,\n    value2: data2.value,\n    error2: data2.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  remove: removeFormalization,\n  update: updateFormalization,\n  updateConstraints\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Formalization);\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Formalization from './Formalization';\nimport {\n  addNewFormalization,\n  removeProposition,\n  updateInformalValue,\n  selectInformalValue,\n  selectFormalizations\n} from '../../redux/addExerciseSlice';\n\n\nfunction Proposition({ i, value, formalizations, add, remove, update }) {\n  const formalizationRemovable = formalizations.length > 1;\n  const formalizations_list = formalizations.map((_x, j) =>\n    <Formalization\n      key={j}\n      i={i}\n      j={j}\n      cannotBeRemoved={!formalizationRemovable}\n    />\n  );\n  const propositionFeedback = (value === \"\"\n    ? <Form.Control.Feedback type=\"invalid\">\n        This field cannot be empty\n      </Form.Control.Feedback>\n    : null\n  );\n\n  return (\n    <div className=\"mb-4\">\n      <Form.Group className=\"clearfix mb-0\" controlId={`proposition-${i}`}>\n        <h5><Form.Label className=\"d-block\">\n          Proposition {i + 1}\n        </Form.Label></h5>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter proposition\"\n          value={value}\n          onChange={(e) => update(e.target.value, i)}\n          isInvalid={!!propositionFeedback}\n        />\n        <Button\n          className=\"mt-1 mb-1 float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => remove(i)}\n        >\n          Remove proposition {i + 1}\n        </Button>\n        {propositionFeedback}\n      </Form.Group>\n      <ol className=\"list-unstyled pl-5\">\n        { formalizations_list }\n      </ol>\n      <div className=\"pl-5 mb-3\">\n        <Button\n          variant=\"outline-success\"\n          size=\"sm\"\n          onClick={() => add(i)}\n        >\n          Add formalization\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    value: selectInformalValue(state, ownProps.i),\n    formalizations: selectFormalizations(state, ownProps.i)\n  };\n};\n\nconst mapDispatchToProps = {\n  add: addNewFormalization,\n  remove: removeProposition,\n  update: updateInformalValue\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Proposition);\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Proposition from './Proposition';\nimport {\n  addNewProposition,\n  selectPropositions\n} from '../../redux/addExerciseSlice';\n\n\nfunction PropositionsSection({ propositions, add }) {\n  const propositions_list = propositions.map((_x, i) => (\n    <Proposition key={i} i={i} />\n  ));\n\n  return (\n    <div className=\"mb-4 clearfix\">\n      <h4 className=\"mb-3\">Propositions</h4>\n      { propositions_list }\n      <div>\n        <Button\n          variant=\"success\"\n          onClick={() => add()}\n        >\n          Add proposition\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    propositions: selectPropositions(state)\n  };\n};\n\nconst mapDispatchToProps = { add: addNewProposition };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PropositionsSection);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateExerciseTitle,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\n\n\nfunction ExerciseTitle({ value, update }) {\n  const feedback = (value === \"\" ?\n    <Form.Control.Feedback type=\"invalid\">\n      This field cannot be empty\n    </Form.Control.Feedback>\n    : null);\n\n  return (\n    <Form.Group controlId=\"exercise-title\">\n      <Form.Label>\n          Exercise title\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Enter exercise title\"\n        value={value}\n        isInvalid={!!feedback}\n        onChange={(e) => update(e.target.value)}\n      />\n      {feedback}\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectExerciseTitle;\n\nconst mapDispatchToProps = { update: updateExerciseTitle };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseTitle);\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  updateDescription,\n  selectDescription\n} from '../../redux/addExerciseSlice';\n\n\nfunction Description({ value, update }) {  \n  return (\n    <Form.Group controlId=\"exercise-description\">\n      <Form.Label>\n        Description\n      </Form.Label>\n      <Form.Control\n        as=\"textarea\"\n        placeholder=\"Enter description\"\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n    </Form.Group>\n  );\n}\n\nconst mapStateToProps = selectDescription;\n\nconst mapDispatchToProps = { update: updateDescription };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Description);\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nfunction SaveButtonGroup({ containsErrors, saveExercise}) {\n  return (\n    <Form.Group className=\"text-center text-md-right mb-4\">\n      <Button\n          variant=\"primary\"\n          size=\"lg\"\n          disabled={containsErrors}\n          onClick={saveExercise}\n      >\n          Save exercise\n      </Button>\n      {containsErrors &&\n        <Form.Text className=\"text-danger\">\n          Fix all errors above\n          in order to be able to save the exercise\n        </Form.Text>\n      }\n    </Form.Group>\n  );\n}\n\nexport default SaveButtonGroup;\n","import React from 'react';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  addNewExercise,\n  checkExercise,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\nimport LanguageSection from './LanguageSection';\nimport PropositionsSection from './PropositionsSection';\nimport ExerciseTitle from './ExerciseTitle';\nimport Description from './Description';\nimport SaveButtonGroup from './SaveButtonGroup';\n\nfunction AddExercise({ status, error, containsErrors, title, addExercise, added}) {\n  let content = null;\n  if (status === 'idle') {\n      if (added) {\n          content = (\n              <Alert variant=\"success\">\n                  Exercise <b>{ title }</b> was successfully added to the database.\n              </Alert>\n              );\n      }\n      else{\n          content = (      <Form>\n                  <h1>Add exercise</h1>\n                  <ExerciseTitle />\n                  <Description />\n                  <LanguageSection />\n                  <PropositionsSection />\n                  <SaveButtonGroup\n                    containsErrors={containsErrors}\n                    saveExercise={addExercise}\n                  />\n              </Form>\n          );\n      }\n  } else if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.addExercise.status,\n    added: state.addExercise.added,\n    error: state.addExercise.error,\n    containsErrors: checkExercise(state),\n    title: selectExerciseTitle(state).value\n  };\n};\n\nconst mapDispatchToProps = { addExercise: addNewExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExercise);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nfunction AdminRoute({ isLoggedIn, isAdmin, component: Component, location, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isLoggedIn) {\n            if(!isAdmin){\n                return <Redirect to={{ pathname: \"/\", state: { from: location } }} />;\n            }\n          return <Component {...props} />;\n        } else {\n          return <Redirect to={{ pathname: \"/login\", state: { from: location } }} />;\n        }\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n  };\n};\n\nexport default connect(mapStateToProps)(AdminRoute);\n","import React from 'react';\nimport {Spinner, Table} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport {useGetExercisesQuery} from \"../../redux/badFormalizationsSlice\";\nimport QueryError from '../common/QueryError';\n\nexport const Exercises = () => {\n    const {\n        data: exercises,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetExercisesQuery(undefined, {refetchOnMountOrArgChange: true})\n\n    let content = null;\n    if (isLoading) {\n        content = <Spinner animation=\"border\" variant=\"primary\"/>;\n    } else if (isSuccess) {\n        let exercises_list = exercises.map((exercise) => (\n            <tr key={exercise.exercise_id}>\n                <td>\n                    <Link to={`/progress/${exercise.exercise_id}`} key={exercise.exercise_id}>\n                        {exercise.title}\n                    </Link>\n                </td>\n                <td>{exercise.attempted}</td>\n            </tr>\n        ));\n        content =\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Exercise</th>\n                    <th>Students attempted</th>\n                </tr>\n                </thead>\n                <tbody>\n                {exercises_list}\n                </tbody>\n            </Table>\n    } else if (isError) {\n        content = <QueryError error={error} />;\n    }\n\n    return (\n        <div>\n            <h2 className=\"mb-4\">Student progress</h2>\n            {content}\n        </div>\n    );\n\n}\n","import React from 'react';\n\nexport const FeedbacksList = ({ exercise_id, proposition_id, feedback }) => {\n    return (\n        <a href={`/bad_formalizations/${exercise_id}/${proposition_id}`}>{feedback.slice(0, 25)}</a>\n    )\n}\n","import React, {useEffect} from 'react';\nimport {Alert, Spinner, Table} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {\n    fetchUsersSolutions,\n    selectError,\n    selectExerciseTitle,\n    selectStatus,\n    selectUserName,\n    selectUsersSolution\n} from \"../../redux/progressPropositionsSlice\";\nimport {FeedbacksList} from \"./FeedbacksList\";\n\n\nfunction UsersSolutionList({ solutions, status, error, title, match: { params: { exercise_id, user_name } }, fetchUsersSolutions })  {\n    useEffect( () => {\n        fetchUsersSolutions({exercise_id, user_name});\n    }, [exercise_id, user_name]);\n\n    let content = null;\n    if (status === 'loading') {\n        content = <Spinner animation=\"border\" variant=\"primary\" />;\n\n    } else if (status === 'succeeded') {\n        let s = [];\n        let table = [];\n        let proposition = null;\n        let first= false;\n\n        for(let i = 0; i < solutions.length; i++){\n            const solution = solutions[i]\n            let date = new Date(solution.date).toLocaleString('sk-SK')\n            const feedback_list = solution.feedbacks.map ( (f, index) => {\n                return (index > 0) ?\n                    <p className='d-inline'>, <FeedbacksList\n                            exercise_id={solution.exercise_id}\n                            proposition_id={solution.proposition_id}\n                            feedback_id={f.feedback_id}\n                            feedback={f.feedback}/></p> :\n                    <FeedbacksList\n                        exercise_id={solution.exercise_id}\n                        proposition_id={solution.proposition_id}\n                        feedback_id={f.feedback_id}\n                        feedback={f.feedback}/>\n            })\n            if(proposition === null){\n                proposition = solution.proposition;\n                first = true;\n            }\n            else if(proposition !== solution.proposition && first){\n                s.push(<h5   key={proposition} > {proposition}</h5>)\n                s.push(<Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>Date</th>\n                            <th>Solution</th>\n                            <th>Correct</th>\n                            <th>Feedbacks</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {table}\n                        </tbody>\n                    </Table>\n                );\n                table = [];\n                proposition = solution.proposition;\n            }\n            if(solution.is_correct){\n                table.push(\n                    <tr key={solution.solution_id}>\n                        <td>{date}</td>\n                        <td>{solution.solution}</td>\n                        <td>  &#x2713;</td>\n                        <td></td>\n                    </tr>)\n            }\n            else{\n                table.push(\n                    <tr key={solution.solution_id}>\n                        <td>{date}</td>\n                        <td>{solution.solution}</td>\n                        <td>  &#x2715;</td>\n                        <td>{feedback_list}</td>\n                    </tr>)\n            }\n        }\n\n        //last element of array\n        s.push(<h5 key={proposition}> {proposition}</h5>)\n        s.push(<Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Solution</th>\n                    <th>Correct</th>\n                    <th>Feedbacks</th>\n                </tr>\n                </thead>\n                <tbody>\n                {table}\n                </tbody>\n            </Table>\n        );\n\n        content = (\n            <div key={s}>{ s }</div>\n        );\n    } else if (status === 'failed') {\n        content = (\n            <Alert variant=\"danger\">\n                { error }\n            </Alert>\n        );\n    }\n\n    return (\n        <div>\n            <h2 className=\"mb-4\" style={{display: \"inline-block\"}}>{title}</h2>\n            <h4 className=\"mb-4\" style={{display: \"inline-block\", padding: \"0ex 1ex\"}}>by</h4>\n            <h2 className=\"mb-4\" style={{display: \"inline-block\"}}>{user_name}</h2>\n            { content }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        solutions: selectUsersSolution(state),\n        status: selectStatus(state),\n        error: selectError(state),\n        name: selectUserName(state),\n        title: selectExerciseTitle(state),\n    };\n};\n\nconst mapDispatchToProps = { fetchUsersSolutions };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersSolutionList);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport {\n    selectUsers,\n    selectStatus,\n    selectError,\n    selectExerciseTitle,\n    fetchAllUsersToExercise\n} from \"../../redux/progressPropositionsSlice\";\n\n\nfunction UsersToExercise({ users, status, error, title, match: { params: { exercise_id } }, fetchAllUsersToExercise })  {\n  useEffect( () => {\n        fetchAllUsersToExercise(exercise_id);\n  }, [exercise_id, fetchAllUsersToExercise]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n      let user_list = []\n      for(let i = 0; i < users.length; i++){\n          let date = new Date(users[i].last_attempt_date).toLocaleString('sk-SK')\n          if(users[i].last_attempt_correct){\n              user_list.push(<tr key={users[i].user_name}>\n                  <td>\n                      <Link to={`/progress/${users[i].exercise_id}/${users[i].user_name}`} key={users[i].user_name}>\n                          { users[i].user_name }\n                      </Link>\n                  </td>\n                  <td>{users[i].solved} </td>\n                  <td>{users[i].attempted} </td>\n                  <td>{users[i].successful_attempts}</td>\n                  <td>{users[i].attempts}</td>\n                  <td>{date} &#x2713;</td>\n                  </tr>\n                  )\n          }\n          else{\n              user_list.push(<tr key={users[i].user_name}>\n                  <td>\n                      <Link to={`/progress/${users[i].exercise_id}/${users[i].user_name}`} key={users[i].user_name}>\n                          { users[i].user_name }\n                      </Link>\n                  </td>\n                  <td>{users[i].solved} </td>\n                  <td>{users[i].attempted} </td>\n                  <td>{users[i].successful_attempts}</td>\n                  <td>{users[i].attempts}</td>\n                  <td>{date} &#x2715;</td>\n                  </tr>\n              )\n          }\n\n\n      }\n\n    content =<Table striped bordered hover>\n        <thead>\n        <tr>\n            <th> </th>\n            <th colSpan={2}>Propositions </th>\n            <th colSpan={2}>Attempt</th>\n            <th> </th>\n        </tr>\n        <tr>\n            <th>Student</th>\n            <th>Solved</th>\n            <th>Attempted</th>\n            <th>Successful</th>\n            <th>Total</th>\n            <th>Last attempt</th>\n        </tr>\n        </thead>\n        <tbody>\n        { user_list }\n        </tbody>\n    </Table>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n      <div>\n          <h2 className=\"mb-4\"> {title} </h2>\n          { content }\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectUsers(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    title: selectExerciseTitle(state),\n  };\n};\n\nconst mapDispatchToProps = { fetchAllUsersToExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersToExercise);\n","import React, { useEffect } from 'react';\nimport { Spinner, Alert, Table} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n    fetchAllExercisesToUser,\n    fetchUsersSolutions,\n    selectStatus,\n    selectExercises,\n    selectError\n} from '../../redux/progressPropositionsSlice';\n\nfunction ExercisesToUser({ exercises, status, error, fetchAllExercisesToUser, fetchUsersSolutions }) {\n    useEffect(() => {\n        fetchAllExercisesToUser();\n    }, [fetchAllExercisesToUser]);\n\n    let content = null;\n    if (status === 'loading') {\n        content = <Spinner animation=\"border\" variant=\"primary\" />;\n    } else if (status === 'succeeded') {\n        let exercises_list = []\n        for(let i = 0; i < exercises.length; i++){\n            let date = new Date(exercises[i].last_attempt_date).toLocaleString('sk-SK')\n            if(exercises[i].last_attempt_correct){\n                exercises_list.push(<tr key={exercises[i].user_name}>\n                    <td>\n                        <Link to={`/progress/${exercises[i].exercise_id}/${exercises[i].user_name}`}\n                              key={exercises[i].title} onClick={() => fetchUsersSolutions( {exercise_id: exercises[i].exercise_id, user_name: exercises[i].user_name})}>\n                            { exercises[i].title }\n                        </Link>\n                    </td>\n                    <td>{exercises[i].solved} </td>\n                    <td>{exercises[i].attempted} </td>\n                    <td>{exercises[i].successful_attempts}</td>\n                    <td>{exercises[i].attempts}</td>\n                    <td>{date} &#x2713;</td>\n                </tr>\n                )\n            }\n            else{\n                exercises_list.push(<tr key={exercises[i].user_name}>\n                    <td>\n                        <Link to={`/progress/${exercises[i].exercise_id}/${exercises[i].user_name}`}\n                              key={exercises[i].title} onClick={() => fetchUsersSolutions( {exercise_id: exercises[i].exercise_id, user_name: exercises[i].user_name})}>\n                            { exercises[i].title }\n                        </Link>\n                    </td>\n                    <td>{exercises[i].solved} </td>\n                    <td>{exercises[i].attempted} </td>\n                    <td>{exercises[i].successful_attempts}</td>\n                    <td>{exercises[i].attempts}</td>\n                    <td>{date} &#x2715;</td>\n                </tr>\n                )\n            }\n        }\n\n        content =<Table striped bordered hover>\n            <thead>\n            <tr>\n                <th> </th>\n                <th colSpan={2}>Propositions </th>\n                <th colSpan={2}>Attempt</th>\n                <th> </th>\n            </tr>\n            <tr>\n                <th>Exercise</th>\n                <th>Solved</th>\n                <th>Attempted</th>\n                <th>Successful</th>\n                <th>Total</th>\n                <th>Last attempt</th>\n            </tr>\n            </thead>\n            <tbody>\n            { exercises_list }\n            </tbody>\n        </Table>\n\n    } else if (status === 'failed') {\n        content = (\n            <Alert variant=\"danger\">\n                {error}\n            </Alert>\n        );\n    }\n\n    return (\n        <div>\n            <h2 className=\"mb-4\">Your progress</h2>\n            { content }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        exercises: selectExercises(state),\n        status: selectStatus(state),\n        error: selectError(state),\n    };\n};\n\nconst mapDispatchToProps = { fetchAllExercisesToUser, fetchUsersSolutions };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExercisesToUser);\n","import React, { useEffect } from 'react';\nimport {Spinner, Alert, Table, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n  selectStatus, selectError, addChanged, fetchAllUsers, saveAdmins,\n  selectAllUsers, selectChangedAdmins\n} from \"../../redux/adminsSlice\";\nimport {selectUser} from \"../../redux/userSlice\";\n\n\nfunction UserList({ users, user_name, status, error, fetchAllUsers, addChanged, changedAdmins, saveAdmins }) {\n  useEffect(() => {\n    if (status === 'idle') {\n      fetchAllUsers(user_name);\n    }\n  }, [status, fetchAllUsers]);\n\n  let content = null;\n  if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n    let user = users.map((x) => (\n        <tr key={x.user_name}>\n          <td>\n              { x.user_name }\n          </td>\n        <td> <input type=\"checkbox\" defaultChecked={x.is_admin} id={x.user_name} onChange={(e) => {addChanged(e.target.id)}}/> </td>\n\n        </tr>\n    ));\n    content =\n        <Form>\n        <Table striped bordered hover>\n          <thead>\n          <tr>\n            <th>Username</th>\n            <th>Is admin</th>\n          </tr>\n          </thead>\n          <tbody>\n          { user }\n          </tbody>\n        </Table>\n        </Form>\n\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">Users</h2>\n      { content }\n        <Button  onClick={(e) => {saveAdmins(changedAdmins)}}>Save admins</Button>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: selectAllUsers(state),\n    status: selectStatus(state),\n    error: selectError(state),\n    changedAdmins: selectChangedAdmins(state),\n    user_name: selectUser(state)\n  };\n};\n\nconst mapDispatchToProps = { fetchAllUsers, addChanged, saveAdmins };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","import React from 'react';\nimport { Row, Col, Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport {\n    saveExercise,\n    removeExercise,\n  checkExercise,\n  selectExerciseTitle\n} from '../../redux/addExerciseSlice';\nimport LanguageSection from '../addExercise/LanguageSection';\nimport PropositionsSection from '../addExercise/PropositionsSection';\nimport ExerciseTitle from '../addExercise/ExerciseTitle';\nimport Description from '../addExercise/Description';\nimport SaveButtonGroup from '../addExercise/SaveButtonGroup';\n\nfunction EditExercise({ status, error, title, containsErrors, removeExercise, saveExercise }) {\n  let content = null;\n  if (status === 'idle') {\n    content = (\n      <Form>\n        <h1>Editing <i>{title}</i></h1>\n        <ExerciseTitle />\n        <Description />\n        <LanguageSection />\n        <PropositionsSection />\n        <Row className=\"justify-content-end\">\n          <Col xs={12} md={{order: 2, span: 4}}>\n            <SaveButtonGroup\n              containsErrors={containsErrors}\n              saveExercise={saveExercise}\n            />\n          </Col>\n          <Col xs={12} md={{order:1, span: 4, offset: 4}} className=\"text-center\">\n            <Button\n                variant=\"outline-danger\"\n                size=\"lg\"\n                onClick={removeExercise}\n            >\n                Remove exercise\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  } else if (status === 'loading') {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (status === 'succeeded') {\n      content = (\n      <Alert variant=\"success\">\n        Exercise was successfully changed in the database.\n      </Alert>\n    );\n  } else if (status === 'removed') {\n    content = (\n      <Alert variant=\"success\">\n        Exercise  was successfully removed from database.\n      </Alert>\n    );\n  } else if (status === 'failed') {\n    content = (\n      <Alert variant=\"danger\">\n        { error }\n      </Alert>\n    );\n  }\n\n  return content;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    status: state.addExercise.status,\n    error: state.addExercise.error,\n    containsErrors: checkExercise(state),\n    title: selectExerciseTitle(state).value\n  };\n};\n\nconst mapDispatchToProps = {saveExercise, removeExercise };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExercise);\n","import React from 'react';\nimport { ListGroup, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  fetchSavedExercise\n} from '../../redux/addExerciseSlice';\nimport {useGetExercisesQuery} from \"../../redux/badFormalizationsSlice\";\nimport QueryError from '../common/QueryError';\n\n\nfunction EditExerciseList({ fetchSavedExercise }) {\n  const {\n    data: exercises,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetExercisesQuery(undefined, {refetchOnMountOrArgChange: true})\n\n  let content = null;\n  if (isLoading) {\n    content = <Spinner animation=\"border\" variant=\"primary\" />;\n  } else if (isSuccess) {\n    let exercises_list = exercises.map((x) => (\n      <ListGroup.Item\n        as={Link} to={`/edit/${x.exercise_id}`} key={x.exercise_id}\n        action\n        onClick={() => fetchSavedExercise(x.exercise_id)}\n      >\n        { x.title }\n      </ListGroup.Item>\n    ));\n    content = <ListGroup>{ exercises_list }</ListGroup>;\n  } else if (isError) {\n    content = <QueryError error={error} />;\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb-4\">Edit exercises</h1>\n      { content }\n    </div>\n  );\n}\n\nconst mapDispatchToProps = { fetchSavedExercise };\n\nexport default connect(null, mapDispatchToProps)(EditExerciseList);\n","import React from 'react';\nimport {Spinner, Table} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport {useGetBadExercisesQuery} from \"../../redux/badFormalizationsSlice\";\nimport QueryError from '../common/QueryError';\n\nexport const BadExercises = () => {\n    const {\n        data: exercises,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetBadExercisesQuery(undefined, {refetchOnMountOrArgChange: true})\n\n    let content\n\n    if (isLoading) {\n        content = <Spinner animation=\"border\" variant=\"primary\"/>;\n    } else if (isSuccess) {\n\n        let exercises_list = exercises.map((exercise) => (\n            <tr key={exercise.exercise_id}>\n                <td>\n                    <Link to={`/bad_formalizations/${exercise.exercise_id}`} key={exercise.exercise_id}>\n                        {exercise.title}\n                    </Link>\n                </td>\n                <td>{exercise.bad_formalizations}</td>\n                <td>{exercise.students}</td>\n            </tr>\n        ));\n        content =\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Exercise</th>\n                    <th>Bad formalizations</th>\n                    <th>Students</th>\n                </tr>\n                </thead>\n                <tbody>\n                {exercises_list}\n                </tbody>\n            </Table>\n    } else if (isError) {\n        content = <QueryError error={error} />;\n    }\n\n    return (\n        <div>\n            <h2 className=\"mb-4\">Bad formalizations</h2>\n            {content}\n        </div>\n    );\n}\n","import React from 'react';\nimport { Spinner, Table } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\nimport {useGetBadPropositionsQuery} from \"../../redux/badFormalizationsSlice\";\nimport QueryError from '../common/QueryError';\n\nexport const BadPropositionsToExercise = ({ match }) => {\n    const {exercise_id} = match.params\n    const {\n        data: exercise,\n        isFetching,\n        isSuccess,\n        isError,\n        error\n    } = useGetBadPropositionsQuery(exercise_id)\n\n    let content\n    let badPropositions;\n    let title;\n\n    if (isFetching) {\n        content = <Spinner animation=\"border\" variant=\"primary\" />;\n    } else if (isSuccess) {\n        badPropositions = exercise.propositions;\n        title = exercise.title1;\n\n        let propositions_list = badPropositions.map((proposition) => {\n            return (\n                <tr key={proposition.proposition}>\n                    <td>\n                        <Link to={`/bad_formalizations/${exercise_id}/${proposition.proposition_id}`} key={proposition.proposition_id}>\n                            { proposition.proposition }\n                        </Link>\n                    </td>\n                    <td>{ proposition.bad_formalizations }</td>\n                    <td>{ proposition.students }</td>\n                </tr>);\n        });\n        content =\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Proposition</th>\n                    <th>Bad formalizations</th>\n                    <th>Students</th>\n                </tr>\n                </thead>\n                <tbody>\n                { propositions_list }\n                </tbody>\n            </Table>;\n    } else if (isError) {\n        content = <QueryError error={error} />;\n    }\n\n    return (\n        <div>\n            <h2 className=\"mb-4\">{ title }</h2>\n            {content}\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {useAddFeedbackMutation} from \"../../redux/feedbacksSlice\";\n\nexport const AddFeedback = ({ bad_formalization_id}) => {\n    const [feedback, setFeedback] = useState('')\n    const [addFeedback] = useAddFeedbackMutation()\n\n    const onSubmit = async () => {\n        setFeedback('')\n        await addFeedback({ feedback: feedback, bad_formalization_id }).unwrap()\n    };\n\n    return (\n        <div className=\"clearfix mt-2\">\n            <h6 className=\"my-2 px-4\">Add feedback</h6>\n            <Form.Group className=\"clearfix px-4 pb-1\">\n                <Form.Control\n                    className=\"mr-2\"\n                    type=\"text\"\n                    as=\"textarea\"\n                    rows={2}\n                    placeholder=\"Enter exercise title\"\n                    value={feedback}\n                    onChange={(e) => setFeedback(e.target.value)}\n                />\n                <Button\n                    className=\"mt-2 float-right\"\n                    variant=\"primary\"\n                    size=\"sm\"\n                    onClick={onSubmit}\n                >\n                    Add\n                </Button>\n            </Form.Group>\n        </div>\n    );\n\n}\n","import React, {useEffect, useState} from 'react';\nimport {Form} from 'react-bootstrap';\nimport {useUpdateFeedbackMutation} from \"../../redux/feedbacksSlice\";\n\nexport const Checkbox = ({ value, id }) => {\n    const [\n        updateFeedback\n    ] = useUpdateFeedbackMutation()\n\n    const [isActive, setIsActive] = useState(value)\n\n    useEffect(async () => {\n        if (value !== isActive)\n            await updateFeedback({id: id, isActive: isActive})\n    }, [isActive])\n\n    const handleChange = () => {\n        setIsActive(!isActive);\n    };\n\n    return (\n        <Form.Check\n            inline\n            type=\"checkbox\"\n            // type=\"switch\"\n            label=\"Active\"\n            name={id}\n            checked={isActive}\n            onChange={handleChange}\n        />\n    )\n}\n","import React from 'react';\nimport {ListGroup, Spinner} from 'react-bootstrap';\nimport {HandThumbsDownFill, HandThumbsUpFill} from \"react-bootstrap-icons\";\nimport {useGetFeedbacksQuery} from \"../../redux/feedbacksSlice\";\nimport {AddFeedback} from \"./AddFeedback\";\nimport {Checkbox} from \"./Checkbox\";\nimport QueryError from '../common/QueryError';\n\nexport const Feedbacks = ({ i, bad_formalization_id }) => {\n    const {\n        data: feedback,\n        isFetching,\n        isSuccess,\n        isError,\n        error\n    } = useGetFeedbacksQuery({bad_formalization_id}, {refetchOnMountOrArgChange: true })\n\n    let content\n\n    if (isFetching) {\n        content = <Spinner animation=\"border\" variant=\"primary\" />;\n    } else if (isSuccess) {\n\n        content = feedback.map((f) => {\n            return (\n                <ListGroup.Item as=\"li\">\n                    <div className=\"d-flex justify-content-between\">\n                        {f.author}\n                        <Checkbox id={f.feedback_id} value={f.active}/>\n                    </div>\n                    <div>{f.feedback}</div>\n                    <div>shown: {f.shown}, rating: <HandThumbsUpFill/>{f.likes}, <HandThumbsDownFill/>{f.dislikes}</div>\n                </ListGroup.Item>\n            )\n        });\n\n    } else if (isError) {\n        content = (\n            <QueryError as={ListGroup.Item} error={error} />\n        );\n    }\n\n    return (\n        <div className=\"clearfix\">\n            <h5 className=\"mt-2 px-4\">Feedback</h5>\n            <ListGroup as=\"ol\" className=\"list-group-flush border-top border-bottom\">\n                { content }\n            </ListGroup>\n            <AddFeedback key={i} bad_formalization_id={bad_formalization_id} />\n        </div>\n    );\n\n}\n","import React from 'react';\nimport {Card, Spinner} from 'react-bootstrap';\nimport {Feedbacks} from \"./Feedbacks\";\nimport {useGetBadFormalizationInfoQuery} from \"../../redux/badFormalizationsSlice\";\nimport QueryError from '../common/QueryError';\n\nexport const Cards = ({ i, bad_formalization_id, exercise_id, students }) => {\n    const {\n        data: bad_formalization,\n        isFetching,\n        isSuccess,\n        isError,\n        error\n    } = useGetBadFormalizationInfoQuery({exercise_id, bad_formalization_id})\n\n    let content\n\n    if (isFetching) {\n        content = <Spinner animation=\"border\" variant=\"primary\" />;\n    } else if (isSuccess) {\n        let formalizations;\n        let students_list = students.map((s) => (\n            <a className=\"my-0 pl-4 text-muted d-block\" href={`/progress/${exercise_id}/${s.user_name}`}>{s.user_name}</a>\n            )\n        );\n        if (bad_formalization.bad_solutions !== null) {\n            let badSolutions = bad_formalization.bad_solutions.map((f) => (\n                <Card.Text className=\"my-1 pl-4 text-muted\" >\n                    {f.solution}\n                </Card.Text>\n            ));\n            formalizations = (\n                <details>\n                    <summary className=\"mt-2\">{bad_formalization.bad_solutions.length} equivalent\n                        bad formalization(s)</summary>\n                    { badSolutions }\n                </details>\n            )\n        }\n\n        content = (\n            <div>\n                <Card.Body className=\"pt-4 pb-0 px-4\">\n                    <h5 className=\"card-title\">{bad_formalization.bad_formalization}</h5>\n                    <details>\n                        <summary className=\"mt-2\">students: {students.length}</summary>\n                        { students_list }\n                    </details>\n                    { formalizations }\n                </Card.Body>\n                <Feedbacks key={i} i={i} bad_formalization_id={bad_formalization_id}/>\n            </div>\n        )\n\n    } else if (isError) {\n        content = (\n            <QueryError error={error} />\n        );\n    }\n\n    return (\n        <Card>\n            { content }\n        </Card>\n    );\n\n}\n","import React from 'react';\nimport {Spinner} from 'react-bootstrap';\nimport {\n    useGetBadFormalizationsQuery\n} from \"../../redux/badFormalizationsSlice\";\nimport {Cards} from \"./Cards\";\nimport QueryError from '../common/QueryError';\n\nexport const BadFormalizationsToProposition = ({ match }) => {\n    const {exercise_id, proposition_id} = match.params\n    const {\n        data: proposition,\n        isFetching,\n        isSuccess,\n        isError,\n        error\n    } = useGetBadFormalizationsQuery({exercise_id, proposition_id})\n\n    let content\n    let exerciseTitle\n    let propositionTitle\n    let formalization = null\n    if (isFetching) {\n        content = <Spinner animation=\"border\" variant=\"primary\" />;\n    } else if (isSuccess) {\n        exerciseTitle = proposition.title1;\n        propositionTitle = proposition.title2;\n        let formalizations = proposition.formalizations;\n        let badFormalizations = proposition.bad_formalizations;\n\n        formalization = formalizations.map((x) => (\n            <h5 className=\"mb-1\">{ x.formalization }</h5>\n        ));\n\n        content = badFormalizations.map((representative, i) => {\n            return (\n                <div className=\"m-2 mb-3\">\n                    <Cards key={i} i={i}\n                           bad_formalization_id={representative.bad_formalization_id}\n                           exercise_id={exercise_id}\n                           students={representative.students}>\n                    </Cards>\n                </div>\n            )\n        });\n    } else if (isError) {\n        content = <QueryError error={error} />;\n    }\n\n    return (\n        <div>\n            <h2 className=\"mb-3\">{ exerciseTitle }</h2>\n            <h3 className=\"mb-2\">{ propositionTitle }</h3>\n            <div className=\"mb-4\">\n                <p className=\"mb-0\">correct formalization(s) </p>\n                { formalization }\n            </div>\n            { content }\n        </div>\n    );\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  Container, Alert, Button, Navbar, Nav\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport ProtectedRoute from './components/login/ProtectedRoute';\nimport LoginForm from './components/login/LoginForm';\nimport ExerciseList from './components/solveExercise/ExerciseList';\nimport SolveExercise from './components/solveExercise/SolveExercise';\nimport AddExercise from './components/addExercise/AddExercise';\nimport {logOut} from './redux/userSlice';\nimport AdminRoute from \"./components/login/AdminRoute\";\nimport {Exercises} from \"./components/studentProgress/Exercises\";\nimport UserSolutionsList from \"./components/studentProgress/UserSolutionsList\";\nimport UsersToExercise from \"./components/studentProgress/UsersToExercise\";\nimport ExercisesToUser from \"./components/userProgress/ExercisesToUser\";\nimport UserList from \"./components/addAdmins/UserList\";\nimport {BASE_NAME} from \"./config\";\nimport {changeStatus} from \"./redux/addExerciseSlice\";\nimport EditExercise from \"./components/editExercise/EditExercise\";\nimport EditExerciseList from \"./components/editExercise/EditExerciseList\";\nimport {BadExercises} from \"./components/badFormalizations/BadExercises\";\nimport {BadPropositionsToExercise} from \"./components/badFormalizations/BadPropositionsToExercise\";\nimport {BadFormalizationsToProposition} from \"./components/badFormalizations/BadFormalizationsToProposition\";\n\n\nfunction App({ isLoggedIn, user, logOut, changeStatus, isAdmin }) {\n  let loginInfo = null;\n  if (isLoggedIn) {\n    loginInfo = (\n      <React.Fragment>\n        <span className=\"px-4 my-auto text-info\">\n          You are logged in as <b>{ user.username }</b>\n        </span>\n        <Button as={Link} to=\"/\" onClick={() => logOut()}>\n          Log out\n        </Button>\n      </React.Fragment>\n    );\n  } else {\n    loginInfo = (\n      <Button as={Link} to=\"/login\">\n        Log in\n      </Button>\n    );\n  }\n  if(!isAdmin){\n    return (\n        <BrowserRouter basename={BASE_NAME}>\n          <div className=\"App\">\n            <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link className=\"px-4\" as={Link} to=\"/\">\n                  Home\n                </Nav.Link>\n                <Nav.Link className=\"px-4\" as={Link} to=\"/progress\">\n                  Your progress\n                </Nav.Link>\n              </Nav>\n\n              <Nav>\n                { loginInfo }\n              </Nav>\n\n            </Navbar>\n            <Container className=\"my-3\">\n              <Switch>\n                <ProtectedRoute exact path=\"/\" component={ExerciseList} />\n                <Route exact path=\"/login\" component={LoginForm} />\n                <ProtectedRoute path=\"/solve/:id\" component={SolveExercise} />\n                <ProtectedRoute exact path=\"/progress\" component={ExercisesToUser} />\n                <ProtectedRoute exact path=\"/progress/:exercise_id/:user_name\" component={UserSolutionsList} />\n\n                <Route path=\"*\" component={() => {\n                  return <Alert variant=\"danger\">404 Not Found</Alert>\n                }} />\n              </Switch>\n            </Container>\n          </div>\n        </BrowserRouter>\n    );\n  }\n  return (\n    <BrowserRouter basename={BASE_NAME}>\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link className=\"px-4\" as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/add\">\n              Add\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/edit\">\n              Edit\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/progress\">\n              Student progress\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/bad_formalizations\">\n              Bad formalizations\n            </Nav.Link>\n            <Nav.Link className=\"px-4\" as={Link} to=\"/admins\">\n              Admin\n            </Nav.Link>\n          </Nav>\n\n          <Nav>\n            { loginInfo }\n          </Nav>\n\n          </Navbar>\n        <Container className=\"my-3\">\n          <Switch>\n            <ProtectedRoute exact path=\"/\" component={ExerciseList} />\n            <AdminRoute exact path=\"/admins\" component={UserList} />\n            <AdminRoute exact path=\"/progress\" component={Exercises} />\n            <AdminRoute exact path=\"/progress/:exercise_id\" component={UsersToExercise} />\n            <AdminRoute exact path=\"/progress/:exercise_id/:user_name\" component={UserSolutionsList} />\n            <Route exact path=\"/login\" component={LoginForm} />\n            <ProtectedRoute path=\"/solve/:id\" component={SolveExercise} />\n            <AdminRoute exact path=\"/add\" component={AddExercise} />\n            <AdminRoute exact path=\"/edit\" component={EditExerciseList} />\n            <AdminRoute exact path=\"/edit/:id\" component={EditExercise} />\n            <AdminRoute exact path=\"/bad_formalizations\" component={BadExercises} />\n            <AdminRoute exact path=\"/bad_formalizations/:exercise_id\" component={BadPropositionsToExercise} />\n            <AdminRoute exact path=\"/bad_formalizations/:exercise_id/:proposition_id\" component={BadFormalizationsToProposition} />\n\n            <Route path=\"*\" component={() => {\n              return <Alert variant=\"danger\">404 Not Found</Alert>\n            }} />\n          </Switch>\n        </Container>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    isAdmin: state.user.isAdmin,\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = { logOut, changeStatus };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport initStore from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BACKEND_URL } from './config';\n\nconst store = initStore(BACKEND_URL);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore } from '@reduxjs/toolkit';\nimport addExerciseReducer from './addExerciseSlice';\nimport progressPropositionsReducer from './progressPropositionsSlice';\nimport solveExerciseReducer from './solveExerciseSlice';\nimport userReducer from './userSlice';\nimport adminsReducer from './adminsSlice';\nimport { badFormalizationsSlice } from './badFormalizationsSlice';\nimport { feedbacksSlice } from './feedbacksSlice';\nimport backendReducer from './backendSlice';\n\nexport default function (backendUrl) {\n  return configureStore({\n    reducer: {\n      addExercise: addExerciseReducer,\n      propositions: progressPropositionsReducer,\n      allUsers: adminsReducer,\n      solveExercise: solveExerciseReducer,\n      user: userReducer,\n      backend: backendReducer(backendUrl),\n      [badFormalizationsSlice.reducerPath]: badFormalizationsSlice.reducer,\n      [feedbacksSlice.reducerPath]: feedbacksSlice.reducer,\n    },\n    middleware: getDefaultMiddleware =>\n      getDefaultMiddleware().concat(badFormalizationsSlice.middleware, feedbacksSlice.middleware)\n  });\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport default function(url) {\n  return createSlice({name: 'backend', initialState: {url}}).reducer;\n}","const dotenv = require('dotenv');\n\ndotenv.config();\n\nmodule.exports = {\n     BACKEND_URL: process.env.REACT_APP_BACKEND_URL,\n     CLIENT_ID: process.env.REACT_APP_CLIENT_ID,\n     REDIRECT: process.env.REACT_APP_REDIRECT,\n     BASE_NAME: process.env.REACT_APP_BASE_NAME\n}\n\n"],"sourceRoot":""}